{
  "info": {
    "_postman_id": "5593a99b-8522-47dc-bc8e-700e7e51ccff",
    "name": "assessments-api",
    "description": "# Introduction\nWhat does your API do?\n\n# Overview\nThings that the developers should know about\n\n# Authentication\nWhat is the preferred way of using the API?\n\n# Error Codes\nWhat errors and status codes can a user expect?\n\n# Rate limit\nIs there a limit to the number of requests an user can send?",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "v1",
      "item": [
        {
          "name": "status",
          "item": [
            {
              "name": "/v1/status",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6288458a-df9a-4490-a7e3-f86ebe7fa50c",
                    "exec": [
                      "// Get environment",
                      "var env = pm.environment.get(\"env\")",
                      "var meanResponseTime = 40",
                      "",
                      "//Get meanResponseTime",
                      "switch(env) {",
                      "  case \"dev\":",
                      "  case \"staging\":",
                      "    meanResponseTime = 1000",
                      "    break;",
                      "  default:",
                      "    meanResponseTime = 40",
                      "}",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Body contains status\", function () {",
                      "    pm.response.to.have.jsonBody(\"status\");",
                      "});",
                      "",
                      "pm.test(\"Response time is within given time limit (\" + meanResponseTime + \"ms)\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(meanResponseTime);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "0b13a42d-2ab9-4fe5-841a-8f948f5f5e29",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [],
                "url": "{{host}}/v1/status",
                "description": "## Test endpoint for API integration. This should always return 200."
              },
              "response": []
            }
          ],
          "_postman_id": "c1dc0dcb-fd79-4a22-865c-17d42338d18d",
          "_postman_isSubFolder": true
        },
        {
          "name": "questions",
          "item": [
            {
              "name": "variations",
              "item": [
                {
                  "name": "/v1/questions/:question/variations",
                  "_postman_id": "f4e0971e-7d4a-4dd6-b38c-ef8e9a985426",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/questions/{{qId}}/variations",
                    "description": "## List Question Variations objects\n\n`GET /v1/questions/:question/variations`\n\nSegment Parameters:\n* **question** (string) - Question id that variation belongs to\n\nGET Parameters:\n* **filters** (array), optional - One or more filters\n* **sorts** (array), optional - One or more sorting parameters\n* **limit** (integer), optional - Limit on the result set\n* **offset** (integer), optional - Offset on the result set\n* **count** (boolean), optional - If set to true Response:X-Results-Total header will show total count in result set (regardless of any limit and offset set)\n\nFilter Types:\n* **variation.id**\n* **variation.text**\n* **variation.createdAt**\n* **variation.updatedAt**\n* **variation.deletedAt**\n* **question.id**\n* **question.name**\n* **question.createdAt**\n* **question.updatedAt**\n* **question.deletedAt**\n\nSort Types:\n* **variation.id**\n* **variation.text**\n* **variation.createdAt**\n* **variation.updatedAt**\n* **variation.deletedAt**\n* **question.id**\n* **question.name**\n* **question.createdAt**\n* **question.updatedAt**\n* **question.deletedAt**\n\n### Request:\n`GET /v1/questions/SQzWmi0FbhtH/variations`\n\n### Response - 200 OK:\nX-Results-Total 2\n```\n[\n    {\n        \"id\": \"0cAF7kSvLpJ1\",\n        \"text\": \"Are you interested in?\",\n        \"createdAt\": {\n            \"date\": \"2019-03-12 11:44:33.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"LXGuPccmoS91\",\n        \"text\": \"Are you interested in?\",\n        \"createdAt\": {\n            \"date\": \"2019-03-12 13:12:53.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"value for index 0, part 2 (field) must be one of (variation.id, variation.text, variation.createdAt, variation.updatedAt, variation.deletedAt)\",\n    \"code\": 4000101\n}\n```"
                  },
                  "response": [
                    {
                      "id": "3ba7d163-6124-4c4e-a83b-c7b3ecd3bc04",
                      "name": "/v1/questions/:question/variations",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": "{{host}}/v1/questions/{{qId}}/variations"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Server",
                          "value": "nginx/1.15.6"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Transfer-Encoding",
                          "value": "chunked"
                        },
                        {
                          "key": "Connection",
                          "value": "keep-alive"
                        },
                        {
                          "key": "Cache-Control",
                          "value": "no-cache, private"
                        },
                        {
                          "key": "Date",
                          "value": "Fri, 15 Mar 2019 14:13:31 GMT"
                        },
                        {
                          "key": "X-Debug-Token",
                          "value": "263233"
                        },
                        {
                          "key": "X-Debug-Token-Link",
                          "value": "http://localhost:8001/_profiler/263233"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    {\n        \"id\": \"0cAF7kSvLpJ1\",\n        \"text\": \"Are you interested in?\",\n        \"createdAt\": {\n            \"date\": \"2019-03-12 11:44:33.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"LXGuPccmoS91\",\n        \"text\": \"Are you interested in?\",\n        \"createdAt\": {\n            \"date\": \"2019-03-12 13:12:53.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"6wEH4fSTeEvs\",\n        \"text\": \"Would you be interested in?\",\n        \"createdAt\": {\n            \"date\": \"2019-03-12 11:37:49.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]"
                    },
                    {
                      "id": "e19856fe-7dea-466b-9fad-220942b6f51b",
                      "name": "/v1/questions/:question/variations - Limit",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{host}}/v1/questions/{{qId}}/variations?limit=2",
                          "host": [
                            "{{host}}"
                          ],
                          "path": [
                            "v1",
                            "questions",
                            "{{qId}}",
                            "variations"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "2"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Server",
                          "value": "nginx/1.15.6"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Transfer-Encoding",
                          "value": "chunked"
                        },
                        {
                          "key": "Connection",
                          "value": "keep-alive"
                        },
                        {
                          "key": "Cache-Control",
                          "value": "no-cache, private"
                        },
                        {
                          "key": "Date",
                          "value": "Fri, 15 Mar 2019 14:15:04 GMT"
                        },
                        {
                          "key": "X-Debug-Token",
                          "value": "2fe994"
                        },
                        {
                          "key": "X-Debug-Token-Link",
                          "value": "http://localhost:8001/_profiler/2fe994"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    {\n        \"id\": \"0cAF7kSvLpJ1\",\n        \"text\": \"Are you interested in?\",\n        \"createdAt\": {\n            \"date\": \"2019-03-12 11:44:33.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"LXGuPccmoS91\",\n        \"text\": \"Are you interested in?\",\n        \"createdAt\": {\n            \"date\": \"2019-03-12 13:12:53.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]"
                    },
                    {
                      "id": "d4c268b9-d565-4c81-a501-f1e595cb8d19",
                      "name": "/v1/questions/:question/variations - Limit and Offset",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{host}}/v1/questions/{{qId}}/variations?limit=2&offset=1",
                          "host": [
                            "{{host}}"
                          ],
                          "path": [
                            "v1",
                            "questions",
                            "{{qId}}",
                            "variations"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "2"
                            },
                            {
                              "key": "offset",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Server",
                          "value": "nginx/1.15.6"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Transfer-Encoding",
                          "value": "chunked"
                        },
                        {
                          "key": "Connection",
                          "value": "keep-alive"
                        },
                        {
                          "key": "Cache-Control",
                          "value": "no-cache, private"
                        },
                        {
                          "key": "Date",
                          "value": "Fri, 15 Mar 2019 14:15:42 GMT"
                        },
                        {
                          "key": "X-Debug-Token",
                          "value": "559373"
                        },
                        {
                          "key": "X-Debug-Token-Link",
                          "value": "http://localhost:8001/_profiler/559373"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    {\n        \"id\": \"LXGuPccmoS91\",\n        \"text\": \"Are you interested in?\",\n        \"createdAt\": {\n            \"date\": \"2019-03-12 13:12:53.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"6wEH4fSTeEvs\",\n        \"text\": \"Would you be interested in?\",\n        \"createdAt\": {\n            \"date\": \"2019-03-12 11:37:49.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]"
                    },
                    {
                      "id": "944e64ff-dcd4-4f47-be67-132b50d64197",
                      "name": "/v1/questions/:question/variations - Sorts",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{host}}/v1/questions/{{qId}}/variations?sorts[]=variation.id-asc",
                          "host": [
                            "{{host}}"
                          ],
                          "path": [
                            "v1",
                            "questions",
                            "{{qId}}",
                            "variations"
                          ],
                          "query": [
                            {
                              "key": "sorts[]",
                              "value": "variation.id-asc"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Server",
                          "value": "nginx/1.15.6"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Transfer-Encoding",
                          "value": "chunked"
                        },
                        {
                          "key": "Connection",
                          "value": "keep-alive"
                        },
                        {
                          "key": "Cache-Control",
                          "value": "no-cache, private"
                        },
                        {
                          "key": "Date",
                          "value": "Fri, 15 Mar 2019 14:16:07 GMT"
                        },
                        {
                          "key": "X-Debug-Token",
                          "value": "5dfb7d"
                        },
                        {
                          "key": "X-Debug-Token-Link",
                          "value": "http://localhost:8001/_profiler/5dfb7d"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    {\n        \"id\": \"0cAF7kSvLpJ1\",\n        \"text\": \"Are you interested in?\",\n        \"createdAt\": {\n            \"date\": \"2019-03-12 11:44:33.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"6wEH4fSTeEvs\",\n        \"text\": \"Would you be interested in?\",\n        \"createdAt\": {\n            \"date\": \"2019-03-12 11:37:49.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"LXGuPccmoS91\",\n        \"text\": \"Are you interested in?\",\n        \"createdAt\": {\n            \"date\": \"2019-03-12 13:12:53.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]"
                    }
                  ]
                },
                {
                  "name": "/v1/questions/:question/variations",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fba8f91a-9877-4fb9-ac07-061ea3de91cf",
                        "exec": [
                          "// Parsing the response returned by the request.",
                          "var jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test(\"Body contains id\", function () {",
                          "    pm.response.to.have.jsonBody(\"id\");",
                          "});",
                          "",
                          "pm.test(\"Body contains text\", function () {",
                          "    pm.response.to.have.jsonBody(\"text\");",
                          "});",
                          "",
                          "pm.test(\"Body contains createdAt\", function () {",
                          "    pm.response.to.have.jsonBody(\"createdAt\");",
                          "});",
                          "",
                          "pm.test(\"Body contains updatedAt\", function () {",
                          "    pm.response.to.have.jsonBody(\"updatedAt\");",
                          "});",
                          "",
                          "pm.test(\"Body contains deletedAt\", function () {",
                          "    pm.response.to.have.jsonBody(\"deletedAt\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "40dcf1a9-6484-4286-a85a-958089cdd26a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"text\": \"Hi\\n, I'm Ali, a Digital Assistant, calling on behalf of a client about a job we have matched you for.\\nWould you be interested in to hear more about a job opportunity that we have found for you?\"\n}"
                    },
                    "url": "{{host}}/v1/questions/{{qId}}/variations",
                    "description": "## Create a new question variation in a collection\n\n`POST /v1/questions/:question/variations`\n\nSegment Parameters:\n* **question** (string) - Question id that variation belongs to\n\n\nPOST Parameters:\n* **text** (string), required - Question variation text (substance of the question)\n\n### Request:\n`POST /v1/questions/FuEMDRZD0eDX/variations`\n\n```\n{\n\t\"text\": \"Are you interested in?\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"Iubd3qJOpRby\",\n    \"text\": \"Are you interested in?\",\n    \"createdAt\": {\n        \"date\": \"2019-03-15 14:19:17.211645\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"test\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": [
                    {
                      "id": "89cc7fa5-bddb-4528-a3ba-58527a6b776f",
                      "name": "/v1/questions",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"name\": \"Express your interests\"\n}"
                        },
                        "url": "{{host}}/v1/questions"
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Server",
                          "value": "nginx/1.15.6"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Transfer-Encoding",
                          "value": "chunked"
                        },
                        {
                          "key": "Connection",
                          "value": "keep-alive"
                        },
                        {
                          "key": "Cache-Control",
                          "value": "no-cache, private"
                        },
                        {
                          "key": "Date",
                          "value": "Mon, 11 Mar 2019 12:26:12 GMT"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"id\": \"2RPN5xIjrqBO\",\n    \"name\": \"Express your interests\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:26:12.457624\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}"
                    }
                  ]
                },
                {
                  "name": "/v1/questions/:question/variations/:id",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bb8e88c9-fc70-497d-92d9-85ab68f5ddf5",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Body contains id\", function () {",
                          "    pm.response.to.have.jsonBody(\"id\");",
                          "});",
                          "",
                          "pm.test(\"Body contains text\", function () {",
                          "    pm.response.to.have.jsonBody(\"text\");",
                          "});",
                          "",
                          "pm.test(\"Body contains createdAt\", function () {",
                          "    pm.response.to.have.jsonBody(\"createdAt\");",
                          "});",
                          "",
                          "pm.test(\"Body contains updatedAt\", function () {",
                          "    pm.response.to.have.jsonBody(\"updatedAt\");",
                          "});",
                          "",
                          "pm.test(\"Body contains deletedAt\", function () {",
                          "    pm.response.to.have.jsonBody(\"deletedAt\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "e232123b-e2fe-45e8-a52d-bb920cd689eb",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/questions/{{qId}}/variations/{{vId}}",
                    "description": "## Reads Question variation details\n\n`GET /v1/questions/:question/variations/:id`\n\nSegment Parameters:\n* **question** (string) - Question id that variation belongs to\n* **id** (string) - Variation id\n\n### Request:\n`GET /v1/questions/FuEMDRZD0eDX/variations/Iubd3qJOpRby`\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"Iubd3qJOpRby\",\n    \"text\": \"Are you interested in?\",\n    \"createdAt\": {\n        \"date\": \"2019-03-15 14:19:17.211645\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Question variation not found\",\n    \"code\": 0\n}\n```"
                  },
                  "response": [
                    {
                      "id": "6d4a8776-bf74-4e3d-94ab-b25b2a472cb5",
                      "name": "/v1/questions/:question/variations/:id",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": "{{host}}/v1/questions/{{qId}}/variations/{{vId}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Server",
                          "value": "nginx/1.15.6"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Transfer-Encoding",
                          "value": "chunked"
                        },
                        {
                          "key": "Connection",
                          "value": "keep-alive"
                        },
                        {
                          "key": "Cache-Control",
                          "value": "no-cache, private"
                        },
                        {
                          "key": "Date",
                          "value": "Fri, 15 Mar 2019 14:24:14 GMT"
                        },
                        {
                          "key": "X-Debug-Token",
                          "value": "0c6e47"
                        },
                        {
                          "key": "X-Debug-Token-Link",
                          "value": "http://localhost:8001/_profiler/0c6e47"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"id\": \"Iubd3qJOpRby\",\n    \"text\": \"Are you interested in?\",\n    \"createdAt\": {\n        \"date\": \"2019-03-15 14:19:17.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}"
                    }
                  ]
                },
                {
                  "name": "/v1/questions/:question/variations/:id",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9c432e0a-e50b-4ac3-a170-abbc52e79537",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Body contains id\", function () {",
                          "    pm.response.to.have.jsonBody(\"id\");",
                          "});",
                          "",
                          "pm.test(\"Body contains name\", function () {",
                          "    pm.response.to.have.jsonBody(\"name\");",
                          "});",
                          "",
                          "pm.test(\"Body contains createdAt\", function () {",
                          "    pm.response.to.have.jsonBody(\"createdAt\");",
                          "});",
                          "",
                          "pm.test(\"Body contains updatedAt\", function () {",
                          "    pm.response.to.have.jsonBody(\"updatedAt\");",
                          "});",
                          "",
                          "pm.test(\"Body contains deletedAt\", function () {",
                          "    pm.response.to.have.jsonBody(\"deletedAt\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "33260a96-d88b-48c6-9490-b14d51301640",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"text\": \"Would you be interested in?\"\n}"
                    },
                    "url": "{{host}}/v1/questions/{{qId}}/variations/{{vId}}",
                    "description": "## Update question variation in a collection. Applies partial modifications to a variation.\n\n`PATCH /v1/questions/:question/variations/:id`\n\nSegment Parameters:\n* **question** (string) - Question id that variation belongs to\n* **id** (string) - Variation id\n\nPOST Parameters:\n* **text** (string), required - Question variation text (substance of the question)\n\n### Request:\n`PATCH /v1/questions/FuEMDRZD0eDX/variations/Iubd3qJOpRby`\n\n```\n{\n\t\"text\": \"Express interests\"\n}\n```\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"text\": \"Express interests\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Question variation not found\",\n    \"code\": 0\n}\n```"
                  },
                  "response": [
                    {
                      "id": "d56fb2d7-d3b0-4475-a622-6eadc761e7f4",
                      "name": "/v1/questions/:id",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"name\": \"Express interests\"\n}"
                        },
                        "url": "{{host}}/v1/questions/{{qId}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Server",
                          "value": "nginx/1.15.6"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Transfer-Encoding",
                          "value": "chunked"
                        },
                        {
                          "key": "Connection",
                          "value": "keep-alive"
                        },
                        {
                          "key": "Cache-Control",
                          "value": "no-cache, private"
                        },
                        {
                          "key": "Date",
                          "value": "Mon, 11 Mar 2019 13:20:16 GMT"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"id\": \"Axb6WacQ5a7l\",\n    \"name\": \"Express interests\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 13:19:31.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-03-11 13:20:16.706366\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}"
                    }
                  ]
                },
                {
                  "name": "/v1/questions/:question/variations/:id",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "4cfdcba1-0851-46eb-82a3-510e0f0f4564",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Body contains resourceId\", function () {",
                          "    pm.response.to.have.jsonBody(\"resourceId\");",
                          "});",
                          "",
                          "pm.test(\"Body contains message\", function () {",
                          "    pm.response.to.have.jsonBody(\"message\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f22ea943-1a79-4ba8-84cb-6acbdc24225d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{host}}/v1/questions/{{qId}}/variations/{{vId}}",
                    "description": "## Delete Question from Collection\n\n`DELETE /v1/questions/:question/variations/:id`\n\nSegment Parameters:\n* **question** (string) - Question id that variation belongs to\n* **id** (string) - Variation id\n\n### Request:\n`DELETE /v1/questions/FuEMDRZD0eDX/variations/Iubd3qJOpRby`\n\n### Response - 200 OK:\n```\n{\n    \"resourceId\": \"Iubd3qJOpRby\",\n    \"message\": \"Question variation has been successfully deleted'\"\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Question variation not found\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                }
              ],
              "_postman_id": "068a3652-79de-4935-be33-0d65df677331",
              "_postman_isSubFolder": true
            },
            {
              "name": "/v1/questions",
              "_postman_id": "1a4ef682-b73e-4812-bd93-6a6074c79fcf",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{token}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{host}}/v1/questions",
                "description": "## List Question objects\n\n`GET /v1/questions`\n\nGET Parameters:\n* **filters** (array), optional - One or more filters\n* **sorts** (array), optional - One or more sorting parameters\n* **limit** (integer), optional - Limit on the result set\n* **offset** (integer), optional - Offset on the result set\n* **count** (boolean), optional - If set to true Response:X-Results-Total header will show total count in result set (regardless of any limit and offset set)\n\nFilter Types:\n* **question.id**\n* **question.name**\n* **question.createdAt**\n* **question.updatedAt**\n* **question.deletedAt**\n\nSort Types:\n* **question.id**\n* **question.name**\n* **question.createdAt**\n* **question.updatedAt**\n* **question.deletedAt**\n\n### Request:\n`GET /v1/questions`\n\n### Response - 200 OK:\nX-Results-Total 2\n```\n[\n    {\n        \"id\": \"2RPN5xIjrqBO\",\n        \"name\": \"Express your interests\",\n\t\t\"fallbackAction\": \"next_question\",\n\t\t\"possibleIntents\": [\n\t\t\t{\n\t\t\t\t\"name\": \"yes_interested\",\n\t\t\t\t\"action\": \"next_question\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"affirmation\",\n\t\t\t\t\"action\": \"next_question\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"negative\",\n\t\t\t\t\"action\": \"goodbye\"\n\t\t\t}\n\t\t],\n\t\t\"additionalInformation\": \"The position is for the big international company with operations in more than 50 countries. Are you interested?\",\n        \"createdAt\": {\n            \"date\": \"2019-03-11 12:26:12.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"OmEAbFFFlRQa\",\n        \"name\": \"Express your interests\",\n\t\t\"fallbackAction\": \"next_question\",\n\t\t\"possibleIntents\": [],\n\t\t\"additionalInformation\": null,\n        \"createdAt\": {\n            \"date\": \"2019-03-11 13:30:28.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"value for index 0, part 2 (field) must be one of (question.id, question.name, question.createdAt, question.updatedAt, question.deletedAt)\",\n    \"code\": 4000101\n}\n```"
              },
              "response": [
                {
                  "id": "503a5694-5c06-4087-88ac-323d7b12142d",
                  "name": "/v1/questions",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/questions"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.6"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Mon, 11 Mar 2019 13:46:29 GMT"
                    },
                    {
                      "key": "X-Results-Total",
                      "value": "9"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"id\": \"OmEAbFFFlRQa\",\n        \"name\": \"Express your interests\",\n        \"createdAt\": {\n            \"date\": \"2019-03-11 13:30:28.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"QMQ4F3ghSZGD\",\n        \"name\": \"Express your interests\",\n        \"createdAt\": {\n            \"date\": \"2019-03-11 13:09:54.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"V07OQOVeyO4Z\",\n        \"name\": \"Express your interests\",\n        \"createdAt\": {\n            \"date\": \"2019-03-11 13:30:13.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"VkPZr9fOj1Re\",\n        \"name\": \"Express your interests\",\n        \"createdAt\": {\n            \"date\": \"2019-03-11 12:29:05.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"eQpKGg0lpH1m\",\n        \"name\": \"Express your interests\",\n        \"createdAt\": {\n            \"date\": \"2019-03-11 13:32:40.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"l3FK6QfZIurm\",\n        \"name\": \"Express your interests\",\n        \"createdAt\": {\n            \"date\": \"2019-03-11 13:09:07.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"ro04VBjV3Cge\",\n        \"name\": \"Express your interests\",\n        \"createdAt\": {\n            \"date\": \"2019-03-11 13:35:37.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"yRu65mxgj5VF\",\n        \"name\": \"Express your interests\",\n        \"createdAt\": {\n            \"date\": \"2019-03-11 13:36:00.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"FuEMDRZD0eDX\",\n        \"name\": \"introduction\",\n        \"createdAt\": {\n            \"date\": \"2019-03-11 12:21:10.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]"
                },
                {
                  "id": "c7b38496-92cc-4a72-940c-ef9de3168a44",
                  "name": "/v1/questions - Limit",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{host}}/v1/questions?limit=2",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "v1",
                        "questions"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "2"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.6"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Mon, 11 Mar 2019 13:47:18 GMT"
                    },
                    {
                      "key": "X-Results-Total",
                      "value": "2"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"id\": \"OmEAbFFFlRQa\",\n        \"name\": \"Express your interests\",\n        \"createdAt\": {\n            \"date\": \"2019-03-11 13:30:28.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"QMQ4F3ghSZGD\",\n        \"name\": \"Express your interests\",\n        \"createdAt\": {\n            \"date\": \"2019-03-11 13:09:54.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]"
                }
              ]
            },
            {
              "name": "/v1/questions",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fba8f91a-9877-4fb9-ac07-061ea3de91cf",
                    "exec": [
                      "// Parsing the response returned by the request.",
                      "var jsonData = pm.response.json();",
                      "",
                      "// Extracting the token from the response and setting it as a global variable.",
                      "pm.globals.set(\"qId\", jsonData['id']);",
                      "",
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\"Body contains id\", function () {",
                      "    pm.response.to.have.jsonBody(\"id\");",
                      "});",
                      "",
                      "pm.test(\"Body contains name\", function () {",
                      "    pm.response.to.have.jsonBody(\"name\");",
                      "});",
                      "",
                      "pm.test(\"Body contains fallbackAction\", function () {",
                      "    pm.response.to.have.jsonBody(\"fallbackAction\");",
                      "});",
                      "",
                      "pm.test(\"Body contains createdAt\", function () {",
                      "    pm.response.to.have.jsonBody(\"createdAt\");",
                      "});",
                      "",
                      "pm.test(\"Body contains updatedAt\", function () {",
                      "    pm.response.to.have.jsonBody(\"updatedAt\");",
                      "});",
                      "",
                      "pm.test(\"Body contains deletedAt\", function () {",
                      "    pm.response.to.have.jsonBody(\"deletedAt\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "163c7b4d-ecce-4c4b-9f88-8c51c2aee4b7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n        \"name\": \"What is your current job title?\",\n        \"fallbackAction\": \"next_question\",\n        \"possibleIntents\": [\n            {\n                \"name\": \"not_interested\",\n                \"action\": \"goodbye\"\n            },\n            {\n                \"name\": \"more_info\",\n                \"action\": \"more_info\"\n            },\n            {\n                \"name\": \"who_are_you\",\n                \"action\": \"who_are_you\"\n            },\n            {\n                \"name\": \"dont_understand\",\n                \"action\": \"repeat_question\"\n            },\n            {\n                \"name\": \"repeat_question\",\n                \"action\": \"repeat_question\"\n            }\n        ],\n        \"visibility\": \"private\",\n        \"additionalInformation\": \"I’m sorry, I’m still learning and unable to answer that question at the moment. Would you like to continue?\"\n}"
                },
                "url": "{{host}}/v1/questions",
                "description": "## Create a new question in a collection\n\n`POST /v1/questions`\n\nPOST Parameters:\n* **name** (string), required - Question name\n* **fallbackAction** (string), required - Fallback action, this action will be invoked if no other are matched\n* **possibleIntents** (array), required - Array of possible intents objects, each with \"name\" and \"action\" properties\n* **additionalInformation** (string), optional - Additional information to display\n\n### Request:\n`POST /v1/questions`\n\n```\n{\n\t\"name\": \"Express your interests\",\n\t\"fallbackAction\": \"next_question\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"name\": \"Express your interests\",\n\t\"fallbackAction\": \"next_question\",\n\t\"possibleIntents\": [\n\t\t{\n\t\t\t\"name\": \"yes_interested\",\n\t\t\t\"action\": \"next_question\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"affirmation\",\n\t\t\t\"action\": \"next_question\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"negative\",\n\t\t\t\"action\": \"goodbye\"\n\t\t}\n\t],\n\t\"additionalInformation\": \"The position is for the big international company with operations in more than 50 countries. Are you interested?\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"name\" missing\",\n    \"code\": 0\n}\n```"
              },
              "response": [
                {
                  "id": "24ca73f6-b542-4d9d-9fc1-7dd709fc9464",
                  "name": "/v1/questions",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"Express your interests\"\n}"
                    },
                    "url": "{{host}}/v1/questions"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.6"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Mon, 11 Mar 2019 12:26:12 GMT"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": \"2RPN5xIjrqBO\",\n    \"name\": \"Express your interests\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:26:12.457624\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}"
                }
              ]
            },
            {
              "name": "/v1/questions/:id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bb8e88c9-fc70-497d-92d9-85ab68f5ddf5",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Body contains id\", function () {",
                      "    pm.response.to.have.jsonBody(\"id\");",
                      "});",
                      "",
                      "pm.test(\"Body contains name\", function () {",
                      "    pm.response.to.have.jsonBody(\"name\");",
                      "});",
                      "",
                      "pm.test(\"Body contains createdAt\", function () {",
                      "    pm.response.to.have.jsonBody(\"createdAt\");",
                      "});",
                      "",
                      "pm.test(\"Body contains updatedAt\", function () {",
                      "    pm.response.to.have.jsonBody(\"updatedAt\");",
                      "});",
                      "",
                      "pm.test(\"Body contains deletedAt\", function () {",
                      "    pm.response.to.have.jsonBody(\"deletedAt\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "6852178c-8682-4050-82ce-f8dfd1282bf6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/v1/questions/{{qId}}",
                "description": "## Reads Question details\n\n`GET /v1/questions/:id`\n\nSegment Parameters:\n* **id** (string) - Question id\n\n### Request:\n`GET /v1/questions/FuEMDRZD0eDX`\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"name\": \"Express interests\",\n\t\"fallbackAction\": \"next_question\",\n\t\"possibleIntents\": [\n\t\t{\n\t\t\t\"name\": \"yes_interested\",\n\t\t\t\"action\": \"next_question\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"affirmation\",\n\t\t\t\"action\": \"next_question\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"negative\",\n\t\t\t\"action\": \"goodbye\"\n\t\t}\n\t],\n\t\"additionalInformation\": \"The position is for the big international company with operations in more than 50 countries. Are you interested?\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Question not found\",\n    \"code\": 0\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/questions/:id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9c432e0a-e50b-4ac3-a170-abbc52e79537",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Body contains id\", function () {",
                      "    pm.response.to.have.jsonBody(\"id\");",
                      "});",
                      "",
                      "pm.test(\"Body contains name\", function () {",
                      "    pm.response.to.have.jsonBody(\"name\");",
                      "});",
                      "",
                      "pm.test(\"Body contains createdAt\", function () {",
                      "    pm.response.to.have.jsonBody(\"createdAt\");",
                      "});",
                      "",
                      "pm.test(\"Body contains updatedAt\", function () {",
                      "    pm.response.to.have.jsonBody(\"updatedAt\");",
                      "});",
                      "",
                      "pm.test(\"Body contains deletedAt\", function () {",
                      "    pm.response.to.have.jsonBody(\"deletedAt\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "b72e5d92-b920-4c45-b289-c53ffeb725ae",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"Express interests\",\n\t\"visibility\": \"public\"\n}"
                },
                "url": "{{host}}/v1/questions/{{qId}}",
                "description": "## Update question in a collection. Applies partial modifications to a Question.\n\n`PATCH /v1/questions/:id`\n\nSegment Parameters:\n* **id** (string) - Question id\n\nPOST Parameters:\n* **name** (string) - Question name\n\n### Request:\n`PATCH /v1/questions/FuEMDRZD0eDX`\n\n```\n{\n\t\"name\": \"Express interests\"\n}\n```\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"name\": \"Express interests\",\n\t\"fallbackAction\": \"next_question\",\n\t\"possibleIntents\": [\n\t\t{\n\t\t\t\"name\": \"yes_interested\",\n\t\t\t\"action\": \"next_question\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"affirmation\",\n\t\t\t\"action\": \"next_question\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"negative\",\n\t\t\t\"action\": \"goodbye\"\n\t\t}\n\t],\n\t\"additionalInformation\": \"The position is for the big international company with operations in more than 50 countries. Are you interested?\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Question not found\",\n    \"code\": 0\n}\n```"
              },
              "response": [
                {
                  "id": "ea1b4313-00c5-4362-8e4e-cf0c82f52ea7",
                  "name": "/v1/questions/:id",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"Express interests\"\n}"
                    },
                    "url": "{{host}}/v1/questions/{{qId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.6"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Mon, 11 Mar 2019 13:20:16 GMT"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": \"Axb6WacQ5a7l\",\n    \"name\": \"Express interests\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 13:19:31.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-03-11 13:20:16.706366\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}"
                }
              ]
            },
            {
              "name": "/v1/questions/:id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4cfdcba1-0851-46eb-82a3-510e0f0f4564",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Body contains resourceId\", function () {",
                      "    pm.response.to.have.jsonBody(\"resourceId\");",
                      "});",
                      "",
                      "pm.test(\"Body contains message\", function () {",
                      "    pm.response.to.have.jsonBody(\"message\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "5ccd52b2-5774-4e53-a717-35de90a6122d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/v1/questions/{{qId}}",
                "description": "## Delete Question from Collection\n\n`DELETE /v1/questions/:id`\n\nSegment Parameters:\n* **id** (string) - Question id\n\n### Request:\n`DELETE /v1/questions/FuEMDRZD0eDX`\n\n### Response - 200 OK:\n```\n{\n    \"resourceId\": \"FuEMDRZD0eDX\",\n    \"message\": \"Question has been successfully deleted\"\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Question not found\",\n    \"code\": 0\n}\n```"
              },
              "response": []
            }
          ],
          "_postman_id": "14516e68-36ad-45e7-84a5-1509bc740d2b",
          "description": "# Questions",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "b71928e3-0bc3-469c-896a-2c8a046d761c",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "19f0f677-8a19-4158-b96d-3e212f8b5c2d",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "assessments",
          "item": [
            {
              "name": "questions",
              "item": [
                {
                  "name": "/v1/assessments/:assessment/questions",
                  "_postman_id": "95285a93-a7e9-4046-8703-df94f48dbc90",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{host}}/v1/assessments/{{aId}}/questions",
                    "description": "## List Assessment Question objects\n\n`GET /v1/assessments/:assessment/questions`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nGET Parameters:\n* **filters** (array), optional - One or more filters\n* **sorts** (array), optional - One or more sorting parameters\n* **limit** (integer), optional - Limit on the result set\n* **offset** (integer), optional - Offset on the result set\n* **count** (boolean), optional - If set to true Response:X-Results-Total header will show total count in result set (regardless of any limit and offset set)\n\nFilter Types:\n* **a_question.id**\n* **a_question.orderIndex**\n* **a_question.createdAt**\n* **a_question.updatedAt**\n* **a_question.deletedAt**\n\nSort Types:\n* **a_question.id**\n* **a_question.orderIndex**\n* **a_question.createdAt**\n* **a_question.updatedAt**\n* **a_question.deletedAt**\n\n### Request:\n`GET /v1/assessments/TlaCrowzLCwl/questions`\n\n### Response - 200 OK:\nX-Results-Total 3\n```\n[\n    {\n        \"id\": \"LeAE39QWv2bB\",\n        \"assessmentId\": \"TlaCrowzLCwl\",\n        \"questionId\": \"XLTJ9TC9XrNS\",\n        \"orderIndex\": null,\n        \"createdAt\": {\n            \"date\": \"2019-03-27 14:42:01.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-06-04 15:19:56.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"MmAE39QWv2bB\",\n        \"assessmentId\": \"TlaCrowzLCwl\",\n        \"questionId\": \"BrDdGtwHldcQ\",\n        \"orderIndex\": 1,\n        \"createdAt\": {\n            \"date\": \"2019-03-27 14:42:01.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-06-04 15:22:56.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"OoAE39QWv2bB\",\n        \"assessmentId\": \"TlaCrowzLCwl\",\n        \"questionId\": \"GGLuTjGMzC3l\",\n        \"orderIndex\": 2,\n        \"createdAt\": {\n            \"date\": \"2019-03-27 14:42:01.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-06-04 15:22:56.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    }\n]\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"value for index 0, part 2 (field) must be one of (a_question.id, a_question.orderIndex, a_question.createdAt, a_question.updatedAt, a_question.deletedAt)\",\n    \"code\": 4000101\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/assessments/:assessment/questions",
                  "_postman_id": "701a1a1d-d001-462c-b833-bea35fc985d6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"question\": \"uSwbfidRb9bL\"\n}"
                    },
                    "url": "{{host}}/v1/assessments/{{aId}}/questions",
                    "description": "## Create a new Assessment Question in a collection\n\n`POST /v1/assessments/:assessment/questions`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nPOST Parameters:\n* **question** (string), required - Question Id\n\n### Request:\n`POST /v1/assessments/TlaCrowzLCwl/questions`\n\n```\n{\n\t\"question\": \"XLTJ9TC9XrNS\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"LeAE39QWv2bB\",\n    \"assessmentId\": \"TlaCrowzLCwl\",\n    \"questionId\": \"XLTJ9TC9XrNS\",\n    \"orderIndex\": null,\n    \"createdAt\": {\n        \"date\": \"2019-03-27 14:42:01.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-06-04 15:19:56.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"question\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/assessments/:assessment/questions/:a_question",
                  "_postman_id": "37a81c9d-545f-4f00-b1ec-84d075dfc8d6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"question\": \"uSwbfidRb9bL\"\n}"
                    },
                    "url": "{{host}}/v1/assessments/{{aId}}/questions/{{aqId}}"
                  },
                  "response": []
                },
                {
                  "name": "/v1/assessments/:assessment/questions/:a_question",
                  "_postman_id": "741179c7-7e0c-4651-aca1-dcf330ceef54",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"question\": \"uSwbfidRb9bL\"\n}"
                    },
                    "url": "{{host}}/v1/assessments/{{aId}}/questions/{{aqId}}"
                  },
                  "response": []
                },
                {
                  "name": "/v1/assessments/:assessment/questions/:a_question",
                  "_postman_id": "d5a8413e-3655-4f70-8a4f-0084e04a8ea2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{host}}/v1/assessments/{{aId}}/questions/{{aqId}}"
                  },
                  "response": []
                }
              ],
              "_postman_id": "f2f297ca-3624-48be-9c05-9ffde878ecb7",
              "_postman_isSubFolder": true
            },
            {
              "name": "labels",
              "item": [
                {
                  "name": "/v1/assessments/:assessment/labels",
                  "_postman_id": "bacb0498-b1f7-41da-a95d-ab3c089ae3c1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"label\": \"fGqyjfBKiA3a\"\n}"
                    },
                    "url": "{{host}}/v1/assessments/{{aId}}/labels",
                    "description": "## Create a new Assessment Job in a collection\n\n`POST /v1/assessments/:assessment/jobs`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nPOST Parameters:\n* **job** (string), required - Job Id\n\n### Request:\n`POST /v1/assessments/TlaCrowzLCwl/jobs`\n\n```\n{\n\t\"job\": \"XLTJ9TC9XrNS\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"LeAE39QWv2bB\",\n    \"assessmentId\": \"TlaCrowzLCwl\",\n    \"jobId\": \"XLTJ9TC9XrNS\",\n    \"orderIndex\": null,\n    \"createdAt\": {\n        \"date\": \"2019-03-27 14:42:01.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-06-04 15:19:56.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"job\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/assessments/:assessment/labels",
                  "_postman_id": "d997c60f-8601-49c6-a302-059b9dc9d355",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{host}}/v1/assessments/{{aId}}/labels?detailed=true",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "v1",
                        "assessments",
                        "{{aId}}",
                        "labels"
                      ],
                      "query": [
                        {
                          "key": "detailed",
                          "value": "true"
                        }
                      ]
                    },
                    "description": "## Create a new Assessment Job in a collection\n\n`POST /v1/assessments/:assessment/jobs`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nPOST Parameters:\n* **job** (string), required - Job Id\n\n### Request:\n`POST /v1/assessments/TlaCrowzLCwl/jobs`\n\n```\n{\n\t\"job\": \"XLTJ9TC9XrNS\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"LeAE39QWv2bB\",\n    \"assessmentId\": \"TlaCrowzLCwl\",\n    \"jobId\": \"XLTJ9TC9XrNS\",\n    \"orderIndex\": null,\n    \"createdAt\": {\n        \"date\": \"2019-03-27 14:42:01.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-06-04 15:19:56.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"job\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/assessments/:assessment/labels",
                  "_postman_id": "77c68f91-cf79-4bbd-95bd-c6337111729e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{host}}/v1/assessments/{{aId}}/labels/{{alId}}",
                    "description": "## Create a new Assessment Job in a collection\n\n`POST /v1/assessments/:assessment/jobs`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nPOST Parameters:\n* **job** (string), required - Job Id\n\n### Request:\n`POST /v1/assessments/TlaCrowzLCwl/jobs`\n\n```\n{\n\t\"job\": \"XLTJ9TC9XrNS\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"LeAE39QWv2bB\",\n    \"assessmentId\": \"TlaCrowzLCwl\",\n    \"jobId\": \"XLTJ9TC9XrNS\",\n    \"orderIndex\": null,\n    \"createdAt\": {\n        \"date\": \"2019-03-27 14:42:01.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-06-04 15:19:56.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"job\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                }
              ],
              "_postman_id": "7cde3e90-55e0-4d10-80a0-d6716c2a68a1",
              "_postman_isSubFolder": true
            },
            {
              "name": "/v1/assessments",
              "_postman_id": "bcde8837-ede5-4c72-b088-39f04c7a72e4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{host}}/v1/assessments",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "v1",
                    "assessments"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "5",
                      "disabled": true
                    },
                    {
                      "key": "detailed",
                      "value": "true",
                      "disabled": true
                    }
                  ]
                },
                "description": "## List Assessment objects\n\n`GET /v1/assessments`\n\nGET Parameters:\n* **filters** (array), optional - One or more filters\n* **sorts** (array), optional - One or more sorting parameters\n* **limit** (integer), optional - Limit on the result set\n* **offset** (integer), optional - Offset on the result set\n* **count** (boolean), optional - If set to true Response:X-Results-Total header will show total count in result set (regardless of any limit and offset set)\n\nFilter Types:\n* **assessment.id**\n* **assessment.name**\n* **assessment.description**\n* **assessment.isEnabled**\n* **assessment.organisation**\n* **assessment.createdAt**\n* **assessment.updatedAt**\n* **assessment.deletedAt**\n\nSort Types:\n* **assessment.id**\n* **assessment.name**\n* **assessment.description**\n* **assessment.isEnabled**\n* **assessment.createdAt**\n* **assessment.updatedAt**\n* **assessment.deletedAt**\n\n### Request:\n`GET /v1/assessments`\n\n### Response - 200 OK:\nX-Results-Total 2\n```\n[\n    {\n        \"id\": \"0v2q88rCEEgu\",\n        \"name\": \"Candidate questionnaire\",\n        \"description\": \"Standard pesonal questionnaire for a quick interview\",\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-07 09:54:11.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-05-31 10:27:12.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"0CxQDHFwWpcP\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-15 14:49:18.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"value for index 0, part 2 (field) must be one of (assessment.id, assessment.name, assessment.createdAt, assessment.updatedAt, assessment.deletedAt)\",\n    \"code\": 4000101\n}\n```"
              },
              "response": [
                {
                  "id": "976e711f-c189-4ea8-913e-d3502af5ce11",
                  "name": "/v1/assessments",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/assessments"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.10"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Fri, 31 May 2019 10:28:26 GMT"
                    },
                    {
                      "key": "X-Results-Total",
                      "value": "8"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "Access-Control-Allow-Methods",
                      "value": "POST, GET, OPTIONS, PATCH, PUT, DELETE"
                    },
                    {
                      "key": "Access-Control-Allow-Headers",
                      "value": "Content-Type, X-Auth-Token, X-App-Token, Authorization"
                    },
                    {
                      "key": "Access-Control-Expose-Headers",
                      "value": "X-Auth-Token-Expires-In, X-Results-Total"
                    },
                    {
                      "key": "X-Service-Name",
                      "value": "assessments-api"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "2abd9a"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:8001/_profiler/2abd9a"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"id\": \"0v2q88rCEEgu\",\n        \"name\": \"Candidate questionnaire\",\n        \"description\": \"Standard pesonal questionnaire for a quick interview\",\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-07 09:54:11.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-05-31 10:27:12.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"0CxQDHFwWpcP\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-15 14:49:18.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"2kL7ByaVCDKQ\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-16 11:59:00.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"E5PClbZto6bK\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-15 14:44:15.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"mAyKxydPIRRe\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-15 15:02:31.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"nzOnHCtt4Puh\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-03-27 17:14:22.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"TlaCrowzLCwl\",\n        \"name\": \"Pesonal questionnaire\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-03-27 14:41:08.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"zeMcv1deIMmS\",\n        \"name\": \"Pesonal questionnaire\",\n        \"description\": \"Standard pesonal questionnaire for a quick interview\",\n        \"isEnabled\": true,\n        \"createdAt\": {\n            \"date\": \"2019-05-31 10:24:23.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]"
                }
              ]
            },
            {
              "name": "/v1/assessments",
              "_postman_id": "4a517ced-09a0-4376-a287-c3c06bd0f9d0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"Pesonal questionnaire\",\n\t\"description\": \"Standard pesonal questionnaire for a quick interview\"\n}"
                },
                "url": "{{host}}/v1/assessments",
                "description": "## Create a new assessment in a collection\n\n`POST /v1/assessments`\n\nPOST Parameters:\n* **name** (string), required - Assessment name\n* **description** (string), optional - Assessment desctiption\n* **isEnabled** (boolean), optional - Whether assessment is enabled. Default: true\n\n### Request:\n`POST /v1/assessments`\n\n```\n{\n\t\"name\": \"Pesonal questionnaire\",\n\t\"description\": \"Standard pesonal questionnaire for a quick interview\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"zeMcv1deIMmS\",\n    \"name\": \"Pesonal questionnaire\",\n    \"description\": \"Standard pesonal questionnaire for a quick interview\",\n    \"isEnabled\": true,\n    \"createdAt\": {\n        \"date\": \"2019-05-31 10:24:23.452348\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"name\" missing\",\n    \"code\": 0\n}\n```"
              },
              "response": [
                {
                  "id": "e5d9c3b5-f1c6-4581-85e0-48a9dba3f50b",
                  "name": "/v1/assessments",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"Pesonal questionnaire\"\n}"
                    },
                    "url": "{{host}}/v1/assessments"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.6"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Mar 2019 11:05:36 GMT"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "dd77f8"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:8001/_profiler/dd77f8"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "sf_redirect=%7B%22token%22%3A%22dd77f8%22%2C%22route%22%3A%22app_v1_assessments_assessments_create%22%2C%22method%22%3A%22POST%22%2C%22controller%22%3A%7B%22class%22%3A%22App%5C%5CController%5C%5CV1%5C%5CAssessments%5C%5CAssessmentsController%22%2C%22method%22%3A%22create%22%2C%22file%22%3A%22%5C%2Fapplication%5C%2Fsrc%5C%2FController%5C%2FV1%5C%2FAssessments%5C%2FAssessmentsController.php%22%2C%22line%22%3A27%7D%2C%22status_code%22%3A201%2C%22status_text%22%3A%22Created%22%7D; path=/; httponly; samesite=lax"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": \"zlKqmKr7QNYt\",\n    \"name\": \"Pesonal questionnaire\",\n    \"createdAt\": {\n        \"date\": \"2019-03-21 11:05:36.456004\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}"
                }
              ]
            },
            {
              "name": "/v1/assessments/:id",
              "_postman_id": "177cef33-554c-4e43-9184-e93266b9206b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{token}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{host}}/v1/assessments/{{aId}}",
                "description": "## Reads Assessment details\n\n`GET /v1/assessments/:id`\n\nSegment Parameters:\n* **id** (string) - Assessment id\n\n### Request:\n`GET /v1/assessments/FuEMDRZD0eDX`\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"name\": \"Candidate questionnaire\",\n    \"description\": \"Standard pesonal questionnaire for a quick interview\",\n    \"isEnabled\": false,\n    \"createdAt\": {\n        \"date\": \"2019-05-07 09:54:11.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-05-31 10:27:12.785241\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Assessment not found\",\n    \"code\": 0\n}\n```"
              },
              "response": [
                {
                  "id": "04d6c8a4-200e-47a4-a2f5-e678bfd2dd38",
                  "name": "/v1/assessments/:id",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/assessments/{{aId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.6"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Mar 2019 11:36:31 GMT"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "405640"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:8001/_profiler/405640"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": \"7Gh1bFZHiZhb\",\n    \"name\": \"Candidate questionnaire\",\n    \"createdAt\": {\n        \"date\": \"2019-03-21 10:05:43.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-03-21 11:05:46.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": {\n        \"date\": \"2019-03-21 10:32:20.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    }\n}"
                }
              ]
            },
            {
              "name": "/v1/assessments/:id",
              "_postman_id": "727a1a3f-8ff3-4c55-9c96-43fd1be53dce",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"Candidate questionnaire2\",\n\t\"description\": \"Standard pesonal questionnaire for a quick interview\",\n\t\"isEnabled\": true,\n\t\"questions\": [\n\t\t\"YqnsZnRIbZS6\"\n\t]\n}"
                },
                "url": "{{host}}/v1/assessments/{{aId}}",
                "description": "## Update Assessment in a collection. Applies partial modifications to a Assessment.\n\n`PATCH /v1/assessments/:id`\n\nSegment Parameters:\n* **id** (string) - Assessment id\n\nPOST Parameters:\n* **name** (string), optional - Assessment name\n* **description** (string), optional - Assessment desctiption\n* **isEnabled** (boolean), optional - Whether assessment is enabled. Default: true\n* **questions** (array), optional - Ordered Array of Assessment Questions IDs or Assessment Question objects. The `orderIndex` will be applied in accordance with order of the items in the array. Items not present in the array will have their `orderIndex` reset to NULL. If array is empty no order will be applied.\n\n### Request:\n`PATCH /v1/assessments/FuEMDRZD0eDX`\n\n```\n{\n\t\"name\": \"Candidate questionnaire\",\n\t\"description\": \"Standard pesonal questionnaire for a quick interview\",\n\t\"isEnabled\": false,\n\t\"questions\": [\n\t\t\"LeAE39QWv2bB\",\n\t    \"MmAE39QWv2bB\",\n\t\t\"OoAE39QWv2bB\"\n\t]\n}\n```\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"0v2q88rCEEgu\",\n    \"name\": \"Candidate questionnaire\",\n    \"description\": \"Standard pesonal questionnaire for a quick interview\",\n    \"isEnabled\": false,\n    \"createdAt\": {\n        \"date\": \"2019-05-07 09:54:11.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-05-31 10:27:12.785241\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Assessment not found\",\n    \"code\": 0\n}\n```"
              },
              "response": [
                {
                  "id": "2ef871b6-3768-4b12-af0a-8040a7175ff5",
                  "name": "/v1/assessments/:id",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"Candidate questionnaire\"\n}"
                    },
                    "url": "{{host}}/v1/assessments/{{aId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.6"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Mar 2019 11:37:15 GMT"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "e81b25"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:8001/_profiler/e81b25"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": \"7Gh1bFZHiZhb\",\n    \"name\": \"Candidate questionnaire\",\n    \"createdAt\": {\n        \"date\": \"2019-03-21 10:05:43.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-03-21 11:37:15.010862\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": {\n        \"date\": \"2019-03-21 10:32:20.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    }\n}"
                }
              ]
            },
            {
              "name": "/v1/assessments/:id",
              "_postman_id": "877d0b28-e932-434a-af9f-4a0891dc0d50",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/v1/assessments/{{aId}}",
                "description": "## Delete Assessment from Collection\n\n`DELETE /v1/assessments/:id`\n\nSegment Parameters:\n* **id** (string) - Assessment id\n\n### Request:\n`DELETE /v1/assessments/FuEMDRZD0eDX`\n\n### Response - 200 OK:\n```\n{\n    \"resourceId\": \"FuEMDRZD0eDX\",\n    \"message\": \"Assessment has been successfully deleted\"\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Assessment not found\",\n    \"code\": 0\n}\n```"
              },
              "response": [
                {
                  "id": "16776049-7799-4a46-b2a2-0c0071d85f96",
                  "name": "/v1/assessments/:id",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{host}}/v1/assessments/{{aId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.6"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Mar 2019 11:38:49 GMT"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "0e7a3a"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:8001/_profiler/0e7a3a"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"resourceId\": \"7Gh1bFZHiZhb\",\n    \"message\": \"Assessment has been successfully deleted\"\n}"
                }
              ]
            }
          ],
          "_postman_id": "3a5d1ba5-aca1-4a8a-9598-c8c6bfa9afea",
          "_postman_isSubFolder": true
        },
        {
          "name": "clients",
          "item": [
            {
              "name": "labels",
              "item": [
                {
                  "name": "/v1/clients/:client/labels",
                  "_postman_id": "7828b22e-81e6-420d-8ff7-aadb1f395299",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"label\": \"fGqyjfBKiA3a\"\n}"
                    },
                    "url": "{{host}}/v1/clients/{{cId}}/labels",
                    "description": "## Create a new Assessment Job in a collection\n\n`POST /v1/assessments/:assessment/jobs`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nPOST Parameters:\n* **job** (string), required - Job Id\n\n### Request:\n`POST /v1/assessments/TlaCrowzLCwl/jobs`\n\n```\n{\n\t\"job\": \"XLTJ9TC9XrNS\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"LeAE39QWv2bB\",\n    \"assessmentId\": \"TlaCrowzLCwl\",\n    \"jobId\": \"XLTJ9TC9XrNS\",\n    \"orderIndex\": null,\n    \"createdAt\": {\n        \"date\": \"2019-03-27 14:42:01.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-06-04 15:19:56.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"job\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/clients/:client/labels",
                  "_postman_id": "260c9cd8-560e-4937-9d69-f07e2274b69c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{host}}/v1/clients/{{cId}}/labels?detailed=true",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "v1",
                        "clients",
                        "{{cId}}",
                        "labels"
                      ],
                      "query": [
                        {
                          "key": "detailed",
                          "value": "true"
                        }
                      ]
                    },
                    "description": "## Create a new Assessment Job in a collection\n\n`POST /v1/assessments/:assessment/jobs`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nPOST Parameters:\n* **job** (string), required - Job Id\n\n### Request:\n`POST /v1/assessments/TlaCrowzLCwl/jobs`\n\n```\n{\n\t\"job\": \"XLTJ9TC9XrNS\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"LeAE39QWv2bB\",\n    \"assessmentId\": \"TlaCrowzLCwl\",\n    \"jobId\": \"XLTJ9TC9XrNS\",\n    \"orderIndex\": null,\n    \"createdAt\": {\n        \"date\": \"2019-03-27 14:42:01.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-06-04 15:19:56.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"job\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/clients/:client/labels",
                  "_postman_id": "f90d43d5-2733-40b6-827e-f6a995b6c86c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{host}}/v1/clients/{{cId}}/labels/{{clId}}",
                    "description": "## Create a new Assessment Job in a collection\n\n`POST /v1/assessments/:assessment/jobs`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nPOST Parameters:\n* **job** (string), required - Job Id\n\n### Request:\n`POST /v1/assessments/TlaCrowzLCwl/jobs`\n\n```\n{\n\t\"job\": \"XLTJ9TC9XrNS\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"LeAE39QWv2bB\",\n    \"assessmentId\": \"TlaCrowzLCwl\",\n    \"jobId\": \"XLTJ9TC9XrNS\",\n    \"orderIndex\": null,\n    \"createdAt\": {\n        \"date\": \"2019-03-27 14:42:01.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-06-04 15:19:56.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"job\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                }
              ],
              "_postman_id": "120150a0-559a-46c7-927f-2922b639f8dd",
              "_postman_isSubFolder": true
            },
            {
              "name": "vendor",
              "item": [
                {
                  "name": "/v1/clients/:client/vendors",
                  "_postman_id": "76beb379-7eb4-4cc9-b1b1-23db1e181238",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"vendor\": \"bullhorn\",\n    \"vendorId\": \"123\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{host}}/v1/clients/{{cId}}/vendors"
                  },
                  "response": []
                },
                {
                  "name": "/v1/clients/:client/vendors",
                  "_postman_id": "bd2cbe4e-d4aa-4395-84a4-ca236a7ba4b7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/clients/{{cId}}/vendors"
                  },
                  "response": []
                },
                {
                  "name": "/v1/client/:client/vendors",
                  "_postman_id": "2a8c4480-7fa5-4c25-b081-5a8f9af55940",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{host}}/v1/clients/{{cId}}/vendors/{{cvId}}"
                  },
                  "response": []
                }
              ],
              "_postman_id": "20f34891-3e6d-4aae-9a1b-ca8ca55be9c8",
              "_postman_isSubFolder": true
            },
            {
              "name": "/v1/clients",
              "_postman_id": "ad8cbf53-0343-4f3a-8f78-7a7392e25749",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"Coca Cola2\",\n\t\"overview\": \"We make drinks\",\n\t\"linkedin\": \"https://www.linkedin.com/cola/\",\n\t\"website\": \"https://www.coca-cola.co.uk/\",\n\t\"introduction\": \"Hi, we make drink, you make drink too?\",\n\t\"primaryContactFirstName\": \"John\",\n\t\"primaryContactLastName\": \"Doe\",\n\t\"primaryContactEmail\": \"joh.doe@example.com\",\n\t\"primaryContactPhone\": \"+447877557788\",\n\t\"status\": \"active\"\n}"
                },
                "url": "{{host}}/v1/clients",
                "description": "## Create a new invitation in a collection\n\n`POST /v1/invitations`\n\nPOST Parameters:\n\n* **name** (string), required - Name of the Client\n* **overview** (string),  - Company overview \n* **linkedin** (string), - linkedId URL\n* **website** (string), - website URL\n* **introduction** (string), - Introlduction to the client\n* **primaryContactFirstName** (string), - Primary Contact\n* **primaryContactLastName** (string), - Primary Contact\n* **primaryContactEmail** (string), - Primary Contact Email\n* **primaryContactPhone** (string), - Primary Contact Phone\n* **status** (string), - number\n### Request:\n`POST /v1/invitations`\n\n```\n{\n\t\"name\": \"Coca Cola\",\n\t\"overview\": \"We make drinks\",\n\t\"linkedin\": \"https://www.linkedin.com/cola/\",\n\t\"website\": \"https://www.coca-cola.co.uk/\",\n\t\"introduction\": \"Hi, we make drink, you make drink too?\",\n\t\"primaryContactFirstName\": \"John\",\n\t\"primaryContactLastName\": \"Doe\",\n\t\"primaryContactEmail\": \"joh.doe@example.com\",\n\t\"primaryContactPhone\": \"+447877557788\",\n\t\"status\": \"active\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"assessment\" missing\",\n    \"code\": 400140301\n}\n```\n```\n{\n    \"message\": \"Required parameter \"name\" missing\",\n    \"code\": 400140302\n}\n```\n```\n```\n{\n    \"message\": \"Field assessment failed validation because value: \"61pQvCdLCKI6\" is not valid assessment id\",\n    \"code\": 404140301\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/clients",
              "_postman_id": "da868bb6-b54c-4e8f-8564-31db8980d7f1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{token}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{host}}/v1/clients",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "v1",
                    "clients"
                  ],
                  "query": [
                    {
                      "key": "filters[]",
                      "value": "and-client.name-inci-value-co",
                      "disabled": true
                    }
                  ]
                },
                "description": "## List Client objects\n\n`GET /v1/clients`\n\nGET Parameters:\n* **filters** (array), optional - One or more filters\n* **sorts** (array), optional - One or more sorting parameters\n* **limit** (integer), optional - Limit on the result set\n* **offset** (integer), optional - Offset on the result set\n* **count** (boolean), optional - If set to true Response:X-Results-Total header will show total count in result set (regardless of any limit and offset set)\n\nFilter Types:\n* **client.id**\n* **client.name**\n* **client.status**\n* **client.organisation**\n* **client.createdAt**\n* **client.updatedAt**\n* **client.deletedAt**\n\nSort Types:\n* **client.id**\n* **client.name**\n* **client.status**\n* **client.createdAt**\n* **client.updatedAt**\n* **client.deletedAt**\n\n### Request:\n`GET /v1/clients`\n\n### Response - 200 OK:\nX-Results-Total 2\n```\n[\n    {\n        \"id\": \"0v2q88rCEEgu\",\n        \"name\": \"Candidate questionnaire\",\n        \"status\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-07 09:54:11.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-05-31 10:27:12.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"0CxQDHFwWpcP\",\n        \"name\": \"new client\",\n        \"status\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-15 14:49:18.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"value for index 0, part 2 (field) must be one of (client.id, client.name, client.createdAt, client.updatedAt, client.deletedAt)\",\n    \"code\": 4000101\n}\n```"
              },
              "response": [
                {
                  "id": "ffeee5a9-e3db-4bdf-b46f-be4468f1517f",
                  "name": "/v1/assessments",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/assessments"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.10"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Fri, 31 May 2019 10:28:26 GMT"
                    },
                    {
                      "key": "X-Results-Total",
                      "value": "8"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "Access-Control-Allow-Methods",
                      "value": "POST, GET, OPTIONS, PATCH, PUT, DELETE"
                    },
                    {
                      "key": "Access-Control-Allow-Headers",
                      "value": "Content-Type, X-Auth-Token, X-App-Token, Authorization"
                    },
                    {
                      "key": "Access-Control-Expose-Headers",
                      "value": "X-Auth-Token-Expires-In, X-Results-Total"
                    },
                    {
                      "key": "X-Service-Name",
                      "value": "assessments-api"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "2abd9a"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:8001/_profiler/2abd9a"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"id\": \"0v2q88rCEEgu\",\n        \"name\": \"Candidate questionnaire\",\n        \"description\": \"Standard pesonal questionnaire for a quick interview\",\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-07 09:54:11.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-05-31 10:27:12.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"0CxQDHFwWpcP\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-15 14:49:18.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"2kL7ByaVCDKQ\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-16 11:59:00.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"E5PClbZto6bK\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-15 14:44:15.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"mAyKxydPIRRe\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-15 15:02:31.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"nzOnHCtt4Puh\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-03-27 17:14:22.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"TlaCrowzLCwl\",\n        \"name\": \"Pesonal questionnaire\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-03-27 14:41:08.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"zeMcv1deIMmS\",\n        \"name\": \"Pesonal questionnaire\",\n        \"description\": \"Standard pesonal questionnaire for a quick interview\",\n        \"isEnabled\": true,\n        \"createdAt\": {\n            \"date\": \"2019-05-31 10:24:23.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]"
                }
              ]
            },
            {
              "name": "/v1/clients/:client",
              "_postman_id": "0e6a0863-0943-4d70-ae04-6c11b5b44d8e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": "{{host}}/v1/clients/{{cId}}",
                "description": "## Reads Client details\n\n`GET /v1/clients/:id`\n\nSegment Parameters:\n* **id** (string) - Client id\n\n### Request:\n`GET /v1/clients/FuEMDRZD0eDX`\n\n### Response - 200 OK:\n```\n{\n\"id\": \"FuEMDRZD0eDX\",\n\"name\": \"Coca Cola\",\n\"overview\": \"We make drinks\",\n\"linkedin\": \"https://www.linkedin.com/cola/\",\n\"website\": \"https://www.coca-cola.co.uk/\",\n\"introduction\": \"Hi, we make drink, you make drink too?\",\n\"primaryContactName\": \"John Doe\",\n\"primaryContactEmail\": \"joh.doe@example.com\",\n\"primaryContactPhone\": \"+447877557788\",\n\"organisation\": \"acme\",\n\"status\": \"active\"\n\"createdAt\": {\n\"date\": \"2019-05-07 09:54:11.000000\",\n\"timezone_type\": 3,\n\"timezone\": \"UTC\"\n},\n\"updatedAt\": {\n\"date\": \"2019-05-31 10:27:12.785241\",\n\"timezone_type\": 3,\n\"timezone\": \"UTC\"\n},\n\"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n\"message\": \"Client not found\",\n\"code\": 0\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/clients/:id",
              "_postman_id": "895a8734-1567-47b9-b7cb-4fef8a39c718",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"Coca Cola3\",\n\t\"overview\": \"We make drinks\",\n\t\"linkedin\": \"https://www.linkedin.com/cola/\",\n\t\"website\": \"https://www.coca-cola.co.uk/\",\n\t\"introduction\": \"Hi, we make drink, you make drink too?\",\n\t\"primaryContactFirstName\": \"John\",\n\t\"primaryContactLastName\": \"Doe\",\n\t\"primaryContactEmail\": \"joh.doe@example.com\",\n\t\"primaryContactPhone\": \"+447877557788\",\n\t\"status\": \"active\"\n}"
                },
                "url": "{{host}}/v1/clients/{{cId}}",
                "description": "## Update Client in a collection. Applies partial modifications to a Client.\n\n`PATCH /v1/clients/:id`\n\nSegment Parameters:\n* **id** (string) - Client id\n\nPOST Parameters:\n* **name** (string), required - Name of the Client\n* **overview** (string),  - Company overview \n* **linkedin** (string), - linkedId URL\n* **website** (string), - website URL\n* **introduction** (string), - Introlduction to the client\n* **primaryContactFirstName** (string), - Primary Contact\n* **primaryContactLastName** (string), - Primary Contact\n* **primaryContactEmail** (string), - Primary Contact Email\n* **primaryContactPhone** (string), - Primary Contact Phone\n* **status** (string), - number\n\n### Request:\n`PATCH /v1/clients/FuEMDRZD0eDX`\n\n```\n{\n\t\"name\": \"Coca Cola\",\n\t\"overview\": \"We make drinks\",\n\t\"linkedin\": \"https://www.linkedin.com/cola/\",\n\t\"website\": \"https://www.coca-cola.co.uk/\",\n\t\"introduction\": \"Hi, we make drink, you make drink too?\",\n\t\"primaryContactFirstName\": \"John\",\n\t\"primaryContactLastName\": \"Doe\",\n\t\"primaryContactEmail\": \"joh.doe@example.com\",\n\t\"primaryContactPhone\": \"+447877557788\",\n\t\"status\": \"active\"\n}\n```\n\n### Response - 200 OK:\n```\n{\n\t\"id\": \"FuEMDRZD0eDX\",\n\t\"name\": \"Coca Cola\",\n\t\"overview\": \"We make drinks\",\n\t\"linkedin\": \"https://www.linkedin.com/cola/\",\n\t\"website\": \"https://www.coca-cola.co.uk/\",\n\t\"introduction\": \"Hi, we make drink, you make drink too?\",\n\t\"primaryContactFirstName\": \"John\",\n\t\"primaryContactLastName\": \"Doe\",\n\t\"primaryContactEmail\": \"joh.doe@example.com\",\n\t\"primaryContactPhone\": \"+447877557788\",\n\t\"organisation\": \"acme\",\n\t\"status\": \"active\"\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n\"message\": \"Client not found\",\n\"code\": 0\n}\n```"
              },
              "response": [
                {
                  "id": "2d59bfc0-182f-43a7-96bf-cfe0a8943032",
                  "name": "/v1/assessments/:id",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"Candidate questionnaire\"\n}"
                    },
                    "url": "{{host}}/v1/assessments/{{aId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.6"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Mar 2019 11:37:15 GMT"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "e81b25"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:8001/_profiler/e81b25"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": \"7Gh1bFZHiZhb\",\n    \"name\": \"Candidate questionnaire\",\n    \"createdAt\": {\n        \"date\": \"2019-03-21 10:05:43.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-03-21 11:37:15.010862\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": {\n        \"date\": \"2019-03-21 10:32:20.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    }\n}"
                }
              ]
            }
          ],
          "_postman_id": "2794d972-42b0-4ba2-b8a8-b87e94bc6db7",
          "_postman_isSubFolder": true
        },
        {
          "name": "engagements",
          "item": [
            {
              "name": "labels",
              "item": [
                {
                  "name": "/v1/engagements/:engagement/labels",
                  "_postman_id": "64537b26-bc11-40a5-b5e7-f7321db48e63",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"label\": \"fGqyjfBKiA3a\"\n}"
                    },
                    "url": "{{host}}/v1/engagements/{{eId}}/labels",
                    "description": "## Create a new Assessment Job in a collection\n\n`POST /v1/assessments/:assessment/jobs`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nPOST Parameters:\n* **job** (string), required - Job Id\n\n### Request:\n`POST /v1/assessments/TlaCrowzLCwl/jobs`\n\n```\n{\n\t\"job\": \"XLTJ9TC9XrNS\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"LeAE39QWv2bB\",\n    \"assessmentId\": \"TlaCrowzLCwl\",\n    \"jobId\": \"XLTJ9TC9XrNS\",\n    \"orderIndex\": null,\n    \"createdAt\": {\n        \"date\": \"2019-03-27 14:42:01.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-06-04 15:19:56.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"job\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/engagements/:engagement/labels",
                  "_postman_id": "de213b31-5382-4e4c-9d76-69360080b849",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{host}}/v1/engagements/{{eId}}/labels?detailed=true",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "v1",
                        "engagements",
                        "{{eId}}",
                        "labels"
                      ],
                      "query": [
                        {
                          "key": "detailed",
                          "value": "true"
                        }
                      ]
                    },
                    "description": "## Create a new Assessment Job in a collection\n\n`POST /v1/assessments/:assessment/jobs`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nPOST Parameters:\n* **job** (string), required - Job Id\n\n### Request:\n`POST /v1/assessments/TlaCrowzLCwl/jobs`\n\n```\n{\n\t\"job\": \"XLTJ9TC9XrNS\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"LeAE39QWv2bB\",\n    \"assessmentId\": \"TlaCrowzLCwl\",\n    \"jobId\": \"XLTJ9TC9XrNS\",\n    \"orderIndex\": null,\n    \"createdAt\": {\n        \"date\": \"2019-03-27 14:42:01.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-06-04 15:19:56.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"job\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/engagements/:engagement/labels",
                  "_postman_id": "36bc5521-b929-4b3b-b22a-3f4665d2bb4d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{host}}/v1/engagements/{{eId}}/labels/{{elId}}",
                    "description": "## Create a new Assessment Job in a collection\n\n`POST /v1/assessments/:assessment/jobs`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nPOST Parameters:\n* **job** (string), required - Job Id\n\n### Request:\n`POST /v1/assessments/TlaCrowzLCwl/jobs`\n\n```\n{\n\t\"job\": \"XLTJ9TC9XrNS\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"LeAE39QWv2bB\",\n    \"assessmentId\": \"TlaCrowzLCwl\",\n    \"jobId\": \"XLTJ9TC9XrNS\",\n    \"orderIndex\": null,\n    \"createdAt\": {\n        \"date\": \"2019-03-27 14:42:01.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-06-04 15:19:56.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"job\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                }
              ],
              "_postman_id": "3976ceef-0c7b-4561-a7da-77f2a33e34d8",
              "_postman_isSubFolder": true
            },
            {
              "name": "ratings",
              "item": [
                {
                  "name": "/v1/engagements/:engagement/ratings/like",
                  "_postman_id": "8f912bc5-fa31-4478-915c-0141c0cdbc9e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "url": "{{host}}/v1/engagements/{{eId}}/ratings/like"
                  },
                  "response": []
                },
                {
                  "name": "/v1/engagements/:engagement/ratings/dislike",
                  "_postman_id": "f226b1e7-6c32-4005-bd6f-813c42ecf035",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "url": "{{host}}/v1/engagements/{{eId}}/ratings/dislike"
                  },
                  "response": []
                }
              ],
              "_postman_id": "387f676d-a28b-4c78-94da-d824ef83009b",
              "_postman_isSubFolder": true
            },
            {
              "name": "/v1/engagements",
              "_postman_id": "30c531b8-60eb-448d-9910-d93a80bd15b5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"job\": \"v2doAeKb3OVV\",\n\t\"candidate\": \"FAdhD5o6YkeQ\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{host}}/v1/engagements",
                "description": "## Create a new Engagement in a collection\n\n`POST /v1/engagements`\n\nPOST Parameters:\n\n* **job** (string), required - Name of the Engagement\n* **candidate** (string), required - Candidate id this invitation will be send for\n### Request:\n`POST /v1/engagements`\n\n```\n{\n\t\"job\": \"Coca Cola\",\n\t\"candidate\": \"acme\",\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"jobid\": \"FuEMDRZD0eDX\",\n    \"candidateId\": \"FuEMDRZD0eDX\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"assessment\" missing\",\n    \"code\": 400140301\n}\n```\n```\n{\n    \"message\": \"Required parameter \"name\" missing\",\n    \"code\": 400140302\n}\n```\n```\n```\n{\n    \"message\": \"Field assessment failed validation because value: \"61pQvCdLCKI6\" is not valid assessment id\",\n    \"code\": 404140301\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/engagements-import",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f961c5a5-bcd7-4136-9b81-ef48652e5801",
                    "exec": [
                      "pm.test(\"Importing... \", function(){\r",
                      "    job = pm.iterationData.get(\"job\");\r",
                      "    candidate = pm.iterationData.get(\"candidate\");\r",
                      "});\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "69b57b8d-44f1-4bb8-97ef-86935e1cbcd8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "job",
                      "value": "Yfexicxpvl88",
                      "type": "text"
                    },
                    {
                      "key": "candidate",
                      "value": "{{candidate}}",
                      "type": "text"
                    },
                    {
                      "key": "candidate",
                      "value": "NswsToBiJDVP",
                      "type": "text",
                      "disabled": true
                    }
                  ],
                  "options": {
                    "formdata": {}
                  }
                },
                "url": "{{host}}/v1/engagements",
                "description": "## Create a new Engagement in a collection\n\n`POST /v1/engagements`\n\nPOST Parameters:\n\n* **job** (string), required - Name of the Engagement\n* **candidate** (string), required - Candidate id this invitation will be send for\n### Request:\n`POST /v1/engagements`\n\n```\n{\n\t\"job\": \"Coca Cola\",\n\t\"candidate\": \"acme\",\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"jobid\": \"FuEMDRZD0eDX\",\n    \"candidateId\": \"FuEMDRZD0eDX\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"assessment\" missing\",\n    \"code\": 400140301\n}\n```\n```\n{\n    \"message\": \"Required parameter \"name\" missing\",\n    \"code\": 400140302\n}\n```\n```\n```\n{\n    \"message\": \"Field assessment failed validation because value: \"61pQvCdLCKI6\" is not valid assessment id\",\n    \"code\": 404140301\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/engagements",
              "_postman_id": "d10ab6d8-fcf1-415c-b072-09931c7f6251",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"job\": \"0aGqdKNixQqR\",\n\t\"candidate\": \"4kPZmqimd91i2\"\n}"
                },
                "url": "{{host}}/v1/engagements/{{eId}}",
                "description": "## Create a new Engagement in a collection\n\n`POST /v1/engagements`\n\nPOST Parameters:\n\n* **job** (string), required - Name of the Engagement\n* **candidate** (string), required - Candidate id this invitation will be send for\n### Request:\n`POST /v1/engagements`\n\n```\n{\n\t\"job\": \"Coca Cola\",\n\t\"candidate\": \"acme\",\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"jobid\": \"FuEMDRZD0eDX\",\n    \"candidateId\": \"FuEMDRZD0eDX\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"assessment\" missing\",\n    \"code\": 400140301\n}\n```\n```\n{\n    \"message\": \"Required parameter \"name\" missing\",\n    \"code\": 400140302\n}\n```\n```\n```\n{\n    \"message\": \"Field assessment failed validation because value: \"61pQvCdLCKI6\" is not valid assessment id\",\n    \"code\": 404140301\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/engagements",
              "_postman_id": "5c83d09d-bd47-464f-863b-5b00ce296a20",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{token}}"
                  }
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "text/csv",
                    "type": "text",
                    "disabled": true
                  }
                ],
                "url": {
                  "raw": "{{host}}/v1/engagements",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "v1",
                    "engagements"
                  ],
                  "query": [
                    {
                      "key": "sorts[]",
                      "value": "engagement.candidate-desc",
                      "disabled": true
                    },
                    {
                      "key": "count",
                      "value": "true",
                      "disabled": true
                    },
                    {
                      "key": "filters[]",
                      "value": "and-engagement_label.label-inci-value-TNQoeFYkwDlB",
                      "disabled": true
                    },
                    {
                      "key": "detailed",
                      "value": "true",
                      "disabled": true
                    },
                    {
                      "key": "offset",
                      "value": "1",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "1",
                      "disabled": true
                    },
                    {
                      "key": "filters[]",
                      "value": "and-engagement_label.label-inci-value-nL2GntK9HH3g",
                      "disabled": true
                    },
                    {
                      "key": "sorts[]",
                      "value": "invitation.statusUpdatedAt-DESC",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "20",
                      "disabled": true
                    },
                    {
                      "key": "filters[]",
                      "value": "and-engagement.status-eq-value-invited",
                      "disabled": true
                    },
                    {
                      "key": "filters[]",
                      "value": "and-engagement.archiveAt-bool-value-false",
                      "disabled": true
                    }
                  ]
                },
                "description": "## List Engagement objects\n\n`GET /v1/engagements`\n\nGET Parameters:\n* **filters** (array), optional - One or more filters\n* **sorts** (array), optional - One or more sorting parameters\n* **limit** (integer), optional - Limit on the result set\n* **offset** (integer), optional - Offset on the result set\n* **count** (boolean), optional - If set to true Response:X-Results-Total header will show total count in result set (regardless of any limit and offset set)\n\nFilter Types:\n* **engagement.id**\n* **engagement.name**\n* **engagement.job**\n* **engagement.candidate**\n* **engagement.createdAt**\n* **engagement.updatedAt**\n* **engagement.deletedAt**\n\nSort Types:\n* **engagement.id**\n* **engagement.job**\n* **engagement.candidate**\n* **engagement.createdAt**\n* **engagement.updatedAt**\n* **engagement.deletedAt**\n\n### Request:\n`GET /v1/engagements`\n\n### Response - 200 OK:\nX-Results-Total 2\n```\n[\n    {\n        \"id\": \"0v2q88rCEEgu\",\n        \"jobId\": \"job2q88rCEEgu\",\n        \"candidateId\": 'fan2q88rCEEgu',\n        \"createdAt\": {\n            \"date\": \"2019-05-07 09:54:11.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-05-31 10:27:12.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"0CxQDHFwWpcP\",\n        \"jobId\": \"fob2q88rCEEgu\",\n        \"candidateId\": 'can2q88rCEEgu',\n        \"createdAt\": {\n            \"date\": \"2019-05-15 14:49:18.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"value for index 0, part 2 (field) must be one of (engagement.id, engagement.job, engagement.candidate, engagement.createdAt, engagement.updatedAt, engagement.deletedAt)\",\n    \"code\": 4000101\n}\n```"
              },
              "response": [
                {
                  "id": "41cab6c7-e860-433e-9933-81b30653f29c",
                  "name": "/v1/assessments",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/assessments"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.10"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Fri, 31 May 2019 10:28:26 GMT"
                    },
                    {
                      "key": "X-Results-Total",
                      "value": "8"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "Access-Control-Allow-Methods",
                      "value": "POST, GET, OPTIONS, PATCH, PUT, DELETE"
                    },
                    {
                      "key": "Access-Control-Allow-Headers",
                      "value": "Content-Type, X-Auth-Token, X-App-Token, Authorization"
                    },
                    {
                      "key": "Access-Control-Expose-Headers",
                      "value": "X-Auth-Token-Expires-In, X-Results-Total"
                    },
                    {
                      "key": "X-Service-Name",
                      "value": "assessments-api"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "2abd9a"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:8001/_profiler/2abd9a"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"id\": \"0v2q88rCEEgu\",\n        \"name\": \"Candidate questionnaire\",\n        \"description\": \"Standard pesonal questionnaire for a quick interview\",\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-07 09:54:11.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-05-31 10:27:12.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"0CxQDHFwWpcP\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-15 14:49:18.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"2kL7ByaVCDKQ\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-16 11:59:00.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"E5PClbZto6bK\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-15 14:44:15.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"mAyKxydPIRRe\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-15 15:02:31.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"nzOnHCtt4Puh\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-03-27 17:14:22.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"TlaCrowzLCwl\",\n        \"name\": \"Pesonal questionnaire\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-03-27 14:41:08.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"zeMcv1deIMmS\",\n        \"name\": \"Pesonal questionnaire\",\n        \"description\": \"Standard pesonal questionnaire for a quick interview\",\n        \"isEnabled\": true,\n        \"createdAt\": {\n            \"date\": \"2019-05-31 10:24:23.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]"
                },
                {
                  "id": "c55a9cbe-4a31-4ca5-a7bb-e2573f8c47dc",
                  "name": "/v1/engagements?filters[]=and-job.id-eq-value-rZFPCc5XEa2n",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{host}}/v1/engagements?filters[]=and-job.id-eq-value-rZFPCc5XEa2n",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "v1",
                        "engagements"
                      ],
                      "query": [
                        {
                          "key": "detailed",
                          "value": "true",
                          "disabled": true
                        },
                        {
                          "key": "offset",
                          "value": "1",
                          "disabled": true
                        },
                        {
                          "key": "limit",
                          "value": "1",
                          "disabled": true
                        },
                        {
                          "key": "sorts[]",
                          "value": "invitation.updatedAt-asc",
                          "disabled": true
                        },
                        {
                          "key": "filters[]",
                          "value": "and-job.id-eq-value-rZFPCc5XEa2n"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.10"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Mon, 20 Jan 2020 10:59:58 GMT"
                    },
                    {
                      "key": "X-Results-Total",
                      "value": "96"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "Access-Control-Allow-Methods",
                      "value": "POST, GET, OPTIONS, PATCH, PUT, DELETE"
                    },
                    {
                      "key": "Access-Control-Allow-Headers",
                      "value": "Content-Type, X-Auth-Token, X-App-Token, Authorization"
                    },
                    {
                      "key": "Access-Control-Expose-Headers",
                      "value": "X-Auth-Token-Expires-In, X-Results-Total"
                    },
                    {
                      "key": "X-Service-Name",
                      "value": "assessments-api"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "c6d080"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:8001/_profiler/c6d080"
                    },
                    {
                      "key": "X-Robots-Tag",
                      "value": "noindex"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"id\": \"0dQhmYLOQQ2G\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"4kPZmqimd91i2\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-25 13:27:14.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-26 11:28:16.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"0kLJvSm7ht7N\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"QVbsdX4DGhFn\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-12-02 14:25:59.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-02 17:10:49.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"1SfpqQZ4qkiI\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"ijvARXAIFH60\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-03 21:23:29.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-03 21:56:17.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"22jF2CfRKMJ5\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"F02HjKR1PZDi\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-04 14:34:35.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-04 15:14:04.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"2QZ3yl1lCzet\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"kZYWROqBV2mK\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-22 11:00:50.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-22 11:08:22.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"2Xcu5q4tpSYi\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"aD2dFoZnaQA4\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-28 17:41:09.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-28 17:42:02.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"4Auqse6ivJPd\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"2IT0CJ0aLEWS\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-20 17:24:10.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-20 17:26:29.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"7NqQxReGQ1Kc\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"EdudCJYX848d\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-25 11:23:22.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-25 11:29:22.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"7oENNwv0yoKQ\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"SV2d1o2Ycqck\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-03 21:22:51.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-03 21:30:15.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"85ykPJxqYSQG\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"jcyQhop89Mt4\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-04 15:15:13.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-04 16:23:29.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"8DjGMXomYadY\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"1x5ub7Py5Xe9\",\n        \"status\": \"attentionRequired\",\n        \"createdAt\": {\n            \"date\": \"2019-11-22 16:14:13.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-22 16:18:39.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"A6P9R0hQC8TP\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"oyhv0i71ypRt\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-12-03 12:26:26.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-03 16:27:11.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"b2KAsqSH4yRW\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"WAny3AX09LDj\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-20 15:37:21.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-20 16:22:06.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"BfY5vXXYu0Yx\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"jjg2guHP7Hg6\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-03 12:05:24.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-03 12:14:12.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"BlXuQDs87YmW\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"IT5fim5JwXKA\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-12-09 15:43:55.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"BQ3eIECSeGxR\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"QK2PQTcrBelH\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-03 21:23:18.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-03 21:47:50.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"bQle0hBGovEm\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"QkkjcBwAIunj\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-13 14:52:10.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-13 17:31:07.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"CbgNKvIezAsH\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"LD5F7BNjdxds\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-19 16:59:20.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-20 15:30:34.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"CuHoy8pIKazM\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"bcghxC1iDssf\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-22 14:56:29.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-22 15:05:01.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"D9l1n2zkYnrF\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"yQXYgIpC8rem\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-18 17:26:26.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-19 11:36:27.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"DfD9zAoIgxA2\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"HrGkmCsgKwkr\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-11-13 17:33:55.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"dHm473kHwuS1\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"BzCoMYGzjzb1\",\n        \"status\": \"attentionRequired\",\n        \"createdAt\": {\n            \"date\": \"2019-11-26 11:36:16.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"EyaFs9cb9KuW\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"vkbW1mP4lFR5\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-11 14:42:32.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-11 14:53:49.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"F4QHO5op8cfQ\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"79TMuHjunzMB\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-22 15:20:02.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-22 15:38:28.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"FIl5ONJvzxN5\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"O7KankYeljQh\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-11-03 21:22:35.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"fTVV5Xt9czWB\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"7jwtAglQf4pT\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-09 15:52:02.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-09 15:54:55.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"g6JpKJ1BuOsh\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"wBbmXbIRqkcQ\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-22 16:45:58.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-22 16:57:08.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"GSyPtC9wfiGg\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"w8nyWjau9BeR\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-09 16:20:32.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-09 16:24:01.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"gtR5aL24y8G0\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"eP9Qw0EDX4LF\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-12-10 14:23:44.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"gybIRxFvYwE6\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"56e1H0WjEhdX\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-03 11:43:05.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-03 11:56:18.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"h4yaX5sOGNXE\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"C8guDcusKPYb\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-18 16:34:38.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-18 17:24:21.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"HHDIlRVIN84M\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"xfzMKcA8PDxp\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-19 12:48:12.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-19 13:43:47.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"hlVfV2IQlje4\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"Hebgcw0QkShd\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-19 15:48:57.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-19 16:12:42.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"hnQ8BvhKK12j\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"WLRzYaFBkDY0\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-12-10 13:26:52.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"hWvbdo8HLR9J\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"hXZEQuR7fWzH\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-09 16:04:57.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-09 16:08:09.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"ik7Da6Hb8DRI\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"wLndFZH1nySK\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-22 16:39:51.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-25 11:18:02.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"ilVGe2nIbEdJ\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"uyWwNIrIWZia\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-12-16 13:24:23.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-16 13:26:00.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"iNCA5MY5vhnt\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"unsNcT0dWDeM\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-12-18 17:12:17.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-18 17:14:23.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"IVJBVIG37w8S\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"P7X139nIWJW1\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-11 15:00:57.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-11 15:03:09.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"ivVDQ3gNzKAs\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"6MiS4HYBGSQv\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-07 10:12:17.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-07 10:16:49.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"iz5JhD53j4Ah\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"O7MPhRHNjcTJ\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-03 12:19:34.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-03 12:23:32.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"jK2zkuZfAVvr\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"RYYhj8MQkZwY\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-19 14:50:55.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-19 16:07:50.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"JOEY1yXagVmx\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"lZsvFBpf64Nm\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-10 15:54:55.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-10 15:58:43.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"jojBFbb1HZat\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"adkcEgJHCiyS\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-11-03 21:22:40.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"KAc9VaNBsuRx\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"M7hbRFAVI1mX\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-11-03 21:22:45.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"kGuqN7taxQgt\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"82ExMm0zzdh0\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-25 16:23:39.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-25 16:36:25.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"kihDKrGb4pJn\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"vmLfog6q83mQ\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-11-20 17:13:55.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"kOPxydstK2Qv\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"sMQlbGHXK61Y\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-28 17:47:44.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-28 17:50:01.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"ktr5X2kQRWMQ\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"xChq8HiqMjvh\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-20 17:17:32.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-20 17:22:31.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"LQgR7HxxWmE7\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"vQt1feAy9rvQ\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-12-02 15:59:41.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-03 09:45:11.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"lu1cyQLxSYt1\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"WJ2cOHyfsViJ\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-03 21:22:59.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-03 21:31:57.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"Luu9uxno9eku\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"DpFMVnX6xSvm\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-16 11:33:57.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-16 11:42:55.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"LVfcfS4Nq5M5\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"S9LP9j8hXQVv\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-03 09:49:23.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-03 10:00:56.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"m0QjNYPcJJPH\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"Nx7AQkDT4iTP\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-12-09 14:05:00.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"mfQCXVp2llvO\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"Fd44y15mbwMB\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-11-22 16:18:47.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"mQ2DZ5SQnjeF\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"7W7tPFzZ66BF\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-12-10 12:26:20.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"NaJbjR2myO4x\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"8EPMuLXeXYud\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-08 13:12:09.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-08 13:13:37.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"NhHFW9k31hwf\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"J6FTxYuW1m7N\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-12-10 15:20:55.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"nQhbhD077eSJ\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"nNJdf9dfAylv\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-12-18 17:17:38.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"o20peCKg0avn\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"alJXFZrkm3yC\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-22 16:25:53.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-25 11:22:06.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"ofW48ZhCviEE\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"HaWyQmCCmrvn\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-20 16:33:20.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-20 16:34:12.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"oo0KPyRwrgXJ\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"eku2OeNugH0F\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-03 21:23:12.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-03 21:38:20.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"oxnhRQwPAh2s\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"XP30Y1C7G8Aj\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-22 14:10:56.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-22 14:55:31.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"plZxi8KkcDGA\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"Sj6kvo3RdBtx\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-25 13:15:21.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-28 17:40:24.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"PXvlVZJwBn2Y\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"MJrxwy2HHn9c\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-25 11:20:04.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-25 11:21:23.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"QFeGL1NFHKcf\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"4h3NshndMRCd\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-19 11:41:22.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-20 15:39:52.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"QGgyLePdIpet\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"AcG4nBFo1h90\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-03 21:23:23.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-03 21:48:35.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"QHWyBp2doMjp\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"XJEG96pTqAPJ\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-18 11:41:09.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-18 13:14:19.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"RdFVjHu8B2Cl\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"vTKpDlvkNem1\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-20 10:42:17.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-20 14:26:59.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"rTGw9D4Iqw5v\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"G4YyWwiry3QC\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-25 12:09:08.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-25 13:03:22.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"Sg3e1V8xKY19\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"RznniuY7M5b1\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-13 17:36:21.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-13 18:05:30.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"sqyzioSgbAyI\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"uvuJ9hEakpFc\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-19 11:48:11.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-19 12:46:50.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"ThkgpGWJFFQn\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"AShR6MqVtWzI\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-12-03 11:10:05.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"Tiy8s0uc7KGt\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"a3kbPWpyN1oY\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-12-10 13:42:25.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-10 13:49:00.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"TTiLNleBQwRh\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"RemLOO8KLV9g\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-11-03 21:23:06.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"twu6gRxr5fsb\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"60dd3thaWo2H\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-20 14:33:19.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-20 15:07:27.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"uf77WQOAIudu\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"4Q6LV4JNA96D\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-19 16:10:11.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-19 16:57:36.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"ujQgn1n0P2Zr\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"jfMtd1PJrA1A\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-09 11:05:20.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-09 11:06:13.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"ul3TgqEaFvco\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"OETOJ5MqCjEd\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-12-10 15:27:42.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"vkRR7XRv81bV\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"H2kSLLKPSfVf\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-09 11:38:42.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-10 12:42:39.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"W0QJwAeuomvJ\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"4W2SHJloCcwk\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-18 11:33:32.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-18 11:36:33.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"wfaSmvaW5OeD\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"RHT7xzpwX78V\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-09 11:16:06.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-09 11:18:54.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"wJmQqrRWS11L\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"0cdZaoHZOOPW\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-08 13:00:45.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-08 13:06:03.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"WRrFbR4zamFw\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"KpIA3Ia5Iglq\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-18 13:53:18.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-18 13:59:46.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"wY1h3wXXvxo3\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"dWVQjd5BVzCL\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-26 11:30:51.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-27 16:03:46.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"x9CnpbLQuqDd\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"Wt3yM15OhAa6\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-12-10 13:39:03.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-10 13:41:15.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"xLplENJqRJhj\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"5Q9F4PRm0zIK\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-22 15:23:24.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-22 15:50:28.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"XS9lSdXgZC8I\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"Qe7d8uEAnbm4\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-04 14:15:01.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-04 15:08:09.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"xTDG9kamRt5M\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"AVtWIme2xG52\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-12-10 11:23:12.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-10 11:49:28.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"yE8Q6Q0PTRaH\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"L9YoJJoirTwZ\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-22 16:10:37.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-22 16:12:49.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"YlMykKYlwJZj\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"BWlVi2Ofmgo4\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-12-11 14:54:39.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-11 14:59:26.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"Z8QwP7k55ZJJ\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"jqzdBmcpWuJZ\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-20 16:16:21.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-20 16:22:06.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"zEuTuiLobZNq\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"djpNxn9PwXQv\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-13 18:16:48.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-13 18:23:13.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"ZK5rh5cXZV1N\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"E2MqiSQ94GKd\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-08 14:42:07.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-08 14:43:15.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"ZOSdRmPryK0W\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"vZmqQfIj48nX\",\n        \"status\": \"invited\",\n        \"createdAt\": {\n            \"date\": \"2019-12-09 14:34:49.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"zsJYPB3zR1ii\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"NBxEMmFyQsQw\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-11-22 12:21:21.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-22 12:22:19.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    }\n]"
                },
                {
                  "id": "99fb9505-e654-482a-a3b6-f7d4ef2d087b",
                  "name": "/v1/engagements?filters[]=and-engagement.job-eq-value-rZFPCc5XEa2n",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "https://10f25f13-2738-463b-bddc-2e751d269440.mock.pstmn.io/v1/engagements",
                      "protocol": "https",
                      "host": [
                        "10f25f13-2738-463b-bddc-2e751d269440",
                        "mock",
                        "pstmn",
                        "io"
                      ],
                      "path": [
                        "v1",
                        "engagements"
                      ],
                      "query": [
                        {
                          "key": "detailed",
                          "value": "true",
                          "disabled": true
                        },
                        {
                          "key": "offset",
                          "value": "1",
                          "disabled": true
                        },
                        {
                          "key": "limit",
                          "value": "1",
                          "disabled": true
                        },
                        {
                          "key": "sorts[]",
                          "value": "invitation.updatedAt-asc",
                          "disabled": true
                        },
                        {
                          "key": "filters[]",
                          "value": "and-engagement.job-eq-value-rZFPCc5XEa2n",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.10"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Mon, 20 Jan 2020 11:09:48 GMT"
                    },
                    {
                      "key": "X-Results-Total",
                      "value": "96"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "Access-Control-Allow-Methods",
                      "value": "POST, GET, OPTIONS, PATCH, PUT, DELETE"
                    },
                    {
                      "key": "Access-Control-Allow-Headers",
                      "value": "Content-Type, X-Auth-Token, X-App-Token, Authorization"
                    },
                    {
                      "key": "Access-Control-Expose-Headers",
                      "value": "X-Auth-Token-Expires-In, X-Results-Total"
                    },
                    {
                      "key": "X-Service-Name",
                      "value": "assessments-api"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "d14803"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:8001/_profiler/d14803"
                    },
                    {
                      "key": "X-Robots-Tag",
                      "value": "noindex"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"id\": \"0dQhmYLOQQ2G\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"06dRq42ch9bx\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-25 13:27:14.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-26 11:28:16.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"0kLJvSm7ht7N\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"QVbsdX4DGhFn\",\n        \"status\": \"inProgress\",\n        \"createdAt\": {\n            \"date\": \"2019-12-02 14:25:59.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-02 17:10:49.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"1SfpqQZ4qkiI\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"ijvARXAIFH60\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-11-03 21:23:29.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-11-03 21:56:17.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"22jF2CfRKMJ5\",\n        \"jobId\": \"rZFPCc5XEa2n\",\n        \"candidateId\": \"F02HjKR1PZDi\",\n        \"status\": \"completed\",\n        \"createdAt\": {\n            \"date\": \"2019-12-04 14:34:35.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-12-04 15:14:04.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    }\n]"
                }
              ]
            },
            {
              "name": "/v1/engagements/: engagement",
              "_postman_id": "28d74be3-272d-4363-a77a-970c9d73d6b6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": "{{host}}/v1/engagements/{{eId}}",
                "description": "## Reads Engagement details\n\n`GET /v1/engagements/:id`\n\nSegment Parameters:\n* **id** (string) - Engagement id\n\n### Request:\n`GET /v1/engagements/FuEMDRZD0eDX`\n\n### Response - 200 OK:\n```\n{\n\"id\": \"FuEMDRZD0eDX\",\n\"jobId\": \"Coca Cola\",\n\"jobTitle\": \"We make drinks\",\n\"jobSalary\": \"20000\",\n\"jobSalaryUnit\": \"weekly\",\n\"jobLocation\": \"London\",\n\"jobStartDate\": {\n\"date\": \"2019-05-07 09:54:11.000000\",\n\"timezone_type\": 3,\n\"timezone\": \"UTC\"\n},\n\"candidateId\": \"acme\",\n\"status\": \"active\"\n\"createdAt\": {\n\"date\": \"2019-05-07 09:54:11.000000\",\n\"timezone_type\": 3,\n\"timezone\": \"UTC\"\n},\n\"updatedAt\": {\n\"date\": \"2019-05-31 10:27:12.785241\",\n\"timezone_type\": 3,\n\"timezone\": \"UTC\"\n},\n\"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n\"message\": \"Engagement not found\",\n\"code\": 0\n}\n```"
              },
              "response": []
            }
          ],
          "_postman_id": "a2c13865-117e-48a2-bfc6-61efaf621d8d",
          "_postman_isSubFolder": true
        },
        {
          "name": "jobs",
          "item": [
            {
              "name": "assessments",
              "item": [
                {
                  "name": "/v1/jobs/:job/assessments",
                  "_postman_id": "0f35f08c-e58f-40cd-aa38-74b5a49b6ca1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{host}}/v1/jobs/{{jId}}/assessments",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "v1",
                        "jobs",
                        "{{jId}}",
                        "assessments"
                      ],
                      "query": [
                        {
                          "key": "sorts[]",
                          "value": "job_assessment.createdAt-desc",
                          "disabled": true
                        },
                        {
                          "key": "limit",
                          "value": "1",
                          "disabled": true
                        },
                        {
                          "key": "filters[]",
                          "value": "and-job.client-eq-value-0brMhsDJudIp",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "## List Assessment Job objects\n\n`GET /v1/assessments/:assessment/jobs`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nGET Parameters:\n* **filters** (array), optional - One or more filters\n* **sorts** (array), optional - One or more sorting parameters\n* **limit** (integer), optional - Limit on the result set\n* **offset** (integer), optional - Offset on the result set\n* **count** (boolean), optional - If set to true Response:X-Results-Total header will show total count in result set (regardless of any limit and offset set)\n\nFilter Types:\n* **a_job.id**\n* **a_job.orderIndex**\n* **a_job.createdAt**\n* **a_job.updatedAt**\n* **a_job.deletedAt**\n\nSort Types:\n* **a_job.id**\n* **a_job.orderIndex**\n* **a_job.createdAt**\n* **a_job.updatedAt**\n* **a_job.deletedAt**\n\n### Request:\n`GET /v1/assessments/TlaCrowzLCwl/jobs`\n\n### Response - 200 OK:\nX-Results-Total 3\n```\n[\n    {\n        \"id\": \"LeAE39QWv2bB\",\n        \"assessmentId\": \"TlaCrowzLCwl\",\n        \"jobId\": \"XLTJ9TC9XrNS\",\n        \"orderIndex\": null,\n        \"createdAt\": {\n            \"date\": \"2019-03-27 14:42:01.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-06-04 15:19:56.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"MmAE39QWv2bB\",\n        \"assessmentId\": \"TlaCrowzLCwl\",\n        \"jobId\": \"BrDdGtwHldcQ\",\n        \"orderIndex\": 1,\n        \"createdAt\": {\n            \"date\": \"2019-03-27 14:42:01.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-06-04 15:22:56.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"OoAE39QWv2bB\",\n        \"assessmentId\": \"TlaCrowzLCwl\",\n        \"jobId\": \"GGLuTjGMzC3l\",\n        \"orderIndex\": 2,\n        \"createdAt\": {\n            \"date\": \"2019-03-27 14:42:01.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-06-04 15:22:56.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    }\n]\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"value for index 0, part 2 (field) must be one of (a_job.id, a_job.orderIndex, a_job.createdAt, a_job.updatedAt, a_job.deletedAt)\",\n    \"code\": 4000101\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/assessments",
                  "_postman_id": "1c60eb95-14f8-4ba7-9045-605e923ac2d0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{token}}"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"assessment\": \"sCNadxyeADz6\"\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/assessments",
                    "description": "## Create a new Assessment Job in a collection\n\n`POST /v1/assessments/:assessment/jobs`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nPOST Parameters:\n* **job** (string), required - Job Id\n\n### Request:\n`POST /v1/assessments/TlaCrowzLCwl/jobs`\n\n```\n{\n\t\"job\": \"XLTJ9TC9XrNS\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"LeAE39QWv2bB\",\n    \"assessmentId\": \"TlaCrowzLCwl\",\n    \"jobId\": \"XLTJ9TC9XrNS\",\n    \"orderIndex\": null,\n    \"createdAt\": {\n        \"date\": \"2019-03-27 14:42:01.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-06-04 15:19:56.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"job\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/assessments/:job_a",
                  "_postman_id": "669883c9-a728-4789-9d81-38bffc875d82",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"question\": \"uSwbfidRb9bL\"\n}"
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/assessments/{{jaId}}"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/assessments/:job_a",
                  "_postman_id": "301eadf1-5ee3-430e-b3b8-03904381d1ba",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"question\": \"uSwbfidRb9bL\"\n}"
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/assessments/{{jaId}}"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/assessments/:job_a",
                  "_postman_id": "1c538bab-e5b2-46aa-a08b-d49c038efc82",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/assessments/{{jaId}}"
                  },
                  "response": []
                }
              ],
              "_postman_id": "682301ad-1168-4918-8399-b8d81fe4d502",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1459fcc9-42e4-47a3-a2e3-1fa00a4c1966",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "f5ded677-0040-453e-9117-91da9c29d0ba",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "reminders",
              "item": [
                {
                  "name": "/v1/job/:id/reminders",
                  "_postman_id": "1a6f82bf-2324-43a0-abce-a749cbcca40d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"channel\": \"email\"\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/reminders"
                  },
                  "response": []
                },
                {
                  "name": "/v1/job/:id/reminders",
                  "_postman_id": "c579d3f6-20e2-4aca-8db5-b9c2c490878d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/jobs/{{jId}}/reminders"
                  },
                  "response": []
                },
                {
                  "name": "/v1/job/:id/reminders/:id",
                  "_postman_id": "1d2fe427-4445-4131-b5e7-06fd4090a29d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/jobs/{{jId}}/reminders/{{jrId}}"
                  },
                  "response": []
                }
              ],
              "_postman_id": "d9052fcb-aa2e-431a-9f69-33f59471bee6",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e1996f5a-6497-47df-9f7c-5b9dc5ed3a14",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "47c99cca-a698-455f-86d8-024294c0f926",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "engagements",
              "item": [
                {
                  "name": "/v1/job/:id/engagemnts",
                  "_postman_id": "15dbb9ec-5af8-47cb-97cb-bcbd2d7e4137",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "text/csv",
                        "type": "text",
                        "disabled": true
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{host}}/v1/jobs/{{jId}}/engagements?detailed=true",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "v1",
                        "jobs",
                        "{{jId}}",
                        "engagements"
                      ],
                      "query": [
                        {
                          "key": "detailed",
                          "value": "true"
                        },
                        {
                          "key": "limit",
                          "value": "2",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:id/engagements/stats",
                  "_postman_id": "cbddee95-0592-4fbd-be46-a38da4677be5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{host}}/v1/jobs/{{jId}}/engagements/stats",
                    "description": "## Reads Job details\n\n`GET /v1/jobs/:id`\n\nSegment Parameters:\n* **id** (string) - Job id\n\n### Request:\n`GET /v1/jobs/FuEMDRZD0eDX`\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"title\": \"Peaky Blinder\",\n    \"candidateSummary\": \"Must be a brummie\",\n    \"brief\": \"By order of the Peaky Blinders!!!\",\n    \"type\": \"permanent\",\n    \"currency\": \"Shillings\",\n    \"salary\": \"2\",\n    \"salaryUnit\": \"week\",\n    \"startDate\": \"1512486297\",\n    \"location\": \"Birmingham\",\n    \"keywords\": \"peaky, blinder, by order of\",\n    \"remoteWorking\": \"true\",\n    \"otherTypes\": \"true\",\n    \"salaryFlexibility\": \"5\",\n    \"earlierStart\": \"true\",\n    \"noticeFlexibility\": \"4\",\n    \"status\": \"new\"\n    \"createdAt\": {\n        \"date\": \"2019-05-07 09:54:11.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-05-31 10:27:12.785241\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Job not found\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                }
              ],
              "_postman_id": "78a30def-db90-496b-8646-acc0a482ba8a",
              "_postman_isSubFolder": true
            },
            {
              "name": "labels",
              "item": [
                {
                  "name": "/v1/jobs/:job/labels",
                  "_postman_id": "624b1b49-373c-4dc6-bc5c-d71ed780ca45",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/jobs/{{jId}}/labels"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/labels",
                  "_postman_id": "97b44a66-d87a-4985-a14c-0b0f343354d9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"label\": \"fGqyjfBKiA3a\"\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/labels"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/labels",
                  "_postman_id": "7009c2dd-c128-4b4d-a13c-f98777052780",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": ""
                  },
                  "response": []
                }
              ],
              "_postman_id": "b25959c7-665c-44dc-aa38-8c8bb5c267a0",
              "_postman_isSubFolder": true
            },
            {
              "name": "channels",
              "item": [
                {
                  "name": "/v1/jobs/:job/channels",
                  "_postman_id": "17d77980-2e6c-4f1d-851d-2a6cf6001138",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/jobs/{{jId}}/channels"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/channels",
                  "_postman_id": "79d82c53-a302-4606-be3b-867f8059a5a7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"channel\": \"xBpWqL7pfgHu\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/channels"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/channels/:id",
                  "_postman_id": "75adb3d4-144b-446c-a1da-22c73beb5026",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{host}}/v1/jobs/{{jId}}/channels/{{jChId}}"
                  },
                  "response": []
                }
              ],
              "_postman_id": "112ab35e-c17e-46de-959f-c59230affcc2",
              "_postman_isSubFolder": true
            },
            {
              "name": "notification-channels",
              "item": [
                {
                  "name": "/v1/jobs/:job/notification-channels",
                  "_postman_id": "fdd42393-16ef-4301-97b7-d61287ce997e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{host}}/v1/jobs/{{jId}}/notification-channels",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "v1",
                        "jobs",
                        "{{jId}}",
                        "notification-channels"
                      ],
                      "query": [
                        {
                          "key": "detailed",
                          "value": "true",
                          "type": "text",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/notification-channels",
                  "_postman_id": "f86f3672-2e9a-448f-9c35-07eef6cfab21",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{token}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"channel\": \"Z3VTmexXQe64\",\r\n    \"type\": \"reminder\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/notification-channels"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/notification-channels/:id",
                  "_postman_id": "631952d7-15a5-4498-aac3-ae0269d3a771",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{token}}"
                      }
                    },
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"channel\": \"qqjIc3VOQwgD\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/notification-channels/{{jNCId}}"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/notification-channels/:id",
                  "_postman_id": "21a4e5b7-56ac-4434-a8ac-657587577680",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{token}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/notification-channels/{{jNCId}}"
                  },
                  "response": []
                }
              ],
              "_postman_id": "dfa4db9f-8003-4287-a631-960bc741acbd",
              "_postman_isSubFolder": true
            },
            {
              "name": "validate",
              "item": [
                {
                  "name": "/v1/jobs/verify/:token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "834077eb-117d-4079-b317-03f09f0bb699",
                        "exec": [
                          "var jsonData = pm.response.json();\r",
                          "pm.environment.set(\"invokeToken\", jsonData.token);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b300bb42-dff7-44dd-a3b8-3a7487f01b9e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/jobs/verify/{{jToken}}",
                    "description": "## Validates Invitation address\n\n`GET /v1/invitations/verify/:token`\n\nSegment Parameters:\n* **token** (string), required - Token to use for verification\n\n### Request:\n`GET /v1/invitations/verify/J1N8yQRuzG7aJ1N8yQRuzG7aJ1N8yQRuzG7a`\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"p0otGC8jMlSs\",\n    \"phone\": \"+447877557799\"\n}\n```\n\n### Error Response Codes\n`404 - Not Found`\n```\n{\n    \"message\": \"Invitation not found\",\n    \"code\": 404140201\n}\n```"
                  },
                  "response": [
                    {
                      "id": "920a3e1c-0da9-45fc-805f-debdae784d17",
                      "name": "/v1/invitations/verify/:token",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": "https://10f25f13-2738-463b-bddc-2e751d269440.mock.pstmn.io/v1/invitations/verify/cDOQ1XRAqTKgseCfwrOsZHj935jcqKpEwO1i1ZWy5rTVY3oe"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Server",
                          "value": "nginx/1.17.8"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Transfer-Encoding",
                          "value": "chunked"
                        },
                        {
                          "key": "Cache-Control",
                          "value": "no-cache, private"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 30 Jan 2020 09:15:25 GMT"
                        },
                        {
                          "key": "Access-Control-Allow-Origin",
                          "value": "*"
                        },
                        {
                          "key": "X-Content-Type-Options",
                          "value": "nosniff"
                        },
                        {
                          "key": "Access-Control-Allow-Methods",
                          "value": "POST, GET, OPTIONS, PATCH, PUT, DELETE"
                        },
                        {
                          "key": "Access-Control-Allow-Headers",
                          "value": "Content-Type, X-Auth-Token, X-App-Token, Authorization"
                        },
                        {
                          "key": "Access-Control-Expose-Headers",
                          "value": "X-Auth-Token-Expires-In, X-Results-Total"
                        },
                        {
                          "key": "X-Service-Name",
                          "value": "assessments-api"
                        },
                        {
                          "key": "X-Robots-Tag",
                          "value": "noindex"
                        },
                        {
                          "key": "Via",
                          "value": "1.1 google"
                        },
                        {
                          "key": "Alt-Svc",
                          "value": "clear"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"id\": \"06C9PcjzsrdO\",\n    \"phone\": \"+447877552977\",\n    \"jobTitle\": \"Full Stack PHP Developer\",\n    \"jobLocation\": \"London\",\n    \"jobCandidateSummary\": \"My client fundamentally believes that travel shouldn’t damage the Earth so they have made it their mission to install a Electric Vehicle charging point everywhere you park. To make that vision a reality they need the brightest, most tenacious and most inspiring talent in the world – they are growing faster than the market and they need to maintain that velocity - that’s where you come in!\",\n    \"jobBrief\": \"Role activities and responsibilities\\n\\nThey have built a pan-European IoT network of smart charging devices and need a pioneering tech stack to support it with real-time messaging. They also have an industry leading mobile app (built using React Native) offering a green energy ecosystem for their customers and EV drivers.\\n\\nNext hire, Full Stack Developers to help us achieve their mission - you will be working with the latest technology to support their roadmap. Current stack is PHP 7+, Laravel 5.4+, ES6, ReactJS, React Native, most of the AWS resources (Kinesis, Lambda, API Gateway, Elasticsearch etc) and HTML5/CSS3/SASS.\\n\\nYou should be hungry for innovation and keen to explore and utilise all of the tools available to make your work effective, efficient and industry leading. You will work closely with the rest of the software team to build elegant, high performance solutions. You will report into the Head of Software Engineering and will be based near to Old Street Station in London.\\n\\nYour mentality\\n\\nYou’re always learning new technologies and looking to advance your skills\\n\\nYou’re organised and detail-oriented enough to manage projects with many moving parts\\n\\nYou play well with others\\n\\nYou get stuff done, but you also care about the quality of your work\\n\\nWhat you'll have\\n\\nExcellent understanding of PHP 7, working with frameworks such as Laravel, Symfony, etc\\n\\nExcellent understanding of Javascript (ES6), working with frameworks such as ReactJs, Vue, Angular, Node, etc\\n\\nExcellent understanding of SQL and relational databases structures\\n\\nExcellent understanding of HTML & CSS/SASS\\n\\nKnowledge of systems architecture and web technologies, and exposure to scalable, distributed and real-time platforms\\n\\nExperience deploying to AWS cloud infrastructure (ideally using AWS Opsworks & Chef)\\n\\nAbility to review proposals, designs and specifications to ensure they are implementable, proposing suitable alternatives if necessary\\n\\nExperience working within development pipelines and continuous integration\\n\\nExperience working with TDD/BDD\\n\\nExperience working within an Agile software team (SCRUM)\\n\\nGuru of all things Git/Github\\n\\nWhat's “Nice to have” but not essential\\n• Experience working with Craft CMS or Twig templates\\n• Experience with Selenium/Web driver/Nightwatch.js in-browser testing\\n• Experience with React Native\\n• A dog that you can bring into the office\\n• Passionate and knowledgeable about the EV industry\\n\\nBenefits:\\n• Flexible working hours\\n• Casual dress code\\n• Free snacks and drinks\\n• 25 days holiday\\n• Very generous maternity and paternity leave scheme\\n• A fully stocked beer fridge and regular social events (probably too regular)\\n• Pension scheme\\n• Eyecare scheme\\n• Bike to work scheme\\n• Discounted gym membership\\n• An extensive library to provide you with inspiration\\n\\nInterested? In the first instance please apply below. If you can include your CV and examples of your great code that would be awesome.\\n\\nEdison Hill Limited are operating and advertising as an Employment Agency for permanent positions and as an Employment Business for interim / contract / temporary positions. Edison Hill Limited are an Equal Opportunities employer and we encourage applicants from all backgrounds.PLEASE ENSURE THAT THE JOB REFERENCE NUMBER APPEARS IN THE SUBJECT BOX\",\n    \"candidateFirstName\": null,\n    \"clientName\": \"Trump Digital\",\n    \"clientBrandColour\": null,\n    \"companyName\": \"Elective\"\n}"
                    }
                  ]
                },
                {
                  "name": "/v1/jobs/verify/quickstart",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3c7e4ddb-4aef-4baa-ab1d-1ad535cf635f",
                        "exec": [
                          "var jsonData = pm.response.json();\r",
                          "pm.environment.set(\"invokeToken\", jsonData.token);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "298e4dff-0b11-45e2-9b12-718e39b8dcb3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"firstName\": \"John\",\n\t\"lastName\": \"Doe\",\n\t\"email\": \"joh.doe@example.com\",\n\t\"phone\": \"+447877557788\",\n    \"job\": \"SydTIaLmFA9k\",\n    \"response\": \"03AGdBq24Rc1ecBRY_ZpYOL7qBdIvUFO17F0yu1pknITQuiJb8Q7hx6ozFwnmx5aPNuUqrRTEDYE8kbYNAhOEdKzBH6bL28PkFIyoK_rJtMrX__LvS9e_lSIz67xqcJJWqI0N2a0dx-TrkQEq6fxtSzP7Ekhgku-kZq-914t4u5ifHDyqYhkyF7o9ow-FVIW06IoZIoRfhcGzfYM9-YHPpjnZP47xWwo5iBmFfAa6QncrT33jc8ir359V79Zy9bwSx7yXCOJcmqHqOyl6W30Y2jt9Xu5R_qQNNbwNOuDaHqGXhgKCbeBw8pZ4LhfbABU8mgK4xdZQDzc_tzCS6H1ljlXpLlSrYpYYhXERwIkQuO45tV4AAt3bV9Jq5YJMoVUcxsGcs0oSbMs4rNbgkiToFAHrsEF0fjz5MCOBC_K3UdLKOHpW6-PBDXUU\",\n    \"referer\": \"https://shortlink-api.connect.staging.et-ns.net/B91P7rnB\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{host}}/v1/jobs/verify/quickstart",
                    "description": "## Validates Invitation address\n\n`GET /v1/invitations/verify/:token`\n\nSegment Parameters:\n* **token** (string), required - Token to use for verification\n\n### Request:\n`GET /v1/invitations/verify/J1N8yQRuzG7aJ1N8yQRuzG7aJ1N8yQRuzG7a`\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"p0otGC8jMlSs\",\n    \"phone\": \"+447877557799\"\n}\n```\n\n### Error Response Codes\n`404 - Not Found`\n```\n{\n    \"message\": \"Invitation not found\",\n    \"code\": 404140201\n}\n```"
                  },
                  "response": [
                    {
                      "id": "bd9d9455-6b26-4949-b634-232352561688",
                      "name": "/v1/invitations/verify/:token",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": "https://10f25f13-2738-463b-bddc-2e751d269440.mock.pstmn.io/v1/invitations/verify/cDOQ1XRAqTKgseCfwrOsZHj935jcqKpEwO1i1ZWy5rTVY3oe"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Server",
                          "value": "nginx/1.17.8"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Transfer-Encoding",
                          "value": "chunked"
                        },
                        {
                          "key": "Cache-Control",
                          "value": "no-cache, private"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 30 Jan 2020 09:15:25 GMT"
                        },
                        {
                          "key": "Access-Control-Allow-Origin",
                          "value": "*"
                        },
                        {
                          "key": "X-Content-Type-Options",
                          "value": "nosniff"
                        },
                        {
                          "key": "Access-Control-Allow-Methods",
                          "value": "POST, GET, OPTIONS, PATCH, PUT, DELETE"
                        },
                        {
                          "key": "Access-Control-Allow-Headers",
                          "value": "Content-Type, X-Auth-Token, X-App-Token, Authorization"
                        },
                        {
                          "key": "Access-Control-Expose-Headers",
                          "value": "X-Auth-Token-Expires-In, X-Results-Total"
                        },
                        {
                          "key": "X-Service-Name",
                          "value": "assessments-api"
                        },
                        {
                          "key": "X-Robots-Tag",
                          "value": "noindex"
                        },
                        {
                          "key": "Via",
                          "value": "1.1 google"
                        },
                        {
                          "key": "Alt-Svc",
                          "value": "clear"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"id\": \"06C9PcjzsrdO\",\n    \"phone\": \"+447877552977\",\n    \"jobTitle\": \"Full Stack PHP Developer\",\n    \"jobLocation\": \"London\",\n    \"jobCandidateSummary\": \"My client fundamentally believes that travel shouldn’t damage the Earth so they have made it their mission to install a Electric Vehicle charging point everywhere you park. To make that vision a reality they need the brightest, most tenacious and most inspiring talent in the world – they are growing faster than the market and they need to maintain that velocity - that’s where you come in!\",\n    \"jobBrief\": \"Role activities and responsibilities\\n\\nThey have built a pan-European IoT network of smart charging devices and need a pioneering tech stack to support it with real-time messaging. They also have an industry leading mobile app (built using React Native) offering a green energy ecosystem for their customers and EV drivers.\\n\\nNext hire, Full Stack Developers to help us achieve their mission - you will be working with the latest technology to support their roadmap. Current stack is PHP 7+, Laravel 5.4+, ES6, ReactJS, React Native, most of the AWS resources (Kinesis, Lambda, API Gateway, Elasticsearch etc) and HTML5/CSS3/SASS.\\n\\nYou should be hungry for innovation and keen to explore and utilise all of the tools available to make your work effective, efficient and industry leading. You will work closely with the rest of the software team to build elegant, high performance solutions. You will report into the Head of Software Engineering and will be based near to Old Street Station in London.\\n\\nYour mentality\\n\\nYou’re always learning new technologies and looking to advance your skills\\n\\nYou’re organised and detail-oriented enough to manage projects with many moving parts\\n\\nYou play well with others\\n\\nYou get stuff done, but you also care about the quality of your work\\n\\nWhat you'll have\\n\\nExcellent understanding of PHP 7, working with frameworks such as Laravel, Symfony, etc\\n\\nExcellent understanding of Javascript (ES6), working with frameworks such as ReactJs, Vue, Angular, Node, etc\\n\\nExcellent understanding of SQL and relational databases structures\\n\\nExcellent understanding of HTML & CSS/SASS\\n\\nKnowledge of systems architecture and web technologies, and exposure to scalable, distributed and real-time platforms\\n\\nExperience deploying to AWS cloud infrastructure (ideally using AWS Opsworks & Chef)\\n\\nAbility to review proposals, designs and specifications to ensure they are implementable, proposing suitable alternatives if necessary\\n\\nExperience working within development pipelines and continuous integration\\n\\nExperience working with TDD/BDD\\n\\nExperience working within an Agile software team (SCRUM)\\n\\nGuru of all things Git/Github\\n\\nWhat's “Nice to have” but not essential\\n• Experience working with Craft CMS or Twig templates\\n• Experience with Selenium/Web driver/Nightwatch.js in-browser testing\\n• Experience with React Native\\n• A dog that you can bring into the office\\n• Passionate and knowledgeable about the EV industry\\n\\nBenefits:\\n• Flexible working hours\\n• Casual dress code\\n• Free snacks and drinks\\n• 25 days holiday\\n• Very generous maternity and paternity leave scheme\\n• A fully stocked beer fridge and regular social events (probably too regular)\\n• Pension scheme\\n• Eyecare scheme\\n• Bike to work scheme\\n• Discounted gym membership\\n• An extensive library to provide you with inspiration\\n\\nInterested? In the first instance please apply below. If you can include your CV and examples of your great code that would be awesome.\\n\\nEdison Hill Limited are operating and advertising as an Employment Agency for permanent positions and as an Employment Business for interim / contract / temporary positions. Edison Hill Limited are an Equal Opportunities employer and we encourage applicants from all backgrounds.PLEASE ENSURE THAT THE JOB REFERENCE NUMBER APPEARS IN THE SUBJECT BOX\",\n    \"candidateFirstName\": null,\n    \"clientName\": \"Trump Digital\",\n    \"clientBrandColour\": null,\n    \"companyName\": \"Elective\"\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "95176944-d56e-4ebd-98a1-6dd5b5deb390",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "6827bacc-1bc0-4542-a580-e1bb254bb2f7",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "aa006f5d-f822-4601-89fb-3980c515ddde",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "jobLinks",
              "item": [
                {
                  "name": "/v1/jobs/:job/jobLinks",
                  "_postman_id": "ce16d5a4-fc9d-43ed-b926-9789151c8f29",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"url\": \"www.google.com\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/jobLinks"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/jobLinks/:id",
                  "_postman_id": "12d9897c-33e3-481c-bb18-7fc2aa709812",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/jobs/{{jId}}/jobLinks/{{jlId}}"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/jobLinks/:id",
                  "_postman_id": "b5b8cffa-d6da-4b7a-b841-1dd8908c022e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/jobLinks/{{jlId}}"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/jobLinks",
                  "_postman_id": "b06aa782-9950-41b5-8e31-598a23f5fb66",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/jobLinks"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/jobLinks/:id",
                  "_postman_id": "ce7efb24-5bf2-4257-a9f2-a28840a96d27",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{host}}/v1/jobs/{{jId}}/jobLinks/{{jlId}}"
                  },
                  "response": []
                }
              ],
              "_postman_id": "d87d5f6b-8d1f-4792-90bd-0a24774dcc02",
              "_postman_isSubFolder": true
            },
            {
              "name": "transcripts",
              "item": [
                {
                  "name": "/v1/jobs/:job/transcripts",
                  "_postman_id": "d5ac7189-a5db-46ac-afb3-2a68d774b140",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/jobs/{{jId}}/transcripts",
                    "description": "## List Invitation Transcripts objects\n\n`GET /v1/invitations/:invitation/transcripts`\n\nSegment Parameters:\n* **invitation** (string) - Invitation id that transcript belongs to\n\nGET Parameters:\n* **filters** (array), optional - One or more filters\n* **sorts** (array), optional - One or more sorting parameters\n* **limit** (integer), optional - Limit on the result set\n* **offset** (integer), optional - Offset on the result set\n* **count** (boolean), optional - If set to true Response:X-Results-Total header will show total count in result set (regardless of any limit and offset set)\n\nEntities:\n* **transcript** - Transcript\n* **invitation** - Invitation this Transcript belongs to\n* **question** - Question this transcript is for\n* **a_question** - Assessment Question (Link between Question and instance of the Assessment)\n\nFilter Types:\n* **transcript.id**\n* **transcript.text**\n* **transcript.sender**\n* **transcript.questionId**\n* **transcript.isQA**\n* **transcript.action**\n* **transcript.intent**\n* **transcript.generatedAt**\n* **transcript.createdAt**\n* **transcript.updatedAt**\n* **transcript.deletedAt**\n* **invitation.id**\n* **invitation.createdAt**\n* **invitation.updatedAt**\n* **invitation.deletedAt**\n* **question.id**\n* **question.createdAt**\n* **question.updatedAt**\n* **question.deletedAt**\n\nSort Types:\n* **transcript.id**\n* **transcript.text**\n* **transcript.sender**\n* **transcript.questionId**\n* **transcript.isQA**\n* **transcript.action**\n* **transcript.intent**\n* **transcript.generatedAt**\n* **transcript.createdAt**\n* **transcript.updatedAt**\n* **transcript.deletedAt**\n* **invitation.id**\n* **invitation.createdAt**\n* **invitation.updatedAt**\n* **invitation.deletedAt**\n* **question.id**\n* **question.createdAt**\n* **question.updatedAt**\n* **question.deletedAt**\n* **a_question.id**\n* **a_question.orderIndex**\n* **a_question.createdAt**\n* **a_question.updatedAt**\n* **a_question.deletedAt**\n\n### Request:\n`GET /v1/invitations/SQzWmi0FbhtH/transcripts`\n\n### Response - 200 OK:\nX-Results-Total 2\n```\n[\n    {\n        \"id\": \"KvRwOdKSx3Q0\",\n        \"text\": \"Hey\",\n        \"sender\": \"bot\",\n        \"isQA\": false,\n        \"action\": \"next_question\",\n        \"intent\": \"yes_interested\",\n        \"generatedAt\": {\n            \"date\": \"2019-03-22 15:57:14.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"createdAt\": {\n            \"date\": \"2019-03-25 11:11:38.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null,\n        \"question\": {\n            \"id\": \"1BEvSEWEkQhW\",\n            \"name\": \"Express interests baa\"\n        }\n    },\n    {\n        \"id\": \"gyaqqVKFCGAK\",\n        \"text\": \"Hey\",\n        \"sender\": \"bot\",\n        \"isQA\": false,\n        \"action\": \"next_question\",\n        \"intent\": \"yes_interested\",\n        \"generatedAt\": {\n            \"date\": \"2019-03-22 15:57:14.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"createdAt\": {\n            \"date\": \"2019-03-25 11:10:34.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null,\n        \"question\": {\n            \"id\": \"1BEvSEWEkQhW\",\n            \"name\": \"Express interests baa\"\n        }\n    }\n]\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"value for index 0, part 2 (field) must be one of (transcript.id, transcript.text, transcript.createdAt, transcript.updatedAt, transcript.deletedAt)\",\n    \"code\": 4000101\n}\n```"
                  },
                  "response": []
                }
              ],
              "_postman_id": "a1a9b44c-9ded-4c8e-85bb-402b3b21a6aa",
              "_postman_isSubFolder": true
            },
            {
              "name": "questions",
              "item": [
                {
                  "name": "/v1/jobs/:job/questions",
                  "_postman_id": "1a5be979-7652-4f5b-8855-8fdd61b6aa00",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/jobs/{{jId}}/questions"
                  },
                  "response": []
                }
              ],
              "_postman_id": "de2f3e24-3b1a-442b-9aea-1fc72dc467ee",
              "_postman_isSubFolder": true
            },
            {
              "name": "filters",
              "item": [
                {
                  "name": "/v1/jobs/:job/filters",
                  "_postman_id": "30d8b17a-ce3d-416a-a2e5-ff24f52bbdfc",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"intents\": {\"00l426cQKJw8\" : [\"peaky\", \"blinder\", \"by order of\"], \"10l426cQKJw8\" : [\"panes\", \"trains\", \"automobiles\"]},\n    \"entities\": {\"20l426cQKJw8\" : [\"peaky\", \"blinder\", \"by order of\"], \"30l426cQKJw8\" : [\"panes\", \"trains\", \"automobiles\"]}\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/filters"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/filters",
                  "_postman_id": "6e674425-20e7-4446-aef6-243950132fab",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/jobs/{{jId}}/filters"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/filters/:job_f",
                  "_postman_id": "d416c259-bf33-456e-827e-db75ddc48c3c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"intents\": {\"00l426cQKJw8\" : [\"panes\", \"trains\", \"automobiles\"], \"10l426cQKJw8\" : [\"peaky\", \"blinder\", \"by order of\"]},\n    \"entities\": {\"20l426cQKJw8\" : [\"panes\", \"trains\", \"automobiles\"], \"30l426cQKJw8\" : [\"peaky\", \"blinder\", \"by order of\"]}\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/filters/{{jfId}}"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:job/filters/:job_f",
                  "_postman_id": "e41add3b-d187-4e0c-841d-f5ec16408ecd",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{host}}/v1/jobs/{{jId}}/filters/{{jfId}}"
                  },
                  "response": []
                }
              ],
              "_postman_id": "33c181df-92fc-449a-a6eb-99e3540a290b",
              "_postman_isSubFolder": true
            },
            {
              "name": "vendor",
              "item": [
                {
                  "name": "/v1/job/:job/vendors",
                  "_postman_id": "23a5b3db-bc5b-45ae-8a83-a59644297231",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"vendorId\": \"123\",\n    \"vendor\": \"bullhorn\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/vendors"
                  },
                  "response": []
                },
                {
                  "name": "/v1/job/:job/vendors",
                  "_postman_id": "461f5044-8b04-4923-9d59-d00156195ed0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/jobs/{{jId}}/vendors"
                  },
                  "response": []
                },
                {
                  "name": "/v1/job/:job/vendors",
                  "_postman_id": "7284af88-6c23-418d-a334-b37054e99c6d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{host}}/v1/jobs/{{jId}}/vendors/{{jvId}}"
                  },
                  "response": []
                }
              ],
              "_postman_id": "b6661ae2-b219-4739-903e-b24a79330b27",
              "_postman_isSubFolder": true
            },
            {
              "name": "interact",
              "item": [
                {
                  "name": "/v1/jobs/:id/interact/:serviceType",
                  "_postman_id": "0b8addd2-98d6-4c4f-973f-122931ea2adf",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"candidateId\": \"k6Ro7wfHcMk3\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/interact/calendly"
                  },
                  "response": [
                    {
                      "id": "69ee0abd-a685-4231-abc3-ca3c0268db8b",
                      "name": "/v1/jobs/:id/interact/:serviceType",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"candidateId\": \"k6Ro7wfHcMk3\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{host}}/v1/jobs/dLiJl82QfwvF/interact/calendly"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Server",
                          "value": "nginx/1.21.0"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Transfer-Encoding",
                          "value": "chunked"
                        },
                        {
                          "key": "Connection",
                          "value": "keep-alive"
                        },
                        {
                          "key": "Cache-Control",
                          "value": "no-cache, private"
                        },
                        {
                          "key": "Date",
                          "value": "Wed, 09 Jun 2021 13:26:44 GMT"
                        },
                        {
                          "key": "Access-Control-Allow-Origin",
                          "value": "*"
                        },
                        {
                          "key": "X-Content-Type-Options",
                          "value": "nosniff"
                        },
                        {
                          "key": "Access-Control-Allow-Methods",
                          "value": "POST, GET, OPTIONS, PATCH, PUT, DELETE"
                        },
                        {
                          "key": "Access-Control-Allow-Headers",
                          "value": "Content-Type, X-Auth-Token, X-App-Token, Authorization, Accept"
                        },
                        {
                          "key": "Access-Control-Expose-Headers",
                          "value": "X-Auth-Token-Expires-In, X-Results-Total"
                        },
                        {
                          "key": "X-Service-Name",
                          "value": "assessments-api"
                        },
                        {
                          "key": "X-Debug-Token",
                          "value": "593707"
                        },
                        {
                          "key": "X-Debug-Token-Link",
                          "value": "http://localhost:8001/_profiler/593707"
                        },
                        {
                          "key": "X-Robots-Tag",
                          "value": "noindex"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "\"Interact endpoint\""
                    }
                  ]
                },
                {
                  "name": "/v1/jobs/:id/interact/:serviceType",
                  "_postman_id": "fa8af36c-dc63-43c7-a779-7647fc122794",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{host}}/v1/jobs/51bY5pwQt5Vq/interact/calendly/thy6rm67FtwX"
                  },
                  "response": []
                },
                {
                  "name": "/v1/jobs/:id/interact/:serviceType",
                  "_postman_id": "c90712fa-a781-4981-bc84-d487f033de41",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"candidateId\": \"dXFTLcQAy3XZ\",\n    \"customEmail\": \"<div><img src=/'/ghttps://recii.io/assets/uploads/images/logo.png/'/g alt=/'/gCompany Logo/'/g width=/'/g200/'/g height=/'/g200/'/g /><table style=/'/gborder: none;/'/g border=/'/g0/'/g width=/'/g100%/'/g cellspacing=/'/g0/'/g cellpadding=/'/g0/'/g><tbody><tr><td class=/'/gpadding-copy/'/g style=/'/gpadding: 20px 0 0 0; font-size: 16px; line-height: 25px; font-family: Helvetica, Arial, sans-serif; color: #333333; border: none;/'/g align=/'/gleft/'/g><h1>Acme USA</h1></td></tr><tr><td class=/'/gpadding-copy/'/g style=/'/gpadding: 20px 0 0 0; font-size: 16px; line-height: 25px; font-family: Helvetica, Arial, sans-serif; color: #333333; border: none;/'/g align=/'/gleft/'/g>Hi Kris</td></tr><tr><td class=/'/gpadding-copy/'/g style=/'/gpadding: 20px 0 0 0; font-size: 16px; line-height: 25px; font-family: Helvetica, Arial, sans-serif; color: #333333; border: none;/'/g align=/'/gleft/'/g>Thank you for your interest in the role and speaking with our digital assistant. I would like to invite you to the next stage of the process.</td></tr><tr><td class=/'/gpadding-copy/'/g style=/'/gpadding: 20px 0 0 0; font-size: 16px; line-height: 25px; font-family: Helvetica, Arial, sans-serif; color: #333333; border: none;/'/g align=/'/gleft/'/g>Please use the link below to book a suitable time slot when we can meet.</td></tr><tr><td class=/'/gpadding-copy/'/g style=/'/gpadding: 20px 0 0 0; font-size: 16px; line-height: 25px; font-family: Helvetica, Arial, sans-serif; color: #333333; border: none;/'/g align=/'/gleft/'/g>calendlylink.com</td></tr><tr><td class=/'/gpadding-copy/'/g style=/'/gpadding: 20px 0 0 0; font-size: 16px; line-height: 25px; font-family: Helvetica, Arial, sans-serif; color: #333333; border: none;/'/g align=/'/gleft/'/g>I look forward to meeting with you.</td></tr></tbody></table><table style=/'/gborder: none;/'/g border=/'/g0/'/g width=/'/g100%/'/g cellspacing=/'/g0/'/g cellpadding=/'/g0/'/g><tbody><tr><td class=/'/gpadding-copy/'/g style=/'/gpadding: 40px 0 0 0; font-size: 16px; line-height: 25px; font-family: Helvetica, Arial, sans-serif; color: #333333; border: none;/'/g align=/'/gleft/'/g><strong> sammyh@recii.io </strong></td></tr><tr><td class=/'/gpadding-copy/'/g style=/'/gpadding: 20px 0 0 0; font-size: 16px; line-height: 25px; font-family: Helvetica, Arial, sans-serif; color: #333333; border: none;/'/g align=/'/gleft/'/g><a href=/'/gmailto:support@recii.io/'/g>support@recii.io</a> | +447123456789 | <a href=/'/gsupport.recii.io/'/g>Support Site</a></td></tr><tr><td class=/'/gpadding-copy/'/g style=/'/gpadding: 40px 0 0 0; font-size: 16px; line-height: 25px; font-family: Helvetica, Arial, sans-serif; color: #333333; border: none;/'/g align=/'/gleft/'/g>---</td></tr><tr><td class=/'/gpadding-copy/'/g style=/'/gpadding: 20px 0 0 0; font-size: 16px; line-height: 25px; font-family: Helvetica, Arial, sans-serif; color: #333333; border: none;/'/g align=/'/gleft/'/g><strong>Job Title</strong>: audioID-test</td></tr><tr><td class=/'/gpadding-copy/'/g style=/'/gpadding: 20px 0 0 0; font-size: 16px; line-height: 25px; font-family: Helvetica, Arial, sans-serif; color: #333333; border: none;/'/g align=/'/gleft/'/g><strong>Client</strong>: Elective Technology</td></tr><tr><td class=/'/gpadding-copy/'/g style=/'/gpadding: 20px 0 0 0; font-size: 16px; line-height: 25px; font-family: Helvetica, Arial, sans-serif; color: #333333; border: none;/'/g align=/'/gleft/'/g><strong>Location</strong>:</td></tr><tr><td class=/'/gpadding-copy/'/g style=/'/gpadding: 20px 0 0 0; font-size: 16px; line-height: 25px; font-family: Helvetica, Arial, sans-serif; color: #333333; border: none;/'/g align=/'/gleft/'/g><strong>Brief</strong>:</td></tr></tbody></table></div>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{host}}/v1/jobs/{{jId}}/interact/calendly"
                  },
                  "response": []
                },
                {
                  "name": "/v1//jobs/:jobId/interact/:serviceType/:candidateId",
                  "_postman_id": "2876dec0-c0b0-4e7a-95f9-c24a12c40237",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/jobs/{{jId}}/interact/calendly/{{cId}}"
                  },
                  "response": []
                }
              ],
              "_postman_id": "f98235f1-6b93-42df-8f36-c2f567fd18d7",
              "_postman_isSubFolder": true
            },
            {
              "name": "/v1/jobs",
              "_postman_id": "9df8c023-99dd-4b40-bfe8-7a75b726c928",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Latest Peaky Blinder\",\n    \"candidateSummary\": \"Must be a brummie\",\n    \"brief\": \"By order of the Peaky Blinders!!!\",\n    \"type\": \"\",\n    \"currency\": \"Shillings\",\n    \"salary\": \"2\",\n    \"salaryUnit\": \"week\",\n    \"startDate\": \"\",\n    \"location\": \"Birmingham\",\n    \"keywords\": [\"peaky\", \"blinder\", \"by order of\"],\n    \"remoteWorking\": \"true\",\n    \"otherTypes\": \"true\",\n    \"salaryFlexibility\": \"5\",\n    \"earlierStart\": \"true\",\n    \"noticeFlexibility\": \"4\",\n    \"client\": \"yV46bHVBGuvQ\",\n    \"filters\": {\"00l426cQKJw8\": {\"entities\": [\"peaky\", \"blinder\", \"by order of\"], \"intents\": [\"panes\", \"trains\", \"automobiles\"]}}\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{host}}/v1/jobs",
                "description": "## Create a new job in a collection\n\n`POST /v1/jobs`\n\nPOST Parameters:\n\n* **title** (string), required - Job title\n* **candidateSummary** (text),  - Candidate Summary\n* **brief** (text), - Brief\n* **type** (string), - Type\n* **currency** (string), - Currency\n* **salary** (integer), - Salary\n* **salaryUnit** (string), - Salary Unit\n* **startDate** (string), - Start Date\n* **location** (string), - Location\n* **keywords** (array), - Important keywords\n* **remoteWorking** (boolean), - Allow remote working\n* **otherTypes** (boolean), - Willing to accept other contract types\n* **salaryFlexibility** (string), - Salary flexibility %\n* **earlierStart** (boolean), - Preference for earlier start dates\n* **noticeFlexibility** (integer), - Notice Flexibility (weeks)\n* **client** (string), required - Client id this job is created for\n* **status** (string), - number\n### Request:\n`POST /v1/jobs`\n\n```\n{\n\t\"title\": \"Peaky Blinder\",\n\t\"candidateSummary\": \"Must be a brummie\",\n\t\"brief\": \"By order of the Peaky Blinders!!!\",\n\t\"type\": \"permanent\",\n\t\"currency\": \"Shillings\",\n\t\"salary\": \"2\",\n\t\"salaryUnit\": \"week\",\n    \"startDate\": \"1512486297\",\n\t\"location\": \"Birmingham\",\n\t\"keywords\": [\"peaky\", \"blinder\", \"by order of\"],\n\t\"remoteWorking\": \"true\",\n\t\"otherTypes\": \"true\",\n\t\"salaryFlexibility\": \"5\",\n\t\"earlierStart\": \"true\",\n\t\"noticeFlexibility\": \"4\",\n\t\"status\": \"new\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"assessment\" missing\",\n    \"code\": 400140301\n}\n```\n```\n{\n    \"message\": \"Required parameter \"name\" missing\",\n    \"code\": 400140302\n}\n```\n```\n```\n{\n    \"message\": \"Field assessment failed validation because value: \"61pQvCdLCKI6\" is not valid assessment id\",\n    \"code\": 404140301\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/jobs/:id",
              "_postman_id": "0e43ff98-5344-449d-9f34-9a40ada16d0f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": "{{host}}/v1/jobs/{{jId}}",
                "description": "## Reads Job details\n\n`GET /v1/jobs/:id`\n\nSegment Parameters:\n* **id** (string) - Job id\n\n### Request:\n`GET /v1/jobs/FuEMDRZD0eDX`\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"title\": \"Peaky Blinder\",\n    \"candidateSummary\": \"Must be a brummie\",\n    \"brief\": \"By order of the Peaky Blinders!!!\",\n    \"type\": \"permanent\",\n    \"currency\": \"Shillings\",\n    \"salary\": \"2\",\n    \"salaryUnit\": \"week\",\n    \"startDate\": \"1512486297\",\n    \"location\": \"Birmingham\",\n    \"keywords\": \"peaky, blinder, by order of\",\n    \"remoteWorking\": \"true\",\n    \"otherTypes\": \"true\",\n    \"salaryFlexibility\": \"5\",\n    \"earlierStart\": \"true\",\n    \"noticeFlexibility\": \"4\",\n    \"status\": \"new\"\n    \"createdAt\": {\n        \"date\": \"2019-05-07 09:54:11.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-05-31 10:27:12.785241\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Job not found\",\n    \"code\": 0\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/jobs/vendor/:vendor/:vendorId",
              "_postman_id": "45c70850-a159-49e9-b21d-e744a2e9ff71",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": "{{host}}/v1/jobs/vendor/{{vendor}}/{{vId}}",
                "description": "## Reads Job details\n\n`GET /v1/jobs/:id`\n\nSegment Parameters:\n* **id** (string) - Job id\n\n### Request:\n`GET /v1/jobs/FuEMDRZD0eDX`\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"title\": \"Peaky Blinder\",\n    \"candidateSummary\": \"Must be a brummie\",\n    \"brief\": \"By order of the Peaky Blinders!!!\",\n    \"type\": \"permanent\",\n    \"currency\": \"Shillings\",\n    \"salary\": \"2\",\n    \"salaryUnit\": \"week\",\n    \"startDate\": \"1512486297\",\n    \"location\": \"Birmingham\",\n    \"keywords\": \"peaky, blinder, by order of\",\n    \"remoteWorking\": \"true\",\n    \"otherTypes\": \"true\",\n    \"salaryFlexibility\": \"5\",\n    \"earlierStart\": \"true\",\n    \"noticeFlexibility\": \"4\",\n    \"status\": \"new\"\n    \"createdAt\": {\n        \"date\": \"2019-05-07 09:54:11.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-05-31 10:27:12.785241\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Job not found\",\n    \"code\": 0\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/jobs",
              "_postman_id": "45a1024b-1e50-482c-95c7-1dd73d6ce6c3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{token}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{host}}/v1/jobs",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "v1",
                    "jobs"
                  ],
                  "query": [
                    {
                      "key": "filters[]",
                      "value": "and-job_assessment.id-bool-value-true",
                      "disabled": true
                    },
                    {
                      "key": "filters[]",
                      "value": "and-client.id-eq-value-SnEMGQfxI8Qc",
                      "disabled": true
                    },
                    {
                      "key": "sorts[]",
                      "value": "job.createdAt-DESC",
                      "disabled": true
                    }
                  ]
                },
                "description": "## List Client objects\n\n`GET /v1/clients`\n\nGET Parameters:\n* **filters** (array), optional - One or more filters\n* **sorts** (array), optional - One or more sorting parameters\n* **limit** (integer), optional - Limit on the result set\n* **offset** (integer), optional - Offset on the result set\n* **count** (boolean), optional - If set to true Response:X-Results-Total header will show total count in result set (regardless of any limit and offset set)\n\nFilter Types:\n* **client.id**\n* **client.name**\n* **client.status**\n* **client.organisation**\n* **client.createdAt**\n* **client.updatedAt**\n* **client.deletedAt**\n\nSort Types:\n* **client.id**\n* **client.name**\n* **client.status**\n* **client.createdAt**\n* **client.updatedAt**\n* **client.deletedAt**\n\n### Request:\n`GET /v1/clients`\n\n### Response - 200 OK:\nX-Results-Total 2\n```\n[\n    {\n        \"id\": \"0v2q88rCEEgu\",\n        \"name\": \"Candidate questionnaire\",\n        \"status\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-07 09:54:11.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-05-31 10:27:12.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"0CxQDHFwWpcP\",\n        \"name\": \"new client\",\n        \"status\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-15 14:49:18.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"value for index 0, part 2 (field) must be one of (client.id, client.name, client.createdAt, client.updatedAt, client.deletedAt)\",\n    \"code\": 4000101\n}\n```"
              },
              "response": [
                {
                  "id": "f43b2027-d984-4f1e-b578-c2934dde9b3e",
                  "name": "/v1/assessments",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/assessments"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.10"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Fri, 31 May 2019 10:28:26 GMT"
                    },
                    {
                      "key": "X-Results-Total",
                      "value": "8"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "Access-Control-Allow-Methods",
                      "value": "POST, GET, OPTIONS, PATCH, PUT, DELETE"
                    },
                    {
                      "key": "Access-Control-Allow-Headers",
                      "value": "Content-Type, X-Auth-Token, X-App-Token, Authorization"
                    },
                    {
                      "key": "Access-Control-Expose-Headers",
                      "value": "X-Auth-Token-Expires-In, X-Results-Total"
                    },
                    {
                      "key": "X-Service-Name",
                      "value": "assessments-api"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "2abd9a"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:8001/_profiler/2abd9a"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"id\": \"0v2q88rCEEgu\",\n        \"name\": \"Candidate questionnaire\",\n        \"description\": \"Standard pesonal questionnaire for a quick interview\",\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-07 09:54:11.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": {\n            \"date\": \"2019-05-31 10:27:12.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"0CxQDHFwWpcP\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-15 14:49:18.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"2kL7ByaVCDKQ\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-16 11:59:00.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"E5PClbZto6bK\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-15 14:44:15.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"mAyKxydPIRRe\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-05-15 15:02:31.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"nzOnHCtt4Puh\",\n        \"name\": \"new assessment\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-03-27 17:14:22.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"TlaCrowzLCwl\",\n        \"name\": \"Pesonal questionnaire\",\n        \"description\": null,\n        \"isEnabled\": false,\n        \"createdAt\": {\n            \"date\": \"2019-03-27 14:41:08.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"zeMcv1deIMmS\",\n        \"name\": \"Pesonal questionnaire\",\n        \"description\": \"Standard pesonal questionnaire for a quick interview\",\n        \"isEnabled\": true,\n        \"createdAt\": {\n            \"date\": \"2019-05-31 10:24:23.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]"
                }
              ]
            },
            {
              "name": "/v1/jobs/:id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df20a2c6-7bf8-4007-9dac-95c385f5dda0",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "6a75f619-e719-49c2-965c-3ae99816baf6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Updated Peaky Blinder\",\n    \"candidateSummary\": \"Must be a brummie\",\n    \"brief\": \"By order of the Peaky Blinders!!!\",\n    \"type\": \"permanent\",\n    \"currency\": \"Shillings\",\n    \"salary\": \"2\",\n    \"salaryUnit\": \"week\",\n    \"startDate\": \"1512486297\",\n    \"location\": \"Birmingham\",\n    \"keywords\": [\"peaky\", \"blinder\", \"by order of\"],\n    \"remoteWorking\": \"true\",\n    \"otherTypes\": \"true\",\n    \"salaryFlexibility\": \"5\",\n    \"earlierStart\": \"true\",\n    \"noticeFlexibility\": \"4\",\n    \"status\": \"closed\",\n    \"client\": \"yV46bHVBGuvQ\",\n    \"filters\": {\"00l426cQKJw8\": {\"intents\": [\"peaky\", \"blinder\", \"by order of\"], \"entities\": [\"panes\", \"trains\", \"automobiles\"]}}\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{host}}/v1/jobs/{{jId}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "v1",
                    "jobs",
                    "{{jId}}"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": "",
                      "type": "text",
                      "disabled": true
                    }
                  ]
                },
                "description": "## Update Job in a collection. Applies partial modifications to a Job.\n\n`PATCH /v1/jobs/:id`\n\nSegment Parameters:\n* **id** (string) - Job id\n\nPOST Parameters:\n* **title** (string), optional - Job title\n* **description** (string), optional - Job desctiption\n* **isEnabled** (boolean), optional - Whether job is enabled. Default: true\n* **questions** (array), optional - Ordered Array of Job Questions IDs or Job Question objects. The `orderIndex` will be applied in accordance with order of the items in the array. Items not present in the array will have their `orderIndex` reset to NULL. If array is empty no order will be applied.\n\n### Request:\n`PATCH /v1/jobs/FuEMDRZD0eDX`\n\n```\n{\n\t\"title\": \"Candidate questionnaire\",\n\t\"description\": \"Standard pesonal questionnaire for a quick interview\",\n\t\"isEnabled\": false,\n\t\"questions\": [\n\t\t\"LeAE39QWv2bB\",\n\t    \"MmAE39QWv2bB\",\n\t\t\"OoAE39QWv2bB\"\n\t]\n}\n```\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"0v2q88rCEEgu\",\n    \"title\": \"Candidate questionnaire\",\n    \"description\": \"Standard pesonal questionnaire for a quick interview\",\n    \"isEnabled\": false,\n    \"createdAt\": {\n        \"date\": \"2019-05-07 09:54:11.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-05-31 10:27:12.785241\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Job not found\",\n    \"code\": 0\n}\n```"
              },
              "response": [
                {
                  "id": "0a52f852-6168-4319-9253-00af4bb51e44",
                  "name": "/v1/assessments/:id",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"Candidate questionnaire\"\n}"
                    },
                    "url": "{{host}}/v1/assessments/{{aId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Server",
                      "value": "nginx/1.15.6"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Mar 2019 11:37:15 GMT"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "e81b25"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:8001/_profiler/e81b25"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": \"7Gh1bFZHiZhb\",\n    \"name\": \"Candidate questionnaire\",\n    \"createdAt\": {\n        \"date\": \"2019-03-21 10:05:43.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-03-21 11:37:15.010862\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": {\n        \"date\": \"2019-03-21 10:32:20.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    }\n}"
                }
              ]
            }
          ],
          "_postman_id": "ed7ee069-63de-4551-9ff1-3bf2e8173e1f",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "b4b41dfd-d70d-436b-b543-f31aab04ebd6",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "fa4b647f-4445-490a-9cfc-e040609fd7ae",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "invitations",
          "item": [
            {
              "name": "transcripts",
              "item": [
                {
                  "name": "/v1/invitations/:invitation/transcripts",
                  "_postman_id": "c0a74bba-d41c-4726-a6b5-e67eddc47454",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/invitations/{{iId}}/transcripts",
                    "description": "## List Invitation Transcripts objects\n\n`GET /v1/invitations/:invitation/transcripts`\n\nSegment Parameters:\n* **invitation** (string) - Invitation id that transcript belongs to\n\nGET Parameters:\n* **filters** (array), optional - One or more filters\n* **sorts** (array), optional - One or more sorting parameters\n* **limit** (integer), optional - Limit on the result set\n* **offset** (integer), optional - Offset on the result set\n* **count** (boolean), optional - If set to true Response:X-Results-Total header will show total count in result set (regardless of any limit and offset set)\n\nEntities:\n* **transcript** - Transcript\n* **invitation** - Invitation this Transcript belongs to\n* **question** - Question this transcript is for\n* **a_question** - Assessment Question (Link between Question and instance of the Assessment)\n\nFilter Types:\n* **transcript.id**\n* **transcript.text**\n* **transcript.sender**\n* **transcript.questionId**\n* **transcript.isQA**\n* **transcript.action**\n* **transcript.intent**\n* **transcript.generatedAt**\n* **transcript.createdAt**\n* **transcript.updatedAt**\n* **transcript.deletedAt**\n* **invitation.id**\n* **invitation.createdAt**\n* **invitation.updatedAt**\n* **invitation.deletedAt**\n* **question.id**\n* **question.createdAt**\n* **question.updatedAt**\n* **question.deletedAt**\n\nSort Types:\n* **transcript.id**\n* **transcript.text**\n* **transcript.sender**\n* **transcript.questionId**\n* **transcript.isQA**\n* **transcript.action**\n* **transcript.intent**\n* **transcript.generatedAt**\n* **transcript.createdAt**\n* **transcript.updatedAt**\n* **transcript.deletedAt**\n* **invitation.id**\n* **invitation.createdAt**\n* **invitation.updatedAt**\n* **invitation.deletedAt**\n* **question.id**\n* **question.createdAt**\n* **question.updatedAt**\n* **question.deletedAt**\n* **a_question.id**\n* **a_question.orderIndex**\n* **a_question.createdAt**\n* **a_question.updatedAt**\n* **a_question.deletedAt**\n\n### Request:\n`GET /v1/invitations/SQzWmi0FbhtH/transcripts`\n\n### Response - 200 OK:\nX-Results-Total 2\n```\n[\n    {\n        \"id\": \"KvRwOdKSx3Q0\",\n        \"text\": \"Hey\",\n        \"sender\": \"bot\",\n        \"isQA\": false,\n        \"action\": \"next_question\",\n        \"intent\": \"yes_interested\",\n        \"generatedAt\": {\n            \"date\": \"2019-03-22 15:57:14.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"createdAt\": {\n            \"date\": \"2019-03-25 11:11:38.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null,\n        \"question\": {\n            \"id\": \"1BEvSEWEkQhW\",\n            \"name\": \"Express interests baa\"\n        }\n    },\n    {\n        \"id\": \"gyaqqVKFCGAK\",\n        \"text\": \"Hey\",\n        \"sender\": \"bot\",\n        \"isQA\": false,\n        \"action\": \"next_question\",\n        \"intent\": \"yes_interested\",\n        \"generatedAt\": {\n            \"date\": \"2019-03-22 15:57:14.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"createdAt\": {\n            \"date\": \"2019-03-25 11:10:34.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null,\n        \"question\": {\n            \"id\": \"1BEvSEWEkQhW\",\n            \"name\": \"Express interests baa\"\n        }\n    }\n]\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"value for index 0, part 2 (field) must be one of (transcript.id, transcript.text, transcript.createdAt, transcript.updatedAt, transcript.deletedAt)\",\n    \"code\": 4000101\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/invitations/:invitation/transcripts",
                  "_postman_id": "0be1b76f-08d0-40d1-9afc-121b6f8210f9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"text\": \"Hey\",\n\t\"sender\": \"user\",\n\t\"question\": \"TBeacMXlC5pj\",\n\t\"isQA\": false,\n\t\"generatedAt\": \"1553601346\",\n\t\"action\": \"next_question\",\n\t\"intent\": \"enter_number\",\n\t\"confidence\": 21.25,\n\t\"variation\": \"01fsRENlYtrv\",\n\t\"uuid\": \"{{$guid}}\"\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/invitations/{{iId}}/transcripts",
                    "description": "## Create a new invitation transcript in a collection\n\n`POST /v1/invitations/:invitation/transcripts`\n\nSegment Parameters:\n* **invitation** (string) - Invitation id that transcript belongs to\n\n\nPOST Parameters:\n* **text** (string), required - Transcript text\n* **sender** (string), required - Whether it's a \"bot\" or \"user\"\n* **question** (string), required - Id of the question\n* **isQA** (boolean), required - denotes whether to treat text as genuine question or answer (true). Otherwise its a small talk.\n* **generatedAt** (datetime), required - Date time transcription has occurred in Y-m-d H:i:s format or a valid timestamp. For example: `2019-03-22 15:57:14` or `1553270234`\n* **variation** (string) - variation Id used for this transcript\n* **action** (string), optional - Describes action taken upon transcription\n* **intent** (string), optional - Describes intent of the question/answer\n* **confidence** (float), optional - Describes confidance level from NLU for given response. Only relevnt to *sender* of *user* type\n* **uuid** (string), optional - UUID generated by dialog-manager, if any.\n\n### Request:\n`POST /v1/invitations/Zin3TjGJH1oK/transcripts`\n\n```\n{\n\t\"text\": \"Hey\",\n\t\"sender\": \"bot\",\n\t\"question\": \"1BEvSEWEkQhW\",\n\t\"isQA\": false,\n\t\"generatedAt\": \"2019-03-22 15:57:14.000000\",\n\t\"action\": \"next_question\",\n\t\"intent\": \"yes_interested\",\n\t\"confidence\": 21.25,\n\t\"variation\": \"p9ZQSEYLMn9v\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"gyaqqVKFCGAK\",\n    \"text\": \"Hey\",\n    \"sender\": \"bot\",\n    \"isQA\": false,\n    \"action\": \"next_question\",\n    \"intent\": \"yes_interested\",\n    \"confidence\": 21.25,\n    \"generatedAt\": {\n        \"date\": \"2019-03-22 15:57:14.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"createdAt\": {\n        \"date\": \"2019-03-25 11:10:34.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null,\n    \"question\": {\n        \"id\": \"1BEvSEWEkQhW\",\n        \"name\": \"Express interests baa\"\n    },\n    \"variation\": {\n        \"id\": \"p9ZQSEYLMn9v\"\n    }\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"text\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/invitations/:invitation/transcripts/:id",
                  "_postman_id": "7fd594df-9119-4d35-9a37-586b4df16ca7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"text\": \"This is a new text\",\n\t\"sender\": \"bot\",\n\t\"isQA\": true,\n\t\"action\": \"goodbye\",\n\t\"intent\": \"repeat_question\",\n\t\"generatedAt\": \"2019-03-27 10:00:00\"\n}"
                    },
                    "url": "{{host}}/v1/invitations/{{iId}}/transcripts/{{tId}}",
                    "description": "## Update Invitation Transcript object\n\n`GET /v1/invitations/:invitation/transcripts/:id`\n\nSegment Parameters:\n* **invitation** (string) - Invitation id that transcript belongs to\n* **id** (string) - Transcript id\n\nPOST Parameters:\n* **text** (string) - Assessment text\n* **sender** (string) - sender: either `user` or `bot`\n* **isQA** (boolean) - Whether text is valid Answer or Question\n* **generatedAt** (datetime) - Datetime transcript generated\n* **action** (string) - action to invoke\n* **intent** (string) - intent attached to the transcript\n\n### Request:\n`PATCH /v1/invitations/SQzWmi0FbhtH/transcripts/KvRwOdKSx3Q0`\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"KvRwOdKSx3Q0\",\n    \"text\": \"Hey\",\n    \"sender\": \"bot\",\n    \"isQA\": false,\n    \"action\": \"next_question\",\n    \"intent\": \"yes_interested\",\n    \"generatedAt\": {\n        \"date\": \"2019-03-22 15:57:14.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"createdAt\": {\n        \"date\": \"2019-03-25 11:11:38.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null,\n    \"question\": {\n        \"id\": \"1BEvSEWEkQhW\",\n        \"name\": \"Express interests baa\"\n    }\n}\n```\n\n### Error Response Codes\n`400 - Bad Request`\n```\n{\n    \"message\": \"Invalid action\",\n    \"code\": 0\n}\n```\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Invitation not found\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/invitations/:invitation/transcripts/:id",
                  "_postman_id": "3f6407b3-4822-4d83-9ed5-2c492445c1b1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/invitations/{{iId}}/transcripts/{{tId}}",
                    "description": "## List Invitation Transcripts objects\n\n`GET /v1/invitations/:invitation/transcripts/:id`\n\nSegment Parameters:\n* **invitation** (string) - Invitation id that transcript belongs to\n* **id** (string) - Transcript id\n\n### Request:\n`GET /v1/invitations/SQzWmi0FbhtH/transcripts/KvRwOdKSx3Q0`\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"KvRwOdKSx3Q0\",\n    \"text\": \"Hey\",\n    \"sender\": \"user\",\n    \"isQA\": false,\n    \"action\": \"next_question\",\n    \"intent\": \"enter_number\",\n    \"confidence\": 21.25,\n    \"generatedAt\": {\n        \"date\": \"2019-03-26 11:55:46.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"createdAt\": {\n        \"date\": \"2019-05-09 09:28:36.572318\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null,\n    \"question\": {\n        \"id\": \"BrDdGtwHldcQ\",\n        \"name\": \"Express your interests\"\n    },\n    \"variation\": {\n        \"id\": \"p9ZQSEYLMn9v\"\n    }\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Transcript not found\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/invitations/:invitation/transcripts/:id",
                  "_postman_id": "eeecd1ac-67e9-42a3-ad66-5c29cd1c9271",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": "{{host}}/v1/invitations/{{iId}}/transcripts/{{tId}}",
                    "description": "## Delete Invitation Transcript objects\n\n`GET /v1/invitations/:invitation/transcripts`\n\nSegment Parameters:\n* **invitation** (string) - Invitation id that transcript belongs to\n* **id** (string) - Transcript id\n\n### Request:\n`GET /v1/invitations/SQzWmi0FbhtH/transcripts/KvRwOdKSx3Q0`\n\n### Response - 200 OK:\n```\n{\n    \"resourceId\": \"KvRwOdKSx3Q0\",\n    \"message\": \"Transcript has been successfully deleted\"\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Transcript not found\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                }
              ],
              "_postman_id": "757d779e-24d4-4533-ac99-03315030024d",
              "_postman_isSubFolder": true
            },
            {
              "name": "questions",
              "item": [
                {
                  "name": "/v1/invitations/:invitation/questions",
                  "_postman_id": "8cc48371-d72d-47d5-bb47-d07651943023",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{host}}/v1/invitations/{{iId}}/transcripts",
                    "description": "## List Invitation Questions objects\n\n`GET /v1/invitations/:invitation/questions`\n\nSegment Parameters:\n* **invitation** (string) - Invitation id that question belongs to\n\nGET Parameters:\n* **filters** (array), optional - One or more filters\n* **sorts** (array), optional - One or more sorting parameters\n* **limit** (integer), optional - Limit on the result set\n* **offset** (integer), optional - Offset on the result set\n* **count** (boolean), optional - If set to true Response:X-Results-Total header will show total count in result set (regardless of any limit and offset set)\n\nEntities:\n* **question** - Question\n* **invitation** - Invitation this Question belongs to\n\nFilter Types:\n* **question.id**\n* **question.text**\n* **question.sender**\n* **question.questionId**\n* **question.isQA**\n* **question.action**\n* **question.intent**\n* **question.generatedAt**\n* **question.createdAt**\n* **question.updatedAt**\n* **question.deletedAt**\n* **invitation.id**\n* **invitation.createdAt**\n* **invitation.updatedAt**\n* **invitation.deletedAt**\n* **question.id**\n* **question.createdAt**\n* **question.updatedAt**\n* **question.deletedAt**\n\nSort Types:\n* **question.id**\n* **question.text**\n* **question.sender**\n* **question.questionId**\n* **question.isQA**\n* **question.action**\n* **question.intent**\n* **question.generatedAt**\n* **question.createdAt**\n* **question.updatedAt**\n* **question.deletedAt**\n* **invitation.id**\n* **invitation.createdAt**\n* **invitation.updatedAt**\n* **invitation.deletedAt**\n* **question.id**\n* **question.createdAt**\n* **question.updatedAt**\n* **question.deletedAt**\n* **a_question.id**\n* **a_question.orderIndex**\n* **a_question.createdAt**\n* **a_question.updatedAt**\n* **a_question.deletedAt**\n\n### Request:\n`GET /v1/invitations/SQzWmi0FbhtH/questions`\n\n### Response - 200 OK:\nX-Results-Total 2\n```\n[\n    {\n        \"id\": \"KvRwOdKSx3Q0\",\n        \"text\": \"Hey\",\n        \"sender\": \"bot\",\n        \"isQA\": false,\n        \"action\": \"next_question\",\n        \"intent\": \"yes_interested\",\n        \"generatedAt\": {\n            \"date\": \"2019-03-22 15:57:14.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"createdAt\": {\n            \"date\": \"2019-03-25 11:11:38.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null,\n        \"question\": {\n            \"id\": \"1BEvSEWEkQhW\",\n            \"name\": \"Express interests baa\"\n        }\n    },\n    {\n        \"id\": \"gyaqqVKFCGAK\",\n        \"text\": \"Hey\",\n        \"sender\": \"bot\",\n        \"isQA\": false,\n        \"action\": \"next_question\",\n        \"intent\": \"yes_interested\",\n        \"generatedAt\": {\n            \"date\": \"2019-03-22 15:57:14.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"createdAt\": {\n            \"date\": \"2019-03-25 11:10:34.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null,\n        \"question\": {\n            \"id\": \"1BEvSEWEkQhW\",\n            \"name\": \"Express interests baa\"\n        }\n    }\n]\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"value for index 0, part 2 (field) must be one of (question.id, question.text, question.createdAt, question.updatedAt, question.deletedAt)\",\n    \"code\": 4000101\n}\n```"
                  },
                  "response": []
                }
              ],
              "_postman_id": "c0a1f779-6745-44c9-960f-37cfd9ba2506",
              "_postman_isSubFolder": true
            },
            {
              "name": "validate",
              "item": [
                {
                  "name": "/v1/invitations/verify/:token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e08e834c-d4f2-4a65-b3b1-018558c64851",
                        "exec": [
                          "var jsonData = pm.response.json();\r",
                          "pm.environment.set(\"invokeToken\", jsonData.token);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "741c3b39-c33d-4759-99df-14365a1f89e3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{host}}/v1/invitations/verify/cDOQ1XRAqTKgseCfwrOsZHj935jcqKpEwO1i1ZWy5rTVY3oe?detailed=true",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "v1",
                        "invitations",
                        "verify",
                        "cDOQ1XRAqTKgseCfwrOsZHj935jcqKpEwO1i1ZWy5rTVY3oe"
                      ],
                      "query": [
                        {
                          "key": "detailed",
                          "value": "true"
                        }
                      ]
                    },
                    "description": "## Validates Invitation address\n\n`GET /v1/invitations/verify/:token`\n\nSegment Parameters:\n* **token** (string), required - Token to use for verification\n\n### Request:\n`GET /v1/invitations/verify/J1N8yQRuzG7aJ1N8yQRuzG7aJ1N8yQRuzG7a`\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"p0otGC8jMlSs\",\n    \"phone\": \"+447877557799\"\n}\n```\n\n### Error Response Codes\n`404 - Not Found`\n```\n{\n    \"message\": \"Invitation not found\",\n    \"code\": 404140201\n}\n```"
                  },
                  "response": [
                    {
                      "id": "b92f2949-18e7-4fb6-9255-339474af8e25",
                      "name": "/v1/invitations/verify/:token",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": "https://10f25f13-2738-463b-bddc-2e751d269440.mock.pstmn.io/v1/invitations/verify/cDOQ1XRAqTKgseCfwrOsZHj935jcqKpEwO1i1ZWy5rTVY3oe"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Server",
                          "value": "nginx/1.17.8"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Transfer-Encoding",
                          "value": "chunked"
                        },
                        {
                          "key": "Cache-Control",
                          "value": "no-cache, private"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 30 Jan 2020 09:15:25 GMT"
                        },
                        {
                          "key": "Access-Control-Allow-Origin",
                          "value": "*"
                        },
                        {
                          "key": "X-Content-Type-Options",
                          "value": "nosniff"
                        },
                        {
                          "key": "Access-Control-Allow-Methods",
                          "value": "POST, GET, OPTIONS, PATCH, PUT, DELETE"
                        },
                        {
                          "key": "Access-Control-Allow-Headers",
                          "value": "Content-Type, X-Auth-Token, X-App-Token, Authorization"
                        },
                        {
                          "key": "Access-Control-Expose-Headers",
                          "value": "X-Auth-Token-Expires-In, X-Results-Total"
                        },
                        {
                          "key": "X-Service-Name",
                          "value": "assessments-api"
                        },
                        {
                          "key": "X-Robots-Tag",
                          "value": "noindex"
                        },
                        {
                          "key": "Via",
                          "value": "1.1 google"
                        },
                        {
                          "key": "Alt-Svc",
                          "value": "clear"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"id\": \"06C9PcjzsrdO\",\n    \"phone\": \"+447877552977\",\n    \"jobTitle\": \"Full Stack PHP Developer\",\n    \"jobLocation\": \"London\",\n    \"jobCandidateSummary\": \"My client fundamentally believes that travel shouldn’t damage the Earth so they have made it their mission to install a Electric Vehicle charging point everywhere you park. To make that vision a reality they need the brightest, most tenacious and most inspiring talent in the world – they are growing faster than the market and they need to maintain that velocity - that’s where you come in!\",\n    \"jobBrief\": \"Role activities and responsibilities\\n\\nThey have built a pan-European IoT network of smart charging devices and need a pioneering tech stack to support it with real-time messaging. They also have an industry leading mobile app (built using React Native) offering a green energy ecosystem for their customers and EV drivers.\\n\\nNext hire, Full Stack Developers to help us achieve their mission - you will be working with the latest technology to support their roadmap. Current stack is PHP 7+, Laravel 5.4+, ES6, ReactJS, React Native, most of the AWS resources (Kinesis, Lambda, API Gateway, Elasticsearch etc) and HTML5/CSS3/SASS.\\n\\nYou should be hungry for innovation and keen to explore and utilise all of the tools available to make your work effective, efficient and industry leading. You will work closely with the rest of the software team to build elegant, high performance solutions. You will report into the Head of Software Engineering and will be based near to Old Street Station in London.\\n\\nYour mentality\\n\\nYou’re always learning new technologies and looking to advance your skills\\n\\nYou’re organised and detail-oriented enough to manage projects with many moving parts\\n\\nYou play well with others\\n\\nYou get stuff done, but you also care about the quality of your work\\n\\nWhat you'll have\\n\\nExcellent understanding of PHP 7, working with frameworks such as Laravel, Symfony, etc\\n\\nExcellent understanding of Javascript (ES6), working with frameworks such as ReactJs, Vue, Angular, Node, etc\\n\\nExcellent understanding of SQL and relational databases structures\\n\\nExcellent understanding of HTML & CSS/SASS\\n\\nKnowledge of systems architecture and web technologies, and exposure to scalable, distributed and real-time platforms\\n\\nExperience deploying to AWS cloud infrastructure (ideally using AWS Opsworks & Chef)\\n\\nAbility to review proposals, designs and specifications to ensure they are implementable, proposing suitable alternatives if necessary\\n\\nExperience working within development pipelines and continuous integration\\n\\nExperience working with TDD/BDD\\n\\nExperience working within an Agile software team (SCRUM)\\n\\nGuru of all things Git/Github\\n\\nWhat's “Nice to have” but not essential\\n• Experience working with Craft CMS or Twig templates\\n• Experience with Selenium/Web driver/Nightwatch.js in-browser testing\\n• Experience with React Native\\n• A dog that you can bring into the office\\n• Passionate and knowledgeable about the EV industry\\n\\nBenefits:\\n• Flexible working hours\\n• Casual dress code\\n• Free snacks and drinks\\n• 25 days holiday\\n• Very generous maternity and paternity leave scheme\\n• A fully stocked beer fridge and regular social events (probably too regular)\\n• Pension scheme\\n• Eyecare scheme\\n• Bike to work scheme\\n• Discounted gym membership\\n• An extensive library to provide you with inspiration\\n\\nInterested? In the first instance please apply below. If you can include your CV and examples of your great code that would be awesome.\\n\\nEdison Hill Limited are operating and advertising as an Employment Agency for permanent positions and as an Employment Business for interim / contract / temporary positions. Edison Hill Limited are an Equal Opportunities employer and we encourage applicants from all backgrounds.PLEASE ENSURE THAT THE JOB REFERENCE NUMBER APPEARS IN THE SUBJECT BOX\",\n    \"candidateFirstName\": null,\n    \"clientName\": \"Trump Digital\",\n    \"clientBrandColour\": null,\n    \"companyName\": \"Elective\"\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "64196862-5f35-4d15-97e2-0b0357cc9a32",
              "_postman_isSubFolder": true
            },
            {
              "name": "recordings",
              "item": [
                {
                  "name": "/v1/invitations/:invitation/recordings",
                  "_postman_id": "594c70fb-a0d6-4c2a-bb12-35d04b6a962c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"filename\": \"ma2T3pjO4N5xRulp1ZYGQTK0pIPASZ95.mp3\",\n    \"bucket\": \"s-assessments-answer-recordings\",\n    \"generatedAt\": \"2019-03-22 15:57:14.000000\",\n    \"mimeType\": \"audio/mpeg\",\n    \"uuid\": \"{{$guid}}\"\n}"
                    },
                    "url": "{{host}}/v1/invitations/{{iId}}/recordings",
                    "description": "## Create a new AnswerRecording in a collection\n\n`POST /v1/invitations/:invitation/recordings`\n\nSegment Parameters:\n* **invitation** (string) - Invitation id that recording belongs to\n\n\nPOST Parameters:\n* **filename** (string), required - Name of the file\n* **bucket** (string), required - Name of the bucket\n* **mimeType** (string), required - File mime-type\n* **generatedAt** (datetime), required - Date time transcription has occurred in Y-m-d H:i:s format or a valid timestamp. For example: `2019-03-22 15:57:14` or `1553270234`\n* **uuid** (string), optional - UUID generated by dialog-manager, if any.\n\n### Request:\n`POST /v1/invitations/Zin3TjGJH1oK/recordings`\n\n```\n{\n\t\"filename\": \"ma2T3pjO4N5xRulp1ZYGQTK0pIPASZ95.mp3\",\n\t\"generatedAt\": \"2019-03-22 15:57:14.000000\",\n\t\"uuid\": \"8219cd84-dcc3-448c-8d33-93c1bbdcc0c1\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"gyaqqVKFCGAK\",\n\t\"filename\": \"ma2T3pjO4N5xRulp1ZYGQTK0pIPASZ95.mp3\",\n    \"bucket\": \"s-assessments-answer-recordings\",\n    \"mimeType\": \"audio/mpeg\",\n\t\"uuid\": \"8219cd84-dcc3-448c-8d33-93c1bbdcc0c1\"\n    \"generatedAt\": {\n        \"date\": \"2019-03-22 15:57:14.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"createdAt\": {\n        \"date\": \"2019-03-25 11:10:34.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"filename\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/invitations/:invitation/recordings/:recording/stream",
                  "_postman_id": "fd3367e5-af68-489e-bdb7-6f81616d8660",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{token}}"
                      }
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "url": "{{host}}/v1/invitations/{{iId}}/recordings/{{rId}}/stream",
                    "description": "## Create a new AnswerRecording in a collection\n\n`POST /v1/invitations/:invitation/recordings`\n\nSegment Parameters:\n* **invitation** (string) - Invitation id that recording belongs to\n\n\nPOST Parameters:\n* **filename** (string), required - Name of the file\n* **generatedAt** (datetime), required - Date time transcription has occurred in Y-m-d H:i:s format or a valid timestamp. For example: `2019-03-22 15:57:14` or `1553270234`\n* **uuid** (string), optional - UUID generated by dialog-manager, if any.\n\n### Request:\n`POST /v1/invitations/Zin3TjGJH1oK/recordings`\n\n```\n{\n\t\"filename\": \"ma2T3pjO4N5xRulp1ZYGQTK0pIPASZ95.mp3\",\n\t\"generatedAt\": \"2019-03-22 15:57:14.000000\",\n\t\"uuid\": \"8219cd84-dcc3-448c-8d33-93c1bbdcc0c1\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"gyaqqVKFCGAK\",\n\t\"filename\": \"ma2T3pjO4N5xRulp1ZYGQTK0pIPASZ95.mp3\",\n\t\"uuid\": \"8219cd84-dcc3-448c-8d33-93c1bbdcc0c1\"\n    \"generatedAt\": {\n        \"date\": \"2019-03-22 15:57:14.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"createdAt\": {\n        \"date\": \"2019-03-25 11:10:34.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"filename\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/invitations/:invitation/recordings/:recording",
                  "_postman_id": "31989d26-824a-486a-a021-09ee31353f7c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{token}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{host}}/v1/invitations/{{iId}}/recordings/{{rId}}?remove=true",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "v1",
                        "invitations",
                        "{{iId}}",
                        "recordings",
                        "{{rId}}"
                      ],
                      "query": [
                        {
                          "key": "remove",
                          "value": "true"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "4f01e93e-31d2-45dd-a19a-0c87d76ee3f3",
              "_postman_isSubFolder": true
            },
            {
              "name": "labels",
              "item": [
                {
                  "name": "/v1/invitations/:invitation/labels",
                  "_postman_id": "4f1b4ee1-d257-4363-a991-67a463231fd9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"label\": \"fGqyjfBKiA3a\"\n}"
                    },
                    "url": "{{host}}/v1/invitations/{{iId}}/labels",
                    "description": "## Create a new Assessment Job in a collection\n\n`POST /v1/assessments/:assessment/jobs`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nPOST Parameters:\n* **job** (string), required - Job Id\n\n### Request:\n`POST /v1/assessments/TlaCrowzLCwl/jobs`\n\n```\n{\n\t\"job\": \"XLTJ9TC9XrNS\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"LeAE39QWv2bB\",\n    \"assessmentId\": \"TlaCrowzLCwl\",\n    \"jobId\": \"XLTJ9TC9XrNS\",\n    \"orderIndex\": null,\n    \"createdAt\": {\n        \"date\": \"2019-03-27 14:42:01.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-06-04 15:19:56.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"job\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/invitations/:invitation/labels",
                  "_postman_id": "c6fd6a26-faba-44f2-a97d-72ee568dbe32",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{host}}/v1/invitations/{{iId}}/labels?detailed=true",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "v1",
                        "invitations",
                        "{{iId}}",
                        "labels"
                      ],
                      "query": [
                        {
                          "key": "detailed",
                          "value": "true"
                        }
                      ]
                    },
                    "description": "## Create a new Assessment Job in a collection\n\n`POST /v1/assessments/:assessment/jobs`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nPOST Parameters:\n* **job** (string), required - Job Id\n\n### Request:\n`POST /v1/assessments/TlaCrowzLCwl/jobs`\n\n```\n{\n\t\"job\": \"XLTJ9TC9XrNS\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"LeAE39QWv2bB\",\n    \"assessmentId\": \"TlaCrowzLCwl\",\n    \"jobId\": \"XLTJ9TC9XrNS\",\n    \"orderIndex\": null,\n    \"createdAt\": {\n        \"date\": \"2019-03-27 14:42:01.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-06-04 15:19:56.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"job\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                },
                {
                  "name": "/v1/invitations/:invitation/labels",
                  "_postman_id": "acefcb0c-8744-47a6-8db5-f4bf6047b98b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{host}}/v1/invitations/{{iId}}/labels/{{ilId}}",
                    "description": "## Create a new Assessment Job in a collection\n\n`POST /v1/assessments/:assessment/jobs`\n\nSegment Parameters:\n* **assessment** (string) - Assessment id\n\nPOST Parameters:\n* **job** (string), required - Job Id\n\n### Request:\n`POST /v1/assessments/TlaCrowzLCwl/jobs`\n\n```\n{\n\t\"job\": \"XLTJ9TC9XrNS\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"LeAE39QWv2bB\",\n    \"assessmentId\": \"TlaCrowzLCwl\",\n    \"jobId\": \"XLTJ9TC9XrNS\",\n    \"orderIndex\": null,\n    \"createdAt\": {\n        \"date\": \"2019-03-27 14:42:01.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-06-04 15:19:56.000000\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"job\" missing\",\n    \"code\": 0\n}\n```"
                  },
                  "response": []
                }
              ],
              "_postman_id": "13f7bbf6-c440-47af-9c9a-4143621135f8",
              "_postman_isSubFolder": true
            },
            {
              "name": "/v1/invitations",
              "_postman_id": "62891a54-b0eb-4eeb-90cf-1c5938def294",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{host}}/v1/invitations",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "v1",
                    "invitations"
                  ],
                  "query": [
                    {
                      "key": "filters[]",
                      "value": "and-candidate.firstName-inci-value-chris",
                      "disabled": true
                    }
                  ]
                },
                "description": "## List Invitation objects\n\n`GET /v1/invitations`\n\nGET Parameters:\n* **filters** (array), optional - One or more filters\n* **sorts** (array), optional - One or more sorting parameters\n* **limit** (integer), optional - Limit on the result set\n* **offset** (integer), optional - Offset on the result set\n* **count** (boolean), optional - If set to true Response:X-Results-Total header will show total count in result set (regardless of any limit and offset set)\n\nFilter Types:\n* **invitation.id**\n* **invitation.createdAt**\n* **invitation.updatedAt**\n* **invitation.deletedAt**\n\nSort Types:\n* **invitation.id**\n* **invitation.createdAt**\n* **invitation.updatedAt**\n* **invitation.deletedAt**\n\n### Request:\n`GET /v1/invitations`\n\n### Response - 200 OK:\nX-Results-Total 2\n```\n[\n    {\n        \"id\": \"2RPN5xIjrqBO\",\n        \"createdAt\": {\n            \"date\": \"2019-03-11 12:26:12.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    },\n    {\n        \"id\": \"OmEAbFFFlRQa\",\n        \"createdAt\": {\n            \"date\": \"2019-03-11 13:30:28.000000\",\n            \"timezone_type\": 3,\n            \"timezone\": \"UTC\"\n        },\n        \"updatedAt\": null,\n        \"deletedAt\": null\n    }\n]\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"value for index 0, part 2 (field) must be one of (invitation.id, invitation.createdAt, assessment.updatedAt, invitation.deletedAt)\",\n    \"code\": 4000101\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/invitations",
              "_postman_id": "aa5bb447-e3c5-429f-b1b2-c5c85fe0a2a6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"assessment\": \"0dr4OflqaeyF\",\n\t\"name\": \"Jo Black\",\n\t\"email\": \"chrisd@recii.io\",\n\t\"phone\": \"+447877557799\",\n\t\"status\": \"invited\"\n}"
                },
                "url": "{{host}}/v1/invitations",
                "description": "## Create a new invitation in a collection\n\n`POST /v1/invitations`\n\nPOST Parameters:\n* **assessment** (string), required - Assessment id this invitation will be send for\n* **name** (string), required - Neme of the Person to use for this assessment\n* **email** (string), required - Email to send assessment to\n* **phone** (string), required - Phone number to use for assessment\n\n### Request:\n`POST /v1/invitations`\n\n```\n{\n\t\"assessment\": \"61pQvCdLCKI6\",\n\t\"name\": \"John Doe\",\n\t\"email\": \"joh.doe@example.com\",\n\t\"phone\": \"+447877557788\"\n}\n```\n\n### Response - 201 Created:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": null,\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"assessment\" missing\",\n    \"code\": 400140301\n}\n```\n```\n{\n    \"message\": \"Required parameter \"name\" missing\",\n    \"code\": 400140302\n}\n```\n```\n{\n    \"message\": \"Required parameter \"email\" missing\",\n    \"code\": 400140303\n}\n```\n```\n{\n    \"message\": \"Required parameter \"phone\" missing\",\n    \"code\": 400140304\n}\n```\n```\n{\n    \"message\": \"Field phone failed validation because ..\",\n    \"code\": 400140305\n}\n```\n```\n{\n    \"message\": \"Field assessment failed validation because value: \"61pQvCdLCKI6\" is not valid assessment id\",\n    \"code\": 404140301\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/invitations/:id",
              "_postman_id": "b75e1adb-a49f-45d3-985e-a9e59ea8976b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/v1/invitations/{{iId}}",
                "description": "## Reads Invitation details\n\n`GET /v1/invitations/:id`\n\nSegment Parameters:\n* **id** (string) - Invitation id\n\n### Request:\n`GET /v1/invitations/FuEMDRZD0eDX`\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Invitation not found\",\n    \"code\": 0\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/invitations/:id",
              "_postman_id": "b9c5b6a6-b053-4dd2-b9a3-f0de7ef80aef",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{token}}"
                  }
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"status\": \"completed\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{host}}/v1/invitations/9bWoGNWlgpj2",
                "description": "## Update invitation in a collection. Applies partial modifications to a Invitation.\n\n`PATCH /v1/invitations/:id`\n\nSegment Parameters:\n* **id** (string) - Invitation id\n\nPOST Parameters:\n\n\n### Request:\n`PATCH /v1/invitations/FuEMDRZD0eDX`\n\n```\n\n```\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Invitation not found\",\n    \"code\": 0\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/invitations/:id",
              "_postman_id": "17a6f226-b27c-4a2f-aa04-cf8d5bed8526",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": "{{host}}/v1/invitations/{{iId}}",
                "description": "## Delete Invitation from Collection\n\n`DELETE /v1/invitations/:id`\n\nSegment Parameters:\n* **id** (string) - Invitation id\n\n### Request:\n`DELETE /v1/invitations/FuEMDRZD0eDX`\n\n### Response - 200 OK:\n```\n{\n    \"resourceId\": \"FuEMDRZD0eDX\",\n    \"message\": \"Invitation has been successfully deleted\"\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Invitation not found\",\n    \"code\": 0\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/invitations/:invitation/reset",
              "_postman_id": "1d3b4453-f6b2-45f5-a59d-a3dc6a0c0ab1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": "{{host}}/v1/invitations/{{iId}}/reset",
                "description": "## Reads Invitation details\n\n`GET /v1/invitations/:id`\n\nSegment Parameters:\n* **id** (string) - Invitation id\n\n### Request:\n`GET /v1/invitations/FuEMDRZD0eDX`\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Invitation not found\",\n    \"code\": 0\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/invitations/:invitation/emails",
              "_postman_id": "318b4546-91f7-4ec5-a25f-4c17bb66fc5f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"subject\": \"Don't miss out on the Dev Ops opportunity! Complete your application today.\",\n\t\"template\": \"emails/invitations/remind.html.twig\",\n\t\"data\": {\n\t\t\"title\": \"Arrows\",\n\t\t\"preHeader\": \"Don't miss out on the Dev Ops opportunity! Complete your application today.\",\n\t\t\"companyName\": \"Arrows\"\n\t}\n}"
                },
                "url": "{{host}}/v1/invitations/{{iId}}/emails",
                "description": "## Reads Invitation details\n\n`GET /v1/invitations/:id`\n\nSegment Parameters:\n* **id** (string) - Invitation id\n\n### Request:\n`GET /v1/invitations/FuEMDRZD0eDX`\n\n### Response - 200 OK:\n```\n{\n    \"id\": \"FuEMDRZD0eDX\",\n    \"createdAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"updatedAt\": {\n        \"date\": \"2019-03-11 12:21:10.870067\",\n        \"timezone_type\": 3,\n        \"timezone\": \"UTC\"\n    },\n    \"deletedAt\": null\n}\n```\n\n### Error Response Codes\n\n`404 - Not Found`\n```\n{\n    \"message\": \"Invitation not found\",\n    \"code\": 0\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/invitations/:invitation/call",
              "_postman_id": "1a986127-33c4-4c23-a4f1-262d1c34d5d6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"phone\": \"+447877885588\"\n}"
                },
                "url": "{{host}}/v1/invitations/{{iId}}/call",
                "description": "## Request a call for Invitation\n\n`POST /v1/invitations/:invitation/call`\n\nSegment Parameters:\n* **invitation** (string) - Invitation id\n\n\nPOST Parameters:\n* **phone** (string), required - Phone number to call\n\n### Request:\n`POST /v1/invitations/FuEMDRZD0eDX/call`\n\n```\n{\n\t\"phone\": \"+447877557788\"\n}\n```\n\n### Response - 202 Accepted:\n```\n{\n    \"message\": \"Call request has been accepted\",\n    \"code\": 202\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"phone\" missing\",\n    \"code\": 400140306\n}\n```\n```\n{\n    \"message\": \"Field phone failed validation because the UK international numbering plan should start with a +44, followed by the phone number with the leading 0 removed. Length Min:7 Max:13\",\n    \"code\": 400140307\n}\n```\n`404 - Not Found`\n```\n{\n    \"message\": \"Invitation not found\",\n    \"code\": 404140201\n}\n```\n`500 - Server Error`\n```\n{\n    \"message\": \"Could not initiate call. Error message received from dialer: ...\",\n    \"code\": 500140301\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/invitations/:invitation/sms",
              "_postman_id": "352c8e3c-0b9e-4385-b79c-e75893c47d9e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"phone\": \"+447877552977\"\n}"
                },
                "url": "{{host}}/v1/invitations/{{iId}}/sms",
                "description": "## Request a sms assessment for Invitation\n\n`POST /v1/invitations/:invitation/sms`\n\nSegment Parameters:\n* **invitation** (string) - Invitation id\n\n\nPOST Parameters:\n* **phone** (string), required - Phone number to sms\n\n### Request:\n`POST /v1/invitations/FuEMDRZD0eDX/sms`\n\n```\n{\n\t\"phone\": \"+447877557788\"\n}\n```\n\n### Response - 202 Accepted:\n```\n{\n    \"message\": \"SMS request has been accepted\",\n    \"code\": 202\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"phone\" missing\",\n    \"code\": 400140306\n}\n```\n```\n{\n    \"message\": \"Field phone failed validation because the UK international numbering plan should start with a +44, followed by the phone number with the leading 0 removed. Length Min:7 Max:13\",\n    \"code\": 400140307\n}\n```\n`404 - Not Found`\n```\n{\n    \"message\": \"Invitation not found\",\n    \"code\": 404140201\n}\n```\n`500 - Server Error`\n```\n{\n    \"message\": \"Could not initiate sms. Error message received from messaging: ...\",\n    \"code\": 500140302\n}\n```"
              },
              "response": []
            },
            {
              "name": "/v1/invitations/:invitation/invoke",
              "_postman_id": "d55b82f5-e264-493f-aa74-b16466ebf63b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{invokeToken}}"
                  }
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"channelType\": \"phone\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{host}}/v1/invitations/{{iId}}/invoke",
                "description": "## Request a sms assessment for Invitation\n\n`POST /v1/invitations/:invitation/sms`\n\nSegment Parameters:\n* **invitation** (string) - Invitation id\n\n\nPOST Parameters:\n* **phone** (string), required - Phone number to sms\n\n### Request:\n`POST /v1/invitations/FuEMDRZD0eDX/sms`\n\n```\n{\n\t\"phone\": \"+447877557788\"\n}\n```\n\n### Response - 202 Accepted:\n```\n{\n    \"message\": \"SMS request has been accepted\",\n    \"code\": 202\n}\n```\n\n### Error Response Codes\n\n`400 - Bad Request`\n```\n{\n    \"message\": \"Required parameter \"phone\" missing\",\n    \"code\": 400140306\n}\n```\n```\n{\n    \"message\": \"Field phone failed validation because the UK international numbering plan should start with a +44, followed by the phone number with the leading 0 removed. Length Min:7 Max:13\",\n    \"code\": 400140307\n}\n```\n`404 - Not Found`\n```\n{\n    \"message\": \"Invitation not found\",\n    \"code\": 404140201\n}\n```\n`500 - Server Error`\n```\n{\n    \"message\": \"Could not initiate sms. Error message received from messaging: ...\",\n    \"code\": 500140302\n}\n```"
              },
              "response": []
            }
          ],
          "_postman_id": "a1763f98-06c1-49f3-97cb-d4d69ed87748",
          "_postman_isSubFolder": true
        },
        {
          "name": "subscriptions",
          "item": [
            {
              "name": "dialer",
              "item": [
                {
                  "name": "assessment-answer-recording",
                  "item": [
                    {
                      "name": "/v1/subscriptions/dialer/assessment-answer-recording/created",
                      "_postman_id": "3ef68799-d2b5-4c3f-ac9c-409c51c15281",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{gcpToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJ1dWlkIjoiYjU5ZjRhYzYtYzVkNy00MDY3LTk0MTAtMzg4YzNjNTI2Mjg2IiwiaW52aXRhdGlvbl9pZCI6IkM5dXJOZzNaQkxmRSIsImdlbmVyYXRlZEF0IjoiMjAxNS0wMi0xMSAyMzowNTo0NyIsImZpbGVuYW1lIjoiYTJjNjVmNjRlNzZhNzg4NTM4MDQzNmQ2NjE0OTQyMGUubXAzIiwgIm1pbWVUeXBlIjoiYXVkaW8vbXBlZyIsICJidWNrZXQiOiAicy1hc3Nlc3NtZW50cy1hbnN3ZXItcmVjb3JkaW5ncyJ9\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-dialer-assessment-answer-recording-created-assessments-api\"\n}\n"
                        },
                        "url": "{{host}}/v1/subscriptions/dialer/assessment-answer-recording/created"
                      },
                      "response": []
                    },
                    {
                      "name": "/v1/subscriptions/dialer/assessment-call/failed",
                      "_postman_id": "93feaf11-5585-4067-933f-b304065e5735",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{gcpToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJpbnZpdGF0aW9uX2lkIjoiVHExTk0yd2Y2c0RSIiwgInJlYXNvbiI6ImZhaWxlZCJ9\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-dialer-assessment-answer-assessment-call-failed-assessments-api\"\n}\n"
                        },
                        "url": "{{host}}/v1/subscriptions/dialer/assessment-call/failed"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "4e084f4d-e9fb-4d3d-8ef0-9a55dd19e349",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "d2999d9c-7890-4bfb-b2d7-909ae4297835",
              "_postman_isSubFolder": true
            },
            {
              "name": "candidates-api",
              "item": [
                {
                  "name": "/v1/subscriptions/candidates/candidate/updated",
                  "_postman_id": "0da36fe4-8b30-416e-8052-741ab6a471a2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJpYXQiOjE2MDA5NDkyMzIsImV4cCI6MTc1ODcxNTY0OCwiYXVkIjoiT3NpVzZrR2ZoUU93VEFDNE51Unk0anI2Iiwic3ViIjoiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tIiwiZW1haWwiOiJrcmlzQHJlY2lpLmlvIn0.bJeEwwfwwhzzhT36jJNcMw1SBS042hTUlb-mD0TUIFE"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJjYW5kaWRhdGVJZCI6IjVXSE9ud2xYYXlnZiIsInN0YXR1cyI6ImRvTm90Q29udGFjdCJ9\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-candidates-api-candidate-created-assessments-api\"\n}\n",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/subscriptions/candidates/candidates/updated"
                  },
                  "response": []
                },
                {
                  "name": "/v1/subscriptions/candidates/candidates/create",
                  "_postman_id": "39cf2bc7-8b95-41b0-a943-f6763c0bd71d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJjYW5kaWRhdGVJZCI6IjlxZXpMN2w2aVBBZyIsImVtYWlsIjoiamFuZS5kb2VAZXhhbXBsZS5jb20ifQ==\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-dialer-assessment-answer-recording-created-assessments-api\"\n}\n"
                    },
                    "url": "{{host}}/v1/subscriptions/candidates/candidates/created"
                  },
                  "response": []
                },
                {
                  "name": "/v1/subscriptions/candidates/candidates/quickstart",
                  "_postman_id": "f7f5d961-e37e-48f5-9bec-e692164a6d06",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{gcpToken}}"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJjYW5kaWRhdGUiOiAiTVlHOTV4NXpKNHZ3IiwgImpvYiI6ICIwSUFRd1dQaVFDU0EiLCJjYW5kaWRhdGVOYW1lIjogIkNocmlzIiwiY2FuZGlkYXRlRW1haWwiOiAiY2hyaXNAcmVjaWkuaW8ifQ==\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-candidates-api-candidate-quickstart-assessments-api\"\n}\n",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/subscriptions/candidates/candidates/quickstart"
                  },
                  "response": []
                },
                {
                  "name": "/v1/subscriptions/candidates/candidates/gdpr-request",
                  "_postman_id": "65c8652f-cbf9-48e3-8a94-3e55bac4e1cc",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{gcpToken}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJjYW5kaWRhdGVJZCI6IlZ5STEyU2hlZkNMWSIsImVtYWlsIjoiY2hyaXNkKzUwOTJAcmVjaWkuaW8ifQ==\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-candidates-api-candidate-quickstart-assessments-api\"\n}\n",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/subscriptions/candidates/candidates/gdpr-request"
                  },
                  "response": []
                }
              ],
              "_postman_id": "506b513a-e6ef-4ad2-9fd2-333265ffb988",
              "_postman_isSubFolder": true
            },
            {
              "name": "labels-api",
              "item": [
                {
                  "name": "/v1/subscriptions/labels/labels/updated",
                  "_postman_id": "4a25d85e-6d2e-4c94-9fb8-6d7cff276683",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{gcpToken}}"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJpZCI6ImR6b2cyckg3Z282aiJ9\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-labels-api-label-updated-assessments-api\"\n}\n"
                    },
                    "url": "{{host}}/v1/subscriptions/labels/labels/updated"
                  },
                  "response": []
                },
                {
                  "name": "/v1/subscriptions/labels/labels/deleted",
                  "_postman_id": "d9c15030-456d-42b6-aeaa-b891425a2f7f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{gcpToken}}"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJpZCI6ImR6b2cyckg3Z282aiJ9\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-labels-api-label-deleted-assessments-api\"\n}\n"
                    },
                    "url": "{{host}}/v1/subscriptions/labels/labels/deleted"
                  },
                  "response": []
                }
              ],
              "_postman_id": "54b9afe7-1f24-46c9-8834-6c5ffbc9b601",
              "_postman_isSubFolder": true
            },
            {
              "name": "suitability-analyser",
              "item": [
                {
                  "name": "/invitation-score/calculated",
                  "_postman_id": "ca44b003-0a3f-4c02-9204-be6772d81bb7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{gcpToken}}"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJpbnZpdGF0aW9uSWQiOiAiUUMyaDNRbDg4MmVBIiwgInNjb3JlVG90YWwiOiAwLjUyODMwMjkyODY4NTg2MjUsICJzY29yZU9wdGltaXNlZCI6IDAuNzcyNDA2MzQzMjc2MDczOH0=\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-suitability-analyser-invitation-score-calculated-assessments-api\"\n}\n"
                    },
                    "url": "{{host}}/v1/subscriptions/suitability-analyser/invitation-score/calculated"
                  },
                  "response": []
                }
              ],
              "_postman_id": "b19f5fa5-27bc-40b5-93e1-6841e0a84ae4",
              "_postman_isSubFolder": true
            },
            {
              "name": "dialog-manager",
              "item": [
                {
                  "name": "/invitation/status/updated",
                  "_postman_id": "0fd9df44-7f9b-4e18-bcaa-bb06d35cca30",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJpYXQiOjE2MDA5NDkyMzIsImV4cCI6MTc1ODcxNTY0OCwiYXVkIjoiT3NpVzZrR2ZoUU93VEFDNE51Unk0anI2Iiwic3ViIjoiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tIiwiZW1haWwiOiJrcmlzQHJlY2lpLmlvIn0.bJeEwwfwwhzzhT36jJNcMw1SBS042hTUlb-mD0TUIFE"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"ewogICAgImludml0YXRpb25JZCI6ICIwekxRd01mTGdTbkUiLAogICAgInN0YXR1cyI6ICJjb21wbGV0ZWQiLAogICAgInVwZGF0ZWRBdCI6ICIyMDE5LTExLTIwIDIyOjIxOjIyIgp9\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-dialog-manager-invitation-status-updated-assessments-api\"\n}\n",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/subscriptions/dialog-manager/invitation/status/updated"
                  },
                  "response": []
                },
                {
                  "name": "/invitation/engaged",
                  "_postman_id": "5c5e7bd6-a4fd-4933-a2fd-bcad8494dab7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{gcpToken}}"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJpbnZpdGF0aW9uX2lkIjoiSDFXMVdOaDUxNTBPIiwiY2hhbm5lbF9pZCI6IndlYi1jaGF0IiwiZW5nYWdlZF9hdCI6IjIwMjAtMDMtMDZUMTA6MjQ6MzguNzI5MjQyNTkyWiJ9\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-dialog-manager-invitation-engaged-assessments-api\"\n}\n"
                    },
                    "url": "{{host}}/v1/subscriptions/dialog-manager/invitation/engaged"
                  },
                  "response": []
                },
                {
                  "name": "/control-message/created",
                  "_postman_id": "8e3fc4f3-bd0a-41ae-a24c-1f4b74db45a8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{gcpToken}}"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"ew0KICAgICJpbnZpdGF0aW9uSUQiOiAibFE0NjVFSHp1N0g5IiwNCiAgICAicmVmZXJyZXIiOiAid2ViLWNoYXQiLA0KICAgICJtZXNzYWdlVHlwZSI6IDEsDQogICAgImNvZGUiOiAyLA0KICAgICJkaWFsb2d1ZSI6IHsNCiAgICAgICAgImlkeCI6IDEsDQogICAgICAgICJxdWVzdGlvbklkIjogIkh4UHRRblN3ZzZvaCIsDQogICAgICAgICJ2YXJpYXRpb25JZCI6ICJPY0lMbGhCTHJOZXMiLA0KICAgICAgICAiY29udGVudCI6ICJFdXJvcGUgb3IgVVNBIg0KICAgIH0sDQogICAgImludGVudCI6IHsNCiAgICAgICAgImNvbmZpZGVuY2UiOiAwLA0KICAgICAgICAibmFtZSI6ICIiLA0KICAgICAgICAiYWN0aW9uIjogIiINCiAgICB9LA0KICAgICJ0cmFuc2NyaXB0Ijogew0KICAgICAgICAiaWR4IjogMCwNCiAgICAgICAgImRhdGEiOiB7DQogICAgICAgICAgICAibGVuZ3RoIjogMCwNCiAgICAgICAgICAgICJjb25maWRlbmNlIjogMCwNCiAgICAgICAgICAgICJzdWlkIjogIiINCiAgICAgICAgfSwNCiAgICAgICAgInJlc3VsdCI6ICJNeSBlbWFpbCBhZGRyZXNzIGlzIGtyaXNAcmVjaWkuaW8gYW5kIHBob25lIG51bWJlciBpcyAwNzg3NzU1Mjk3NyIsDQogICAgICAgICJlcnJvciI6ICIiDQogICAgfSwNCiAgICAiZXJyb3IiOiBudWxsLA0KICAgICJ0aW1lc3RhbXAiOiAiMjAyMC0wNi0wM1QxMjo1MzoyNC40MjdaIiwNCiAgICAiYWdlbnRJbmZvIjogIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84My4wLjQxMDMuNjEgU2FmYXJpLzUzNy4zNiIsDQogICAgInByb2dyZXNzSWRlbnRpZmllciI6IDAsDQogICAgImNvbm5lY3Rpb25JRCI6ICIwNTJkNzUwMy1lZWJlLTQ2MDYtODc1Ni03NmYzMzU0MmU4ZDEiDQp9\",\n        \"messageId\": \"236969347002\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-dialogue-manager-control-message-created-assessments-api\"\n}\n",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/subscriptions/dialog-manager/control-message/created"
                  },
                  "response": []
                }
              ],
              "_postman_id": "ee5d242b-5462-48e4-9589-70829d52cc1e",
              "_postman_isSubFolder": true
            },
            {
              "name": "assessments",
              "item": [
                {
                  "name": "reminders",
                  "item": [
                    {
                      "name": "job",
                      "item": [
                        {
                          "name": "created",
                          "_postman_id": "7527033b-a148-4604-b703-d0d47af49a98",
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          },
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": {
                                "token": "{{gcpToken}}"
                              }
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJpZCI6InBINWhIT2luSHRudSIsImpvYklkIjoiMloyckt4d1ozWG9kIiwib3JnYW5pc2F0aW9uIjoiRHM3cTBlQmkySXl5IiwgIm9yZ2FuaXNhdGlvbklkIjogImVsZWN0aXZlIn0=\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-assessments-job-reminder-created-assessments-api\"\n}\n",
                              "options": {
                                "raw": {}
                              }
                            },
                            "url": "{{host}}/v1/subscriptions/assessments/reminders/job/created"
                          },
                          "response": []
                        }
                      ],
                      "_postman_id": "c5bd0eb5-49e2-4e75-a6de-7ec5a5459fb2",
                      "_postman_isSubFolder": true
                    },
                    {
                      "name": "engagement",
                      "item": [
                        {
                          "name": "created",
                          "_postman_id": "3340514c-3366-4e38-a669-8320da373f4f",
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          },
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": {
                                "token": "{{gcpToken}}"
                              }
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJpZCI6ImtQOTlTOVY4cTRucSIsImVuZ2FnZW1lbnRJZCI6IkhlYmZhWDNPU29ncyIsIm9yZ2FuaXNhdGlvbiI6ImVsZWN0aXZlIiwgIm9yZ2FuaXNhdGlvbklkIjogIkRzN3EwZUJpMkl5eSJ9\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-assessments-engagement-reminder-created-assessments-api\"\n}\n",
                              "options": {
                                "raw": {}
                              }
                            },
                            "url": "{{host}}/v1/subscriptions/assessments/reminders/engagement/created"
                          },
                          "response": []
                        }
                      ],
                      "_postman_id": "c186040c-277a-4925-93c0-5d3d0b6f4302",
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_id": "97cd3d80-d711-49ec-87d8-e421a14ec10b",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "transcript-recording",
                  "item": [
                    {
                      "name": "created",
                      "_postman_id": "2f1a0c8b-db45-4886-b3a5-2677e790fb9e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{gcpToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJSZWNvcmRpbmdJZCI6IkI5S2YwTUVIbFBhSiIsInV1aWQiOiIwOGQwMjhiOS0zMjQzLTRjMjUtOTk4My01ZTU4MzgxZDhhZTIiLCJpbnZpdGF0aW9uSWQiOiIwNmJPbTJHeEF3OTkifQ==\",\n        \"messageId\": \"136969346970\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-assessments-transcript-recording-created-assessments-api\"\n}\n",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{host}}/v1/subscriptions/assessments/transcript-recording/created"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "ee8c331f-e659-4f8a-a007-5f957d9d5b12",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "engagements",
                  "item": [
                    {
                      "name": "subscriptions/assessments/engagements/archive",
                      "_postman_id": "d0901c0a-0998-4306-b9d6-cafd79e3cd26",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{gcpToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJpZCI6ICI0eEJ1TGpoSGMzRzUifQ==\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-assessments-engagement-archive-assessments-api\"\n}\n",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{host}}/v1/subscriptions/assessments/engagements/archive"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "6154f4fb-e37c-4dff-b616-462c03bbd5db",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "jobs",
                  "item": [
                    {
                      "name": "subscriptions/assessments/jobs/closed",
                      "_postman_id": "708b52cc-07f0-453b-9b97-bb24ffbde546",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{gcpToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJpZCI6IndDYW42T0dhYVN5eiIsImpvYklkIjoiU3lkVElhTG1GQTlrIiwib3JnYW5pc2F0aW9uIjoiRHM3cTBlQmkySXl5IiwgIm9yZ2FuaXNhdGlvbklkIjogImVsZWN0aXZlIn0=\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-assessments-engagement-archive-assessments-api\"\n}\n",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{host}}/v1/subscriptions/assessments/engagements/archive"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "ebb53cb0-b868-4091-9f66-b1693067371d",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "da8a3b25-acd6-46b8-b2f4-1110a1f81d1d",
              "_postman_isSubFolder": true
            },
            {
              "name": "nam",
              "item": [
                {
                  "name": "transcript-recording",
                  "item": [
                    {
                      "name": "created",
                      "_postman_id": "81a95a62-dc8f-4d82-a68d-96ca4e2a7b70",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{gcpToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"CQ0KeyJ1dWlkIjoiMDhkMDI4YjktMzI0My00YzI1LTk5ODMtNWU1ODM4MWQ4YWUyIiwiaW52aXRhdGlvbl9pZCI6IjA2Yk9tMkd4QXc5OSIsImdlbmVyYXRlZEF0IjoiMjAyMC0wNi0wOVQxMToxMzo1Ni4xNTkzNTY2MzVaIiwiZmlsZW5hbWUiOiIwOGQwMjhiOS0zMjQzLTRjMjUtOTk4My01ZTU4MzgxZDhhZTIud2F2IiwibWltZVR5cGUiOiJhdWRpby93YXZlIiwiYnVja2V0Ijoicy1hc3Nlc3NtZW50cy1hbnN3ZXItcmVjb3JkaW5ncyJ9\",\n        \"messageId\": \"136969346967\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-nam-transcript-recording-created-assessments-api\"\n}\n",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{host}}/v1/subscriptions/nam/transcript-recording/created"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "b20dc677-44bf-47f3-9a12-71047d422e2c",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "2ccf7636-775d-4494-9852-7388627c5b12",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "002c942e-f2f8-439f-8127-5b2c1927d6a7",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "db30bd3c-bc25-48f2-a9c2-66ec30f21c48",
              "_postman_isSubFolder": true
            },
            {
              "name": "config-api",
              "item": [
                {
                  "name": "/channels/created",
                  "_postman_id": "d2a5ebe4-3b57-4a93-a87b-aa1a0d7f7467",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{gcpToken}}"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJpZCI6ImtMdDg0QnRtcVBPWSIsImNoYW5uZWxUeXBlIjoic21zIiwib3JnYW5pc2F0aW9uIjoiZlJuRlBXVFF5TE1sIiwibmFtZSI6IlNNUyBDaGVubmVsIFNldHRpbmdzIiwiaXNJbnZpdGF0aW9uRW5hYmxlZCI6ZmFsc2UsImlzQXNzZXNzbWVudEVuYWJsZWQiOmZhbHNlLCJhc3Nlc3NtZW50VHlwZSI6ImFsbCIsImNyZWF0ZWRBdCI6eyJkYXRlIjoiMjAyMC0wNy0xNCAxNjoyNzo1NC45NzM4ODAiLCJ0aW1lem9uZV90eXBlIjozLCJ0aW1lem9uZSI6IlVUQyJ9LCJ1cGRhdGVkQXQiOm51bGwsImRlbGV0ZWRBdCI6bnVsbH0=\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-config-api-channel-created-assessments-api\"\n}\n",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/subscriptions/config-api/channels/created"
                  },
                  "response": []
                }
              ],
              "_postman_id": "8cf6280a-3e5e-4ee2-bdf4-0a1b4e1c8c7e",
              "_postman_isSubFolder": true
            },
            {
              "name": "shortlinks",
              "item": [
                {
                  "name": "/v1/subscriptions/shortlinks/shortlinks/updated",
                  "_postman_id": "17f1e12a-154f-46a8-83a6-463a1fcbaa19",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{gcpToken}}"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJzaG9ydGxpbmtJZCI6ImZNc2p4ZlF4In0=\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-shortlink-api-shortlink-updated-assessments-api\"\n}\n",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/subscriptions/shortlinks/shortlinks/updated"
                  },
                  "response": []
                }
              ],
              "_postman_id": "9ab70dcd-b2f2-42f7-a863-08749bb65094",
              "_postman_isSubFolder": true
            },
            {
              "name": "acl",
              "item": [
                {
                  "name": "/v1/subscriptions/acl/organisations/updated",
                  "_postman_id": "9a9256a7-557e-44e9-b127-48c87e31b8c5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{gcpToken}}"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJpZCI6InRsdjNNdDVzNFozSCIsIm5hbWUiOiJJbnRlcm5hbCIsIm5hbWVzcGFjZSI6ImludGVybmFsIn0=\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-acl-api-organisations-updated-assessments-api\"\n}\n",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/subscriptions/acl/organisations/updated"
                  },
                  "response": []
                }
              ],
              "_postman_id": "e375644a-b38f-4ec6-b371-917381ef0d6f",
              "_postman_isSubFolder": true
            },
            {
              "name": "webhooks",
              "item": [
                {
                  "name": "jobs",
                  "item": [
                    {
                      "name": "/v1/subscriptions/webhooks/jobs/created",
                      "_postman_id": "2a0d9f75-66b2-4af7-8d17-03bb53f128fc",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJpYXQiOjE2MDA5NDkyMzIsImV4cCI6MTc1ODcxNTY0OCwiYXVkIjoiT3NpVzZrR2ZoUU93VEFDNE51Unk0anI2Iiwic3ViIjoiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tIiwiZW1haWwiOiJrcmlzQHJlY2lpLmlvIn0.bJeEwwfwwhzzhT36jJNcMw1SBS042hTUlb-mD0TUIFE"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"ewogICAgInZlbmRvciI6ICJidWxsaG9ybiIsCiAgICAidmVuZG9ySWQiOiAiY2hyaXMtam9iLTIiLAogICAgIm9yZ2FuaXNhdGlvbiI6ICJqWkZ5TzhHTElaaVEiLAogICAgImV2ZW50VHlwZSI6ICJ1cGRhdGVkIiwKICAgICJldmVudEVudGl0eSI6ICJqb2IiLAogICAgImV2ZW50IjogeyAidGl0bGUiOiAiQ2hyaXMtam9iIDJ4IiwiY2xpZW50Ijp7InZlbmRvciI6ImJ1bGxob3JuIiwidmVuZG9ySWQiOiJiaC1jbGllbnQxIiwib3JnYW5pc2F0aW9uIjoialpGeU84R0xJWmlRIn19Cn0=\",\n        \"messageId\": \"136969346946\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-webhooks-api-job-created-assessments-api\"\n}\n",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{host}}/v1/subscriptions/webhooks/jobs/created"
                      },
                      "response": []
                    },
                    {
                      "name": "/v1/subscriptions/webhooks/jobs/updated",
                      "_postman_id": "4ac1c8e4-1496-4922-9d6f-684837dc087d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJpYXQiOjE2MDA5NDkyMzIsImV4cCI6MTc1ODcxNTY0OCwiYXVkIjoiT3NpVzZrR2ZoUU93VEFDNE51Unk0anI2Iiwic3ViIjoiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tIiwiZW1haWwiOiJrcmlzQHJlY2lpLmlvIn0.bJeEwwfwwhzzhT36jJNcMw1SBS042hTUlb-mD0TUIFE"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"ewogICAgInZlbmRvciI6ICJidWxsaG9ybiIsCiAgICAidmVuZG9ySWQiOiAiY2hyaXMtam9iLTIiLAogICAgIm9yZ2FuaXNhdGlvbiI6ICJqWkZ5TzhHTElaaVEiLAogICAgImV2ZW50VHlwZSI6ICJ1cGRhdGVkIiwKICAgICJldmVudEVudGl0eSI6ICJqb2IiLAogICAgImV2ZW50IjogeyAidGl0bGUiOiAiQ2hyaXMtam9iIDJ4In0KfQ==\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-webhooks-api-job-updated-assessments-api\"\n}\n",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{host}}/v1/subscriptions/webhooks/jobs/updated"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "416e13fd-66f9-43ca-b2da-3248194a8b70",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "clients",
                  "item": [
                    {
                      "name": "/v1/subscriptions/webhooks/clients/created",
                      "_postman_id": "6b00223a-4e05-4767-ac5c-ac86d04d3890",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJpYXQiOjE2MDA5NDkyMzIsImV4cCI6MTc1ODcxNTY0OCwiYXVkIjoiT3NpVzZrR2ZoUU93VEFDNE51Unk0anI2Iiwic3ViIjoiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tIiwiZW1haWwiOiJrcmlzQHJlY2lpLmlvIn0.bJeEwwfwwhzzhT36jJNcMw1SBS042hTUlb-mD0TUIFE"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJ2ZW5kb3IiOiAiYnVsbGhvcm4iLCAidmVuZG9ySWQiIDogIjEyMzQiLCAib3JnYW5pc2F0aW9uIjogInJqWEJNbW53Wkp5SyIsICJjbGllbnQiOiB7Im5hbWUiIDogIkFtYXpvbiJ9fQ==\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-webhooks-api-client-created-assessments-api\"\n}\n",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{host}}/v1/subscriptions/webhooks/clients/created"
                      },
                      "response": []
                    },
                    {
                      "name": "/v1/subscriptions/webhooks/clients/updated",
                      "_postman_id": "283109f5-c35e-40ce-88f0-f5dc24b6f4af",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJpYXQiOjE2MDA5NDkyMzIsImV4cCI6MTc1ODcxNTY0OCwiYXVkIjoiT3NpVzZrR2ZoUU93VEFDNE51Unk0anI2Iiwic3ViIjoiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tIiwiZW1haWwiOiJrcmlzQHJlY2lpLmlvIn0.bJeEwwfwwhzzhT36jJNcMw1SBS042hTUlb-mD0TUIFE"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJ2ZW5kb3IiOiAiYnVsbGhvcm4iLCAidmVuZG9ySWQiIDogIjEyMzQiLCAib3JnYW5pc2F0aW9uIjogIiIsICJjbGllbnQiOiB7Im5hbWUiIDogIkFtYXpvbiJ9fQ==\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-webhooks-api-client-created-assessments-api\"\n}\n",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{host}}/v1/subscriptions/webhooks/clients/updated"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "02259caf-8212-4b4b-a4f3-547b024826ee",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "engagements",
                  "item": [
                    {
                      "name": "/v1/subscriptions/webhooks/engagements/created",
                      "_postman_id": "c17c9b01-d9ac-4ea8-a082-f12ffaa3b56b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJpYXQiOjE2MDA5NDkyMzIsImV4cCI6MTc1ODcxNTY0OCwiYXVkIjoiT3NpVzZrR2ZoUU93VEFDNE51Unk0anI2Iiwic3ViIjoiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tIiwiZW1haWwiOiJrcmlzQHJlY2lpLmlvIn0.bJeEwwfwwhzzhT36jJNcMw1SBS042hTUlb-mD0TUIFE"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"ewogICJ2ZW5kb3JJZCI6ICJidWxsaG9ybklkIiwKICAidmVuZG9yIjogImJ1bGxob3JuIiwKICAib3JnYW5pc2F0aW9uIjogInJqWEJNbW53Wkp5SyIsCiAgImV2ZW50IjogewogICAgImNhbmRpZGF0ZSI6IHsKICAgICAgICAiaWQiOiAiYWJjMTIzIiwKICAgICAgICAidmVuZG9yIjogImJ1bGxob3JuIiwKICAgICAgICAidmVuZG9ySWQiOiAieHl6MTIzIgogICAgICB9LAogICAgImpvYiI6IHsKICAgICAgInZlbmRvciI6ICJidWxsaG9ybiIsCiAgICAgICJ2ZW5kb3JJZCI6ICJqdjciCiAgICB9CiAgfQp9\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-webhooks-api-client-created-assessments-api\"\n}\n",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{host}}/v1/subscriptions/webhooks/engagements/created"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "15e147f1-8e1d-4473-a45b-cff493aae9c2",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "9642c2d9-eedb-461d-ba12-02192d871fa5",
              "_postman_isSubFolder": true
            },
            {
              "name": "cache",
              "item": [
                {
                  "name": "/v1/subscriptions/cache/clear",
                  "_postman_id": "ce2a1a0b-42bb-445a-ac85-4fd74231f958",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"message\": {\n        \"attributes\": {\n            \"key\": \"value\"\n        },\n        \"data\": \"eyJpZCI6ImN0N3F2V0RrZ3FzYyIsICJtb2RlbE5hbWUiOiJjYW5kaWRhdGUifQ==\",\n        \"messageId\": \"136969346945\"\n    },\n    \"subscription\": \"projects/connect-f7e5b/subscriptions/s-acl-api-organisation-updated-candidates-api\"\n}\n",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{host}}/v1/subscriptions/cache/clear"
                  },
                  "response": []
                }
              ],
              "_postman_id": "54ec118a-387b-4251-a0f4-4e979cf2056c",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "c13c2ca3-c773-4d17-93df-860af8172cd6",
          "_postman_isSubFolder": true
        },
        {
          "name": "columns",
          "item": [
            {
              "name": "/v1/columns/invitations",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c13c2a6c-fe90-4357-925e-58304bf322df",
                    "exec": [
                      "// Get environment",
                      "var env = pm.environment.get(\"env\")",
                      "var meanResponseTime = 40",
                      "",
                      "//Get meanResponseTime",
                      "switch(env) {",
                      "  case \"dev\":",
                      "  case \"staging\":",
                      "    meanResponseTime = 1000",
                      "    break;",
                      "  default:",
                      "    meanResponseTime = 40",
                      "}",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Body contains array\", function () {",
                      "    pm.response.to.have.jsonBody([",
                      "    \"invited\",",
                      "    \"inProgress\",",
                      "    \"completed\",",
                      "    \"attentionRequired\"",
                      "]);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "a5d8a21c-e871-467f-b9d9-9bb14412db93",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/v1/columns/invitations",
                "description": "## Test endpoint for API integration. This should always return 200."
              },
              "response": []
            },
            {
              "name": "/v1/columns/engagements",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c13c2a6c-fe90-4357-925e-58304bf322df",
                    "exec": [
                      "// Get environment",
                      "var env = pm.environment.get(\"env\")",
                      "var meanResponseTime = 40",
                      "",
                      "//Get meanResponseTime",
                      "switch(env) {",
                      "  case \"dev\":",
                      "  case \"staging\":",
                      "    meanResponseTime = 1000",
                      "    break;",
                      "  default:",
                      "    meanResponseTime = 40",
                      "}",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Body contains array\", function () {",
                      "    pm.response.to.have.jsonBody([",
                      "    \"invited\",",
                      "    \"inProgress\",",
                      "    \"completed\",",
                      "    \"attentionRequired\"",
                      "]);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "7eb2d64d-3f7a-42ce-aab6-e55e0418731d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/v1/columns/engagements",
                "description": "## Test endpoint for API integration. This should always return 200."
              },
              "response": []
            },
            {
              "name": "/v1/columns/jobs",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c13c2a6c-fe90-4357-925e-58304bf322df",
                    "exec": [
                      "// Get environment",
                      "var env = pm.environment.get(\"env\")",
                      "var meanResponseTime = 40",
                      "",
                      "//Get meanResponseTime",
                      "switch(env) {",
                      "  case \"dev\":",
                      "  case \"staging\":",
                      "    meanResponseTime = 1000",
                      "    break;",
                      "  default:",
                      "    meanResponseTime = 40",
                      "}",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Body contains array\", function () {",
                      "    pm.response.to.have.jsonBody([",
                      "    \"invited\",",
                      "    \"inProgress\",",
                      "    \"completed\",",
                      "    \"attentionRequired\"",
                      "]);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "441e125f-373d-49a2-931a-af6f9d124c8f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{host}}/v1/columns/jobs",
                "description": "## Test endpoint for API integration. This should always return 200."
              },
              "response": []
            }
          ],
          "_postman_id": "bd3bfea3-6e73-43e5-ba04-d419c423c69e",
          "_postman_isSubFolder": true
        },
        {
          "name": "candidates",
          "item": [
            {
              "name": "/v1/candidates",
              "_postman_id": "21637a21-8dc5-45ae-8424-7077e11d5b11",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{token}}"
                  }
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{host}}/v1/candidates",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "v1",
                    "candidates"
                  ],
                  "query": [
                    {
                      "key": "sorts[]",
                      "value": "engagement.createdAt-desc",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "1000",
                      "disabled": true
                    },
                    {
                      "key": "count",
                      "value": "true",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "1000",
                      "type": "text",
                      "disabled": true
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "0f762703-f846-4c47-85fd-9b50c3b2a995",
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "63021f09-6a40-423d-ae57-95b4f3770c78",
      "description": "## Error Codes:\nThere are two types of codes: Generic **4010001** (7 digits) and Specific **500090101** (9 digits) with following patterns: SSSEECC and SSSPPEECC respectivelly.\n**SSS** - This is HTTP equivalent, i.e. 401, 404, 500\n**PP** - Denotes project id, 14 for Assesspent API\n**EE** - Denotes entity id\n**CC** - Denotes unique error code for this entity\n\n### List of codes:\n\n**400140301** - \"Required parameter \"assessment\" missing\" - Bad Request.\n**400140302** - \"Required parameter \"name\" missing\" - Bad Request.\n**400140303** - \"Required parameter \"email\" missing\" - Bad Request.\n**400140304** - \"Required parameter \"phone\" missing\" - Bad Request.\n**400140305** - \"Field phone failed validation because ..\" - Bad Request.\n**404140201** - \"Invitation not found\" - Not Found.\n**404140301** - \"Field assessment failed validation because value: is not valid assessment id\" - Bad Request.",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "ce2bb50a-70de-44ee-a0ab-f3ec3640931a",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "24c4ed65-485d-42e8-baf5-3f5cfd2f5b18",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": {
      "token": "{{token}}"
    }
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "2b3a81cc-6c07-4aef-b61b-ad3db1e4c351",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "9d00ff76-322c-43d1-970f-9d4ef8f5c394",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}